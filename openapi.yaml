swagger: '2.0'
info:
  version: v1
  title: Optimo.WebAPI
host: localhost
basePath: /Optimo.WebAPI
schemes:
  - http
paths:
  /api/v4.1/assets/Asset-Overview:
    head:
      tags:
        - Assets
      summary: Assets   Overview
      description: "An Asset is an abstract type, which holds generic information related to Facility, Resource and Branding Area types.\r\n        \r\n<img class=\"img-responsive\" alt=\"Asset Model\" src=\"images/asset-model.png\"></img>\r\n        \r\nAll assets belong to a venue and one venue only. However, resources may be temporarily moved and included in events in different venues. \r\n         \r\nAssets can be booked through the relevant type of asset item, e.g. a resource may be booked through a <a href=\"ResourceItem\">ResourceItem</a>, which also controls its price. Pricing can be based on hours, half days and days as well as per person or fixed for the duration of an event. OPTIMO will automatically calculate the price based on the duration, time of the day, day of the week and any discounts or promotions.  \r\n         \r\nAssets availability is controlled through <a href=\"Timeslot\">Timeslots</a>, which are created when an asset is booked, added to an event, blocked, used for setup or teardown or added to an enquiry. Some facility types are further controlled by a table plan, seating chart or parking plan. \r\n         \r\nWhen an asset is used in a public event, the asset's capacity (applicable for facilities and resources) determines how many bookings can be taken for it. When an asset is used in private event, it can normally only be booked by one customer at a time. However, for assets which are defined as shareable (through the EnableSharing flag), they can be included in multiple private - as well as public - events at any given time.  \r\n         \r\nIn order to avoId operational overlaps it is possible to attach default setup and teardown times to assets, which can be further adjusted at time of booking. \r\n         \r\nAn asset group is a special type of asset which can be used to group near Identical assets together, e.g. 1000 round tables or 20 garages. When making a booking for an asset group, the required quantity needs to be specified. An asset group is recognised by having a LinkedAssets collection populated with sub assets. All included sub assets must be of same type and category."
      operationId: Assets_AssetOverview
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.Asset.Result.Asset'
  /api/v4.1/assets/BrandingArea-Overview:
    head:
      tags:
        - Assets
      summary: Assets   Overview - Branding Areas
      description: "A Branding Area is an asset sub type that represents branding areas such as billboards, flags or media centre backdrops.\r\n        \r\n<img class=\"img-responsive\" alt=\"Asset Model\" src=\"images/asset-model-branding-area.png\"></img>\r\n        \r\nJust like other <code>assets</code>, branding areas can have dimensions defined and default setup and teardown times. \r\n         \r\nCapacity is used slightly differently for branding areas as a branding area normally can either be booked or not. However, some branding areas may be shared where applicable, e.g. electronic billboards. In such cases, capacity indicates number of bookings (as opposed to number of people)."
      operationId: Assets_BrandingAreaOverview
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.Asset.Result.BrandingArea'
  /api/v4.1/assets/Facility-Overview:
    head:
      tags:
        - Assets
      summary: Assets   Overview - Facilities
      description: "A Facility is an asset sub type that represents facility space in a venue where some activity takes place, such as restaurants, meetings rooms, stands etc. A facility may not necessarily be rooms but could also be things like fields, sports courts, driving circuits or parking areas.\r\n                 \r\n<img class=\"img-responsive\" alt=\"Asset Model\" src=\"images/asset-model-facility.png\"></img>\r\n        \r\nA facility may have many <a href=\"Configuration\">configurations</a>, but must have one default configuration. There are five types of configurations:\r\n         \r\n1. <a href=\"Configuration\">Seating Chart Configuration</a>\r\n2. <a href=\"Configuration\">Dining (Table Plan) Configuration</a>\r\n3. <a href=\"Configuration\">Private Suite Configuration</a>\r\n4. <a href=\"Configuration\">General Admission Configuration</a>\r\n5. <a href=\"Configuration\">Parking Space Configuration</a>\r\n         \r\nSome facility attributes, like capacity, setup and teardown times are defined at configuration level only. Dimensions are specified at facility level but can be overridden at configuration."
      operationId: Assets_FacilityOverview
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.Asset.Result.Facility'
  /api/v4.1/assets/Resource-Overview:
    head:
      tags:
        - Assets
      summary: Assets   Overview - Resources
      description: "A Resource ia an asset sub type that represents resources, such as A/V equipment, vehicles, furniture or instructors. \r\n        \r\n<img class=\"img-responsive\" alt=\"Asset Model\" src=\"images/asset-model-resource.png\"></img>\r\n        \r\nResources can be flagged as being a human resource, e.g. instructors, speakers or performers. A human resource may be linked to a system user, who may then be able to view personalised schedules based on resource bookings. \r\n         \r\nNote that, just as any other asset, resources can only be booked for a period of time and never sold. As a guIdeline, any external resources that are hired in occasionally should not be set up as a Resource, but as a Service. \r\n         \r\nResource capacity is often mistakenly seen as the number of resources available (Asset Group should be used in this instance) rather than how many people it caters for. Capacity is not always relevant for resources, e.g. it would rarely be possible to determine how many people a projector or speaker can handle. In such cases, capacity may be left undetermined."
      operationId: Assets_ResourceOverview
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.Asset.Result.Resource'
  /api/v4.1/assets:
    get:
      tags:
        - Assets
      summary: Assets - List
      description: "Returns a list of <a href=\"http://145.239.206.89:8085/V4.4.0/WebAPI/DEV/swagger/#!/Assets/Assets_AssetOverview\">Asset</a> records, which can be either of type Facility, Resource or Branding Area.\r\n\r\nA number of parameters are available to narrow down the list, please see below. For most scenarios, it is recommended to use sparse field sets and only required includes, in order to optimise resonse times. \r\n\r\nWhile this operation may be used for a wide array of scenarios, a popular use case is to display facilities which are available to book on a public website. To do so, you should set the following parameters:\r\n\r\n- assetClassoptimoId: 1 (Facility)\r\n- salesChannelId: 5 (Internet)\r\n- ActiveStatus: 1 (Active)\r\n\r\nYou may also want to filter based on capacity and requested time. \r\n\r\nFor listing available facilities on a public website, you may want to include information about capacity, short descriptions and a thumbnail. An example request is shown below. \r\n\r\nSupported includes:\r\n\r\n- Venue \r\n- Documents \r\n- Multimedia\r\n- Owner\r\n- Facility.Configurations\r\n- Amenities\r\n            \r\nSorting as per json:api specification. Supported sort fields:\r\n\r\n- Id\r\n- Name\r\n- AssetClass\r\n- AssetType\r\n- AssetCategory\r\n- Venue.Id\r\n- Venue.Name\r\n- AuditInfo.DateCreated"
      operationId: Assets_GetList
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: sort
          in: query
          required: false
          type: string
        - name: fields
          in: query
          required: false
          type: string
        - name: include
          in: query
          required: false
          type: string
        - name: filters.searchText
          in: query
          description: >-
            Partial match search covering Name, Description, Keywords, Asset
            Type and Asset Category
          required: false
          type: string
        - name: filters.assetName
          in: query
          description: Partial match
          required: false
          type: string
        - name: filters.keywords
          in: query
          description: Match one or more keywords (send multiple keywords comma separated)
          required: false
          type: string
        - name: filters.venueId
          in: query
          description: >-
            The venue which the asset belongs to. Multiple venue Ids may be sent
            comma separated.
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.capacityFrom
          in: query
          description: >-
            Applies only to Facility (considering all configurations) and
            Resource records.
          required: false
          type: integer
          format: int32
        - name: filters.capacityTo
          in: query
          description: >-
            Applies only to Facility (considering all configurations) and
            Resource records.
          required: false
          type: integer
          format: int32
        - name: filters.eventID
          in: query
          description: Must be a public event
          required: false
          type: integer
          format: int32
        - name: filters.assetClassId
          in: query
          description: 1-Facility, 2-Resource, 3-Branding Area
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.assetTypeId
          in: query
          description: >-
            Filter by one or more asset types (Facility Type, Resource Type or
            Branding Area Type) in a comma separated list.
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.assetCategoryId
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.configurationTypeId
          in: query
          description: Configurations are only applicable for Facility type assets
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.configurationCategoryId
          in: query
          description: Configurations are only applicable for Facility type assets
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.activeStatus
          in: query
          description: 1-Only Active, 2-Only Inactive, 3-All
          required: false
          type: string
          enum:
            - OnlyActive
            - OnlyInactive
            - All
        - name: filters.duration
          in: query
          description: >-
            Use duration (in minutes) in conjunction with start and end time
            filters to find an available asset.
          required: false
          type: integer
          format: int32
        - name: filters.startTime
          in: query
          description: >-
            In order to find available assets for a given time, use start and
            end time filters as well as duration
          required: false
          type: string
          format: date-time
        - name: filters.endTime
          in: query
          description: >-
            In order to find available assets for a given time, use start and
            end time filters as well as duration
          required: false
          type: string
          format: date-time
        - name: filters.salesChannelID
          in: query
          description: 'If retrieving assets to book online, filter by sales channel ID: 5'
          required: false
          type: integer
          format: int32
        - name: filters.considerOpeningHours
          in: query
          description: >-
            When filtering by availability, this flag can be set to take opening
            hours into account.
          required: false
          type: boolean
        - name: filters.salesCategoryId
          in: query
          description: >-
            In order to find assets linked to items matching a given sales
            category, use this filter.
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.assetIds
          in: query
          description: >-
            To retrieve details about a list of known assets, provide asset Ids
            in comma separated format
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: filters.priceConcessionIds
          in: query
          description: To find assets linked to items with a a specific price concession
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: filters.bookingTypeIds
          in: query
          description: To find assets suitable for a given booking type
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: filters.considerPreliminaryAsUnavailable
          in: query
          description: >-
            When filtering for available assets within a period, you can use
            this option to treat preliminarily booked assets as unavailable.
          required: false
          type: boolean
        - name: filters.itemTypeIds
          in: query
          description: To find assets linked to items of a specific item type
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: page.number
          in: query
          required: false
          type: string
        - name: page.size
          in: query
          required: false
          type: string
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Optimo.WebAPI.Models.Asset.Result.Asset'
        '304':
          description: Not modified
        '400':
          description: Bad request - Check the detailed message for more information
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User does not have permission to view assets
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
  /api/v4.1/assets/{id}:
    get:
      tags:
        - Assets
      summary: Assets - Select
      description: "Returns a single <a href=\"V4.4.0/WebAPI/DEV/swagger/#!/Assets/Assets_AssetOverview\">Asset</a> record, which can be either of type Facility, Resource or Branding Area.\r\n\r\nSupported includes:\r\n\r\n- Venue \r\n- Documents \r\n- Multimedia\r\n- Owner\r\n- Facility.Configurations\r\n- LinkedAssets"
      operationId: Assets_GetSingle
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
        - name: fields
          in: query
          required: false
          type: string
        - name: include
          in: query
          required: false
          type: string
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.Asset.Result.Asset'
        '304':
          description: Not modified
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User does not have permission to view assets
        '404':
          description: Not found
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
  /api/v4.1/assets/categories/{id}:
    get:
      tags:
        - Assets
      summary: Assets / Categories - Select
      description: "Supported includes:\r\n\r\nAssets"
      operationId: Assets_SelectAssetCategory
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
        - name: fields
          in: query
          required: false
          type: string
        - name: include
          in: query
          required: false
          type: string
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.AssetCategory'
        '304':
          description: Not modified
        '400':
          description: Bad request - Check the detailed message for more information
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User does not have permission to view configurations
        '404':
          description: Not found
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
  /api/v4.1/assets/diary-agenda:
    get:
      tags:
        - Assets
      summary: Assets / Diary Agenda - List
      description: "Get public events, private events (booking), blocks and diary notes for a period. (not enquiries or unconfirmed bookings). The top 3 assets (in terms of capacity) only will be returned. \r\n\r\nSupported includes:\r\n\r\nPublicEvent\r\nPrivateEventInstance\r\nBlockTimeslot\r\nDiaryNote"
      operationId: Assets_DiaryAgendaSearch
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: sort
          in: query
          required: false
          type: string
        - name: fields
          in: query
          required: false
          type: string
        - name: include
          in: query
          required: false
          type: string
        - name: filters.assetID
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.venueID
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.fromDate
          in: query
          required: false
          type: string
          format: date-time
        - name: filters.toDate
          in: query
          required: false
          type: string
          format: date-time
        - name: filters.searchText
          in: query
          required: false
          type: string
        - name: filters.assetTypeId
          in: query
          required: false
          type: integer
          format: int32
        - name: filters.assetCategoryId
          in: query
          required: false
          type: integer
          format: int32
        - name: filters.eventId
          in: query
          required: false
          type: integer
          format: int32
        - name: page.number
          in: query
          required: false
          type: string
        - name: page.size
          in: query
          required: false
          type: string
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: >-
                #/definitions/Optimo.WebAPI.Models.DiaryAgenda.Result.AgendaActivity
        '304':
          description: Not modified
        '400':
          description: Bad request - Check the detailed message for more information
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
  /api/v4.1/assets/{id}/Items:
    get:
      tags:
        - Assets
      summary: Assets / Items - List
      description: "Returns list of items liked to a given asset.\r\n\r\nSupported includes:\r\n\r\nItemPrices"
      operationId: Assets_ItemSearch
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
        - name: fields
          in: query
          required: false
          type: string
        - name: include
          in: query
          required: false
          type: string
        - name: filters.searchText
          in: query
          required: false
          type: string
        - name: filters.venueId
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.assetId
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.assetClassId
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.eventID
          in: query
          required: false
          type: integer
          format: int32
        - name: filters.salesCategoryId
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.fromDate
          in: query
          required: false
          type: string
          format: date-time
        - name: filters.toDate
          in: query
          required: false
          type: string
          format: date-time
        - name: filters.configurationId
          in: query
          required: false
          type: integer
          format: int32
        - name: filters.activeStatus
          in: query
          required: false
          type: string
          enum:
            - OnlyActive
            - OnlyInactive
            - All
        - name: filters.currencyId
          in: query
          required: false
          type: integer
          format: int32
        - name: filters.priceConcessionID
          in: query
          required: false
          type: integer
          format: int32
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Optimo.WebAPI.Models.Item.Item'
        '304':
          description: Not modified
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User does not have permission to view items
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
  /api/v4.1/assets/types:
    get:
      tags:
        - Assets
      summary: Assets / Types - List
      description: Returns a list of asset types.
      operationId: Assets_GetAssetTypes
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: fields
          in: query
          required: false
          type: string
        - name: include
          in: query
          required: false
          type: string
        - name: filters.assetClassId
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Optimo.WebAPI.Models.AssetType'
        '304':
          description: Not modified
        '400':
          description: Bad request - Check the detailed message for more information
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User does not have permission to view asset types
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
  /api/v4.1/assets/types/{id}:
    get:
      tags:
        - Assets
      summary: Assets / Types - Select
      description: "Supported includes:\r\n\r\nAssets"
      operationId: Assets_SelectAssetType
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
        - name: fields
          in: query
          required: false
          type: string
        - name: include
          in: query
          required: false
          type: string
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.AssetType'
        '304':
          description: Not modified
        '400':
          description: Bad request - Check the detailed message for more information
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User does not have permission to view asset types
        '404':
          description: Not found
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
  /api/v4.1/assets/block-categories:
    get:
      tags:
        - Assets
      summary: Block Categories - List
      description: >-
        Returns list of block categories, which may be used when creating
        blocked timeslots.
      operationId: Assets_GetBlockingCategoryList
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: ActiveStatus
          in: query
          required: false
          type: string
          enum:
            - OnlyActive
            - OnlyInactive
            - All
        - name: fields
          in: query
          required: false
          type: string
        - name: include
          in: query
          required: false
          type: string
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Optimo.WebAPI.Models.Asset.BlockCategory'
        '304':
          description: Not modified
        '400':
          description: Bad request - Check the detailed message for more information
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User does not have permission to view block categories
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
  /api/v4.1/assets/Configuration-Overview:
    head:
      tags:
        - Assets
      summary: Configurations   Overview
      description: "A configuration determines how a facility is set up for an event and what capacity can be accommodated. There are multiple types of cofigurations: \r\n\r\n- General Admission Configuration\r\n- Seating Chart Configuration\r\n- Dining (Table Plan) Configuration\r\n- Private Suite Configuration\r\n- Parking Space Configuration\r\n\r\n<img class=\"img-responsive\" alt=\"Asset Model\" src=\"images/asset-model-configuration.png\"></img>\r\n\r\nA facility may have one or more configurations, which may be of different types. A facility will always have one default configuration. Configurations are not applicable to resources or branding areas.  \r\n\r\nMultimedia files may be attached to a configuration to provIde more information to users. \r\n\r\nWhen a facility is added to an event, one of its configurations will be applied (if not specified, the default one will be applied) and become an <code>Event Configuration</code>. An event configuration may be further edited without affecting the original configuration."
      operationId: Assets_ConfigurationOverview
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.Configuration'
  /api/v4.1/assets/Dining-Overview:
    head:
      tags:
        - Assets
      summary: Configurations   Overview - Dining
      description: "A dining configuration is used to keep track of tables within a facility for the purpose of taking bookings from multiple customers for a public event or arrange seating at private functions such as weddings. \r\n\r\n<img class=\"img-responsive\" alt=\"Asset Model\" src=\"images/asset-model-dining-configuration.png\"></img>\r\n\r\nTables may be of multiple shapes, sizes and capacities. Tables can also be defined as shared or private, where the latter indicates that only one customer may be seated at the table regardless of whether there are any additional seats available.\r\n\r\nTables have labels to Identify them in the plan, usually composed by a a prefix, e.g. \"T\", and a sequence number. A table will also have a price band, which controls which <code>Dining Items</code> may be allocated and thus the price. \r\n\r\nWhen it comes to allocation, tables can either be selected by users from an interactive table plan or auto-allocated by OPTIMO through the use of sequence numbers attached to the tables.  \r\n\r\nNon-table objects may also exist in a table plan, e.g. pillars, doors, buffet tables, stages etc."
      operationId: Assets_DiningConfigurationOverview
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.DiningConfiguration'
  /api/v4.1/assets/GeneralAdmission-Overview:
    head:
      tags:
        - Assets
      summary: Configurations   Overview - General Admission
      description: "A general admission configuration is the most basic type of configuration and simply holds the capacity of the facility along with its dimensions. \r\n\r\n<img class=\"img-responsive\" alt=\"Asset Model\" src=\"images/asset-model-general-admission-configuration.png\"></img>\r\n\r\nGeneral admission configurations are mostly used for grandstands without numbered seats and for private events when it does not matter exactly where each guest is seated within a facility. \r\n\r\nSome type of facilities, e.g. function rooms, may have multiple general admission configurations, e.g. theatre, banquet, classroom, boardroom etc. These can be retrieved as thumbnails in order to easily present configuration options at a glance to users."
      operationId: Assets_GeneralAdmissionConfigurationOverview
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.GeneralAdmissionConfiguration'
  /api/v4.1/assets/ParkingSpace-Overview:
    head:
      tags:
        - Assets
      summary: Configurations   Overview - Parking Space
      description: "A parking space configuration is used to manage parking bays in a parking area. \r\n\r\n<img class=\"img-responsive\" alt=\"Asset Model\" src=\"images/asset-model-parking-space-configuration.png\"></img>\r\n\r\nEach parking bay contains exactly one vehicle, which may be standard cars, vans, buses or any other types of vehicles."
      operationId: Assets_ParkingSpaceConfigurationOverview
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.ParkingSpaceConfiguration'
  /api/v4.1/assets/PrivateSuite-Overview:
    head:
      tags:
        - Assets
      summary: Configurations   Overview - Private Suite
      description: "A private suite configuration is similar to a general admission configuration with the difference that a private suite configuration can only be booked by a single customer. Private suite configurations are therefore useful when selling private suites by the cover for public events to make sure the remaining capacity doesn't get booked by somebody else.\r\n\r\n<img class=\"img-responsive\" alt=\"Asset Model\" src=\"images/asset-model-private-suite-configuration.png\"></img>\r\n\r\nA private suite may have more than one booking allocated to it, provIded all bookings belong to the same contact."
      operationId: Assets_PrivateSuiteConfigurationOverview
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.PrivateSuiteConfiguration'
  /api/v4.1/assets/SeatingChart-Overview:
    head:
      tags:
        - Assets
      summary: Configurations   Overview - Seating Charts
      description: "A seating chart configuration is used in ticketed events to keep track of numbered seats, optionally in multiple blocks, within a grandstand type of facility.  \r\n\r\n<img class=\"img-responsive\" alt=\"Asset Model\" src=\"images/asset-model-seating-chart-configuration.png\"></img>\r\n\r\nAll seats in a seating chart must be contained within a <code>Block</code>. A block has rows with seats. Each <code>Seat</code> has a label, typically combined from the row + seat number. A seat will also have a price band, which controls which <code>Seating Chart Items</code> may be allocated and thus the price. \r\n\r\nWhen it comes to seat allocation, seats can either be selected by users from an interactive seating chart or auto-allocated by OPTIMO through the use of sequence numbers attached to the seats.  \r\n\r\nSeats can be configured as non-selectable in case they are used for other purposes at some events. Aisles can be defined as well. \r\n\r\nA facility may have both seating chart and general admission configurations in order to sell seat specific tickets for popular events and roving seats for less attractive events."
      operationId: Assets_SeatingChartConfigurationOverview
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.SeatingPlanConfiguration'
  /api/v4.1/assets/{id}/configurations:
    get:
      tags:
        - Assets
      summary: Configurations - List
      description: "Gets configurations for a specific facility\r\n\r\nSorting as per json:api specification. Supported sort fields:\r\n\r\n- Id\r\n- Name\r\n- ConfigurationType\r\n- ConfigurationCategory\r\n- AuditInfo.DateCreated"
      operationId: Assets_ConfigurationSearch
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
        - name: sort
          in: query
          required: false
          type: string
        - name: fields
          in: query
          required: false
          type: string
        - name: include
          in: query
          required: false
          type: string
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Optimo.WebAPI.Models.Configuration'
        '304':
          description: Not modified
        '400':
          description: Bad request - Check the detailed message for more information
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User does not have permission to view timeslots
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
    post:
      tags:
        - Assets
      summary: Configurations - Create
      description: Creates a new configuration for a given asset.
      operationId: Assets_InsertAssetConfiguration
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
        - name: ConfigurationJson
          in: body
          required: true
          schema:
            type: object
        - name: fields
          in: query
          required: false
          type: string
        - name: include
          in: query
          required: false
          type: string
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.Configuration'
        '400':
          description: Bad request - Check the detailed message for more information
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User does not have permission to create configurations
        '404':
          description: Not found
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
  /api/v4.1/assets/{AssetId}/configurations/{Id}:
    get:
      tags:
        - Assets
      summary: Configurations - Select
      description: >-
        Gets a specific configuration - with option to include all details if
        table plan, seating chart or car park plan
      operationId: Assets_ConfigurationSelect
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: AssetId
          in: path
          required: true
          type: integer
          format: int32
        - name: Id
          in: path
          required: true
          type: integer
          format: int32
        - name: fields
          in: query
          required: false
          type: string
        - name: include
          in: query
          required: false
          type: string
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.Configuration'
        '304':
          description: Not modified
        '400':
          description: Bad request - Check the detailed message for more information
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User does not have permission to view configurations
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
    delete:
      tags:
        - Assets
      summary: Configurations - Delete
      description: Deletes a configuration.
      operationId: Assets_DeleteConfiguration
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: AssetId
          in: path
          required: true
          type: integer
          format: int32
        - name: Id
          in: path
          required: true
          type: integer
          format: int32
        - name: fields
          in: query
          required: false
          type: string
        - name: include
          in: query
          required: false
          type: string
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.Configuration'
        '400':
          description: Bad request - Check the detailed message for more information
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User does not have permission to delete configurations
        '404':
          description: Not found
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
  /api/v4.1/assets/configuration-categories:
    get:
      tags:
        - Assets
      summary: Configurations / Categories - List
      description: Returns list of configuration categories
      operationId: Assets_ConfigurationCategorySearch
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: sort
          in: query
          required: false
          type: string
        - name: fields
          in: query
          required: false
          type: string
        - name: include
          in: query
          required: false
          type: string
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Optimo.WebAPI.Models.ConfigurationCategory'
        '304':
          description: Not modified
        '400':
          description: Bad request - Check the detailed message for more information
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User does not have permission to view configuration categories
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
  /api/v4.1/assets/{AssetId}/configurations/{configurationId}/seats/{Id}:
    delete:
      tags:
        - Assets
      summary: Configurations / Seats - Delete
      description: Deletes a seat in a configuration.
      operationId: Assets_DeleteSeatConfiguration
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: AssetId
          in: path
          required: true
          type: integer
          format: int32
        - name: configurationId
          in: path
          required: true
          type: integer
          format: int32
        - name: Id
          in: path
          required: true
          type: integer
          format: int32
        - name: fields
          in: query
          required: false
          type: string
        - name: include
          in: query
          required: false
          type: string
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.Configuration'
        '400':
          description: Bad request - Check the detailed message for more information
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User does not have permission to delete seats
        '404':
          description: Not found
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
  /api/v4.1/assets/{AssetId}/configurations/{Id}/seats:
    get:
      tags:
        - Assets
      summary: Configurations / Seats - List
      description: "Retrieves a list of seats from a given configuration as per the filters\r\n\r\nSupported sort fields: \r\n\r\nRowNumber"
      operationId: Assets_SeatSearch
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: AssetId
          in: path
          required: true
          type: integer
          format: int32
        - name: Id
          in: path
          required: true
          type: integer
          format: int32
        - name: sort
          in: query
          required: false
          type: string
        - name: fields
          in: query
          required: false
          type: string
        - name: include
          in: query
          required: false
          type: string
        - name: page.number
          in: query
          required: false
          type: string
        - name: page.size
          in: query
          required: false
          type: string
        - name: filters.columnName
          in: query
          required: false
          type: string
        - name: filters.rowName
          in: query
          required: false
          type: string
        - name: filters.blockId
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.priceBandId
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.aisle
          in: query
          required: false
          type: boolean
        - name: filters.nonSeatingArea
          in: query
          required: false
          type: boolean
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Optimo.WebAPI.Models.Seat'
        '400':
          description: Bad request - Check the detailed message for more information
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User does not have permission to retrieve seats
        '404':
          description: Not found
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
  /api/v4.1/assets/configuration-types:
    get:
      tags:
        - Assets
      summary: Configurations / Types - List
      description: Returns list of configuration types
      operationId: Assets_ConfigurationTypeSearch
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: sort
          in: query
          required: false
          type: string
        - name: fields
          in: query
          required: false
          type: string
        - name: include
          in: query
          required: false
          type: string
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Optimo.WebAPI.Models.ConfigurationType'
  /api/v4.1/enquiries/enquiry-overview:
    head:
      tags:
        - Enquiries
      summary: Enquiries   Overview
      description: "An enquiry is a pre-sales record of client interest in a particular venue or event. Typically, enquiries will originate via a \"Request more information\" form on the website or a call for a quotation request. The interested party for an enquiry may be a prospect or an actual customer.  \r\n\r\n<img class=\"img-responsive\" alt=\"Enquiry Model\" src=\"images/enquiry-model.png\"></img>\r\n\r\nUsing the API, emails can be automatically sent out with relevant information. Sales executive type users can then be assigned to address the enquiries while tasks can be automatically created for call back dates. \r\n\r\nSales executives can work through their outstanding enquiries one by one and convert to booking, close the enquiry or extend with new call back dates while adding free text notes as appropriate."
      operationId: Enquiry_EnquiryOverview
      consumes: []
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.Enquiry'
  /api/v4.1/enquiries/{id}/close:
    post:
      tags:
        - Enquiries
      summary: Enquiries - Close
      description: Closes an enquiry. A reason should be included if lost.
      operationId: Enquiry_EnquiryClose
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
        - name: enquiryJson
          in: body
          required: true
          schema:
            type: object
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.Common.PostResponse'
        '400':
          description: >-
            Bad request - Mandatory field validations - please refer list of
            mandatory fields
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User does not have permission to close enquiries
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
  /api/v4.1/enquiries:
    get:
      tags:
        - Enquiries
      summary: Enquiries - List
      description: "Partial match search covering Enquiry Ref, Subject, Alternate Ref, Customer Name, Contact Name.\r\n\r\nSupported includes:\r\n\r\n- Assets\r\n            \r\nSorting as per json:api specification. Supported sort fields:\r\n\r\n- EnquiryRef\r\n- EnquiryDate\r\n- EnquiryStartDate"
      operationId: Enquiry_GetList
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: sort
          in: query
          required: false
          type: string
        - name: fields
          in: query
          required: false
          type: string
        - name: include
          in: query
          required: false
          type: string
        - name: filters.searchText
          in: query
          required: false
          type: string
        - name: filters.clientId
          in: query
          required: false
          type: integer
          format: int32
        - name: filters.contactId
          in: query
          required: false
          type: integer
          format: int32
        - name: filters.venueId
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.eventId
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.assetId
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.salesAssistant
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.enquiryFrom
          in: query
          required: false
          type: string
          format: date-time
        - name: filters.enquiryTo
          in: query
          required: false
          type: string
          format: date-time
        - name: filters.enquiryStatus
          in: query
          required: false
          type: integer
          format: int32
        - name: page.number
          in: query
          required: false
          type: string
        - name: page.size
          in: query
          required: false
          type: string
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Optimo.WebAPI.Models.Enquiry'
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User does not have permission to view enquiries
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
    post:
      tags:
        - Enquiries
      summary: Enquiries - Create
      description: Insert an enquiry
      operationId: Enquiry_Post
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: enquiryJson
          in: body
          required: true
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.Enquiry'
        - name: fields
          in: query
          required: false
          type: string
        - name: include
          in: query
          required: false
          type: string
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.Enquiry'
        '204':
          description: Not found
          schema:
            type: object
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User does not have permission
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
  /api/v4.1/enquiries/{id}:
    get:
      tags:
        - Enquiries
      summary: Enquiries - Select
      description: Selects a single enquiry record
      operationId: Enquiry_GetSingle
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
        - name: fields
          in: query
          required: false
          type: string
        - name: include
          in: query
          required: false
          type: string
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.Enquiry'
    put:
      tags:
        - Enquiries
      summary: Enquiries - Replace
      operationId: Enquiry_Put
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
        - name: enquiryJson
          in: body
          required: true
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.Enquiry'
        - name: fields
          in: query
          required: false
          type: string
        - name: include
          in: query
          required: false
          type: string
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.Enquiry'
        '400':
          description: >-
            Bad request - Mandatory field validations - please refer list of
            mandatory fields
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User does not have permission to edit enquiries
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
    patch:
      tags:
        - Enquiries
      summary: Enquiries - Patch
      operationId: Enquiry_Patch
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
        - name: enquiryJson
          in: body
          required: true
          schema:
            type: object
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.Enquiry'
        '400':
          description: >-
            Bad request - Mandatory field validations - please refer list of
            mandatory fields
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User does not have permission to edit enquiries
        '404':
          description: '- No record found'
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
  /api/v4.1/assets/price-bands:
    get:
      tags:
        - Assets
      summary: Price Bands - List
      description: Returns list of price bands.
      operationId: Assets_GetPriceBandList
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: sort
          in: query
          required: false
          type: string
        - name: fields
          in: query
          required: false
          type: string
        - name: include
          in: query
          required: false
          type: string
        - name: page.number
          in: query
          required: false
          type: string
        - name: page.size
          in: query
          required: false
          type: string
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Optimo.WebAPI.Models.Asset.PriceBand'
        '304':
          description: Not modified
        '400':
          description: Bad request - Check the detailed message for more information
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User does not have permission to view price bands
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
  /api/v4.1/assets/ranks:
    get:
      tags:
        - Assets
      summary: Ranks - List
      description: Returns list of ranks.
      operationId: Assets_GetRankList
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: sort
          in: query
          required: false
          type: string
        - name: fields
          in: query
          required: false
          type: string
        - name: include
          in: query
          required: false
          type: string
        - name: page.number
          in: query
          required: false
          type: string
        - name: page.size
          in: query
          required: false
          type: string
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Optimo.WebAPI.Models.Asset.Ranks'
        '304':
          description: Not modified
        '400':
          description: Bad request - Check the detailed message for more information
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User does not have permission to view ranks
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
  /api/v4.1/assets/Timeslot-Overview:
    head:
      tags:
        - Assets
      summary: Timeslots   Overview
      description: "A timeslot keeps information about an asset scheduled in for some activity for a period of time. The timeslot type is abstract and types include event, fusion event, block, enquiry, setup and teardown slots. \r\n\r\n<img class=\"img-responsive\" alt=\"Timeslot Model\" src=\"images/timeslot-model.png\"></img>\r\n\r\nMost types of timeslots are blocking, i.e. other blocking timeslots cannot overlap. Only enquiry timeslots and preliminary private event timeslots are non-blocking and may overlap any other type of timeslot. Fusion event timeslots may also overlap, on the condition there is sufficient available quantity on the overlapping period.\r\n\r\nIf the asset contained in a timeslot is an asset group then the timeslot becomes an <code>Asset Group Timeslot</code> where the asset group timeslot will include the full or partial collection of the asset group and the indivIdual sub assets will each be involved in a sub asset group timeslot. An <code>Asset Group Timeslot Period</code> keeps track of asset group timeslots that all occur during at the same time during an uninterrupted start and end time."
      operationId: Assets_TimeslotOverview
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.Timeslot'
  /api/v4.1/assets/EventTime-Overview:
    head:
      tags:
        - Assets
      summary: Timeslots   Overview - Event Timeslots
      description: "An event timeslot is an abstract timeslot which manages common information that is used by public or private event timeslots. The most important aspect, for public and fusion events at least, is the availability management. \r\n\r\n<img class=\"img-responsive\" alt=\"Timeslot Model\" src=\"images/timeslot-model-event-timeslot.png\"></img>\r\n\r\nAn event timeslot also keeps track of any setup and teardown timeslots."
      operationId: Assets_EventTimeslotOverview
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.EventTimeslot'
  /api/v4.1/assets/PublicEventFacilityTimeslot-Overview:
    head:
      tags:
        - Assets
      summary: Timeslots   Overview - Public Event Facility Timeslots
      description: "This is a concrete class, which is a public event timeslot using a facility. \r\n\r\n<img class=\"img-responsive\" alt=\"Timeslot Model\" src=\"images/timeslot-model-event-facility-timeslot.png\"></img>\r\n\r\nAn event configuration is always present. Depending on the type of the facility, availability may be managed by its detailed configuration plan."
      operationId: Assets_PublicEventFacilityTimeslotOverview
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.PublicEventFacilityTimeslot'
  /api/v4.1/assets/PublicEventResourceTimeslot-Overview:
    head:
      tags:
        - Assets
      summary: Timeslots   Overview - Public Event Resource Timeslots
      description: "This is a concrete class, which is a public event timeslot using a resource. \r\n\r\n<img class=\"img-responsive\" alt=\"Timeslot Model\" src=\"images/timeslot-model-event-resource-timeslot.png\"></img>\r\n\r\nJust like for a facility, a public event resource timeslot may have many bookings, managed through its capacity."
      operationId: Assets_PublicEventResourceTimeslotOverview
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.PublicEventResourceTimeslot'
  /api/v4.1/assets/PublicEvent-Overview:
    head:
      tags:
        - Assets
      summary: Timeslots   Overview - Public Event Timeslots
      description: "A public event timeslot is an abstract timeslot which is linked to a public event. Public event timeslot types include public event facility, resource and branding area timeslots.\r\n\r\n<img class=\"img-responsive\" alt=\"Timeslot Model\" src=\"images/timeslot-model-event-timeslot.png\"></img>\r\n\r\nA public event timeslot can be shared with other public events but cannot overlap any other blocking timeslots. Non-blocking timeslots, such as tentative private events or enquiries may overlap. \r\n\r\nAllocated quantity can never exceed the capacity of a public event timeslot. Non-stock reserve type bookings and waitlist bookings are not included in the allocated quantity and can be made if there is no availability."
      operationId: Assets_PublicEventTimeslotOverview
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.PublicEventTimeslot'
  /api/v4.1/assets/timeslots/light:
    get:
      tags:
        - Assets
      summary: Timeslots - Light List
      description: "Returns a list of timeslots for a given period.  Timeslot types include public events, private events (booking), fusion events, blocks, enquiries, setup slots and teardown slots.\r\n            \r\nThis method is faster than the standard timeslots list endpoint as it supports less search parameters and includes. Please use this option when possible."
      operationId: Assets_TimeslotSearchLight
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: sort
          in: query
          required: false
          type: string
        - name: fields
          in: query
          required: false
          type: string
        - name: include
          in: query
          required: false
          type: string
        - name: filters.venueID
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.assetTypeId
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.assetClassId
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.startTime
          in: query
          required: false
          type: string
          format: date-time
        - name: filters.endTime
          in: query
          required: false
          type: string
          format: date-time
        - name: filters.days
          in: query
          required: false
          type: array
          items:
            type: string
            format: date-time
          collectionFormat: multi
        - name: filters.eventId
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.fromDate
          in: query
          required: false
          type: string
          format: date-time
        - name: filters.toDate
          in: query
          required: false
          type: string
          format: date-time
        - name: filters.timeslotTypeId
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.eventTypeID
          in: query
          required: false
          type: integer
          format: int32
        - name: filters.assetID
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.bookingId
          in: query
          required: false
          type: integer
          format: int32
        - name: filters.bookingItemId
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: page.number
          in: query
          required: false
          type: string
        - name: page.size
          in: query
          required: false
          type: string
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Optimo.WebAPI.Models.Timeslot'
        '400':
          description: Bad request - Check the detailed message for more information
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User does not have permission to view timeslots
        '404':
          description: Not found
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
  /api/v4.1/assets/timeslots:
    get:
      tags:
        - Assets
      summary: Timeslots - List
      description: "Returns a list of Timeslots for a given period, which is useful for example to populate an asset diary. Timeslot types include public events, private events (booking), fusion events, blocks, enquiries, setup slots and teardown slots. \r\n\r\nA number of parameters are available to narrow down the list, please see below.\r\n\r\nSupported includes:\r\n\r\n- Asset \r\n- PrivateEventTimeslot.PrivateEventInstance\r\n- FusionPrivateEventTimeslot.PrivateEventInstance\r\n- FusionTimeslot.FusionEventTimeslots\r\n- FusionTimeslot.FusionEventPeriods\r\n- EnquiryTimeslot.Enquiry\r\n- PublicEventFacilityTimeslot.EventConfiguration\r\n- FusionPublicEventFacilityTimeslot.EventConfiguration\r\n            \r\nSorting as per json:api specification. Supported sort fields:\r\n\r\n- Id\r\n- StartTime\r\n- Asset.Id\r\n- Asset.Name\r\n- Asset.Class\r\n- Asset.Category\r\n- Asset.Type\r\n- AuditInfo.DateCreated"
      operationId: Assets_TimeslotSearch
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: sort
          in: query
          required: false
          type: string
        - name: fields
          in: query
          required: false
          type: string
        - name: include
          in: query
          required: false
          type: string
        - name: filters.venueID
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.assetTypeId
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.assetClassId
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.startTime
          in: query
          required: false
          type: string
          format: date-time
        - name: filters.endTime
          in: query
          required: false
          type: string
          format: date-time
        - name: filters.days
          in: query
          required: false
          type: array
          items:
            type: string
            format: date-time
          collectionFormat: multi
        - name: filters.eventId
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.fromDate
          in: query
          required: false
          type: string
          format: date-time
        - name: filters.toDate
          in: query
          required: false
          type: string
          format: date-time
        - name: filters.timeslotTypeId
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.eventTypeID
          in: query
          required: false
          type: integer
          format: int32
        - name: filters.assetID
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.bookingId
          in: query
          required: false
          type: integer
          format: int32
        - name: filters.bookingItemId
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: page.number
          in: query
          required: false
          type: string
        - name: page.size
          in: query
          required: false
          type: string
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Optimo.WebAPI.Models.Timeslot'
        '304':
          description: Not modified
        '400':
          description: Bad request - Check the detailed message for more information
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User does not have permission to view timeslots
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
  /api/v4.1/assets/{Id}/timeslots:
    get:
      tags:
        - Assets
      summary: Timeslots - List Timeslots for an Asset
      description: "Returns a list of Timeslots for a specific asset and given period, which is useful for example to populate an asset diary. Timeslot types include public events, private events (booking), blocks, enquiries, setup slots and teardown slots. \r\n\r\nA number of parameters are available to narrow down the list, please see below.\r\n\r\nSupported includes:\r\n\r\n- Asset \r\n- PrivateEventTimeslot.PrivateEventInstance\r\n- FusionPrivateEventTimeslot.PrivateEventInstance\r\n- PrivateEventInstance.BookingItem\r\n- FusionTimeslot.FusionEventTimeslots\r\n- FusionTimeslot.FusionEventPeriods\r\n- EnquiryTimeslot.Enquiry\r\n- PublicEventFacilityTimeslot.EventConfiguration\r\n- FusionPublicEventFacilityTimeslot.EventConfiguration\r\n            \r\nSorting as per json:api specification. Supported sort fields:\r\n\r\n- Id\r\n- StartTime\r\n- AuditInfo.DateCreated"
      operationId: Assets_AssetTimeslotSearch
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: Id
          in: path
          required: true
          type: integer
          format: int32
        - name: sort
          in: query
          required: false
          type: string
        - name: fields
          in: query
          required: false
          type: string
        - name: include
          in: query
          required: false
          type: string
        - name: filters.fromDate
          in: query
          required: false
          type: string
          format: date-time
        - name: filters.toDate
          in: query
          required: false
          type: string
          format: date-time
        - name: filters.timeslotTypeId
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.eventTypeID
          in: query
          required: false
          type: integer
          format: int32
        - name: filters.assetID
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.bookingId
          in: query
          required: false
          type: integer
          format: int32
        - name: filters.bookingItemId
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: page.number
          in: query
          required: false
          type: string
        - name: page.size
          in: query
          required: false
          type: string
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Optimo.WebAPI.Models.Timeslot'
        '304':
          description: Not modified
        '400':
          description: Bad request - Check the detailed message for more information
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User does not have permission to view timeslots
        '404':
          description: No records found
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
  /api/v4.1/assets/{AssetId}/timeslots/{Id}:
    get:
      tags:
        - Assets
      summary: Timeslots - Select
      description: "Returns details about a specific Timeslot. Supports additional information (as includes), e.g. booking details for private events, block details for blocks and enquiry details for enquiry Timeslots.\r\n\r\nSupported includes:\r\n\r\n- Asset \r\n- Owner\r\n- LinkedTimeslots\r\n- PrivateEventTimeslot.PrivateEventInstance\r\n- PrivateEventTimeslot.Booking\r\n- FusionPrivateEventTimeslot.PrivateEventInstance\r\n- FusionPrivateEventTimeslot.Booking\r\n- FusionTimeslot.FusionEventTimeslots\r\n- FusionTimeslot.FusionEventPeriods\r\n- FusionTimeslot.SetupTimeslot\r\n- FusionTimeslot.TeardownTimeslot\r\n- EnquiryTimeslot.Enquiry\r\n- EventTimeslot.SetupTimeslot\r\n- EventTimeslot.TeardownTimeslot\r\n- FusionEventPeriod.FusionEventTimeslots\r\n- PublicEventFacilityTimeslot.EventConfiguration\r\n- PublicEventFacilityTimeslot.Events\r\n- PublicEventFacilityTimeslot.EventDates\r\n- FusionPublicEventFacilityTimeslot.EventConfiguration\r\n- FusionPublicEventFacilityTimeslot.Events\r\n- FusionPublicEventFacilityTimeslot.EventDates\r\n- BlockedTimeslot.Documents\r\n- SetupTimeslot.Owner\r\n- TeardownTimeslot.Owner"
      operationId: Assets_TimeslotSelect
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: AssetId
          in: path
          required: true
          type: integer
          format: int32
        - name: Id
          in: path
          required: true
          type: integer
          format: int32
        - name: fields
          in: query
          required: false
          type: string
        - name: include
          in: query
          required: false
          type: string
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.Timeslot'
        '304':
          description: Not modified
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User does not have permission to view timeslots
        '404':
          description: Not found
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
  /api/v4.1/assets/timeslots/blocks:
    get:
      tags:
        - Assets
      summary: Timeslots / Blocked Timeslots - List
      description: "Returns a list of blocked timeslots.\r\n\r\nSupported includes:\r\n\r\n- Documents"
      operationId: Assets_GetListTimeslotsBlocks
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: sort
          in: query
          required: false
          type: string
        - name: fields
          in: query
          required: false
          type: string
        - name: include
          in: query
          required: false
          type: string
        - name: filters.assetID
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.venueID
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.fromDate
          in: query
          required: false
          type: string
          format: date-time
        - name: filters.toDate
          in: query
          required: false
          type: string
          format: date-time
        - name: filters.eventTypeId
          in: query
          required: false
          type: integer
          format: int32
        - name: page.number
          in: query
          required: false
          type: string
        - name: page.size
          in: query
          required: false
          type: string
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Optimo.WebAPI.Models.BlockedTimeslot'
        '304':
          description: Not modified
        '400':
          description: Bad request - Check the detailed message for more information
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User does not have permission to view diary notes
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
    post:
      tags:
        - Assets
      summary: Timeslots / Blocked Timeslots - Create
      description: Inserts a blocked timeslot
      operationId: Assets_PostBlockTimeslot
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: BlockTimeslotJson
          in: body
          required: true
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.BlockedTimeslot'
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '400':
          description: Bad request - Check the detailed message for more information
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User does not have permission to block
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
  /api/v4.1/assets/timeslots/blocks/{id}:
    get:
      tags:
        - Assets
      summary: Timeslots / Blocked Timeslots - Select
      description: "Returns a single blocked timeslot record. Supported includes:\r\n\r\n- Asset \r\n- Documents"
      operationId: Assets_BlockedTimeslotSelect
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
        - name: fields
          in: query
          required: false
          type: string
        - name: include
          in: query
          required: false
          type: string
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Optimo.WebAPI.Models.BlockedTimeslot'
        '304':
          description: Not modified
        '400':
          description: Bad request - Check the detailed message for more information
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User does not have permission to view timeslots
        '404':
          description: Not found
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
    delete:
      tags:
        - Assets
      summary: Timeslots / Blocked Timeslots - Delete
      description: Deletes a blocked timeslot.
      operationId: Assets_BlockedTimeslotDelete
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '400':
          description: Bad request - Check the detailed message for more information
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User does not have permission to delete diary notes
        '404':
          description: Not found
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
    patch:
      tags:
        - Assets
      summary: Timeslots / Blocked Timeslots - Patch
      description: Updates a blocked timeslot
      operationId: Assets_BlockedTimeslotPatch
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
        - name: Json
          in: body
          required: true
          schema:
            type: object
        - name: fields
          in: query
          required: false
          type: string
        - name: include
          in: query
          required: false
          type: string
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '400':
          description: Bad request - Check the detailed message for more information
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '404':
          description: Not found
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
  /api/v4.1/assets/timeslots/blocks/{id}/documents/{documentId}:
    delete:
      tags:
        - Assets
      summary: Timeslots / Blocked Timeslots / Documents - Delete
      description: Deletes a document associated with a blocked timeslot.
      operationId: Assets_DeleteBlockedTimeslotDocument
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
        - name: documentId
          in: path
          required: true
          type: integer
          format: int32
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '400':
          description: Bad request - Check the detailed message for more information
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User does not have permission to delete blocked timeslot documents
        '404':
          description: Not found
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
  /api/v4.1/assets/timeslots/{Id}/bookings:
    get:
      tags:
        - Assets
      summary: Timeslots / Bookings - List
      description: "Returns list of bookings using the given timeslot. This is normally a single booking if a private event is taking place while if it is a public event timeslot there may be be multiple bookings. \r\n\r\nSupported includes:\r\n\r\nClient\r\nContact\r\nContact\r\nBookingPackage\r\nBookingStatus\r\nCancellationPolicy\r\nPaymentTerm\r\nSalesPerson\r\nSalesChannel\r\nEventManager\r\nVenue"
      operationId: Assets_TimeslotBookingSearch
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: Id
          in: path
          required: true
          type: integer
          format: int32
        - name: sort
          in: query
          required: false
          type: string
        - name: fields
          in: query
          required: false
          type: string
        - name: include
          in: query
          required: false
          type: string
        - name: filters.searchText
          in: query
          required: false
          type: string
        - name: filters.bookingRef
          in: query
          required: false
          type: string
        - name: filters.clientRef
          in: query
          required: false
          type: string
        - name: filters.contactRef
          in: query
          required: false
          type: string
        - name: filters.clientName
          in: query
          required: false
          type: string
        - name: filters.contactName
          in: query
          required: false
          type: string
        - name: filters.packageName
          in: query
          required: false
          type: string
        - name: filters.referrer
          in: query
          required: false
          type: string
        - name: filters.contactPostCode
          in: query
          required: false
          type: string
        - name: filters.contactEmailAddress
          in: query
          required: false
          type: string
        - name: filters.contactPhoneNo
          in: query
          required: false
          type: string
        - name: filters.bookingStatusId
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.invoiceRef
          in: query
          required: false
          type: string
        - name: filters.venueId
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.host
          in: query
          required: false
          type: string
        - name: filters.assetId
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.eventId
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.eventName
          in: query
          required: false
          type: string
        - name: filters.salesChannelId
          in: query
          required: false
          type: integer
          format: int32
        - name: filters.salesAssistantId
          in: query
          required: false
          type: integer
          format: int32
        - name: filters.temporaryBookingsOnly
          in: query
          required: false
          type: boolean
        - name: filters.eventdateFrom
          in: query
          required: false
          type: string
          format: date-time
        - name: filters.eventdateTo
          in: query
          required: false
          type: string
          format: date-time
        - name: filters.bookingDateFrom
          in: query
          required: false
          type: string
          format: date-time
        - name: filters.bookingDateTo
          in: query
          required: false
          type: string
          format: date-time
        - name: filters.pOreference
          in: query
          required: false
          type: string
        - name: filters.ticketRef
          in: query
          required: false
          type: string
        - name: filters.pastEventBookings
          in: query
          required: false
          type: boolean
        - name: filters.allocationStatus
          in: query
          required: false
          type: integer
          format: int32
        - name: filters.invoiceStatus
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.despatchStatus
          in: query
          required: false
          type: integer
          format: int32
        - name: filters.paymentStatus
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.userId
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.bookingReason
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.alternativeBookingRef
          in: query
          required: false
          type: string
        - name: filters.externalBookingId
          in: query
          required: false
          type: string
        - name: filters.timeslotID
          in: query
          required: false
          type: integer
          format: int32
        - name: filters.stockAllocationStatus
          in: query
          required: false
          type: boolean
        - name: filters.updateBefore
          in: query
          required: false
          type: string
          format: date-time
        - name: filters.updateAfter
          in: query
          required: false
          type: string
          format: date-time
        - name: filters.noteTypeId
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.bookingTypeIds
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.externalAddressId
          in: query
          required: false
          type: string
        - name: filters.contactIds
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.entityNoteTypeIds
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.collectionStatusIds
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.collectionAddress
          in: query
          required: false
          type: string
        - name: page.number
          in: query
          required: false
          type: string
        - name: page.size
          in: query
          required: false
          type: string
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '304':
          description: Not modified
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User does not have permission to view bookings
        '404':
          description: Not found
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
  /api/v4.1/assets/{AssetId}/timeslots/{Id}/event-configurations:
    get:
      tags:
        - Assets
      summary: Timeslots / Event Configurations - List
      description: "Retrieves event configurations associated with a timeslot. In most cases, there will only be one event configuration for a timeslot. \r\n\r\nSupported includes:\r\n\r\n- EventTable \r\n- EventSeat \r\n- EventParkingSpace\r\n- Block"
      operationId: Assets_EventConfiguration
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: AssetId
          in: path
          required: true
          type: integer
          format: int32
        - name: Id
          in: path
          required: true
          type: integer
          format: int32
        - name: fields
          in: query
          required: false
          type: string
        - name: include
          in: query
          required: false
          type: string
        - name: sort
          in: query
          required: false
          type: string
        - name: page.number
          in: query
          required: false
          type: string
        - name: page.size
          in: query
          required: false
          type: string
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.EventConfiguration'
        '304':
          description: Not modified
        '400':
          description: Bad request - Check the detailed message for more information
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User does not have permission to view event configurations
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
  /api/v4.1/assets/{assetId}/timeslots/{Id}/event-configurations/split-bookings:
    get:
      tags:
        - Assets
      summary: Timeslots / Event Configurations - List Split Bookings
      description: Retrieves any bookings which are not allocated to adjacent seats.
      operationId: Assets_GetSplitBookings
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: assetId
          in: path
          required: true
          type: integer
          format: int32
        - name: Id
          in: path
          required: true
          type: integer
          format: int32
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Optimo.WebAPI.Models.Allocation.SeatAllocation'
        '400':
          description: Bad request - Check the detailed message for more information
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User does not have permission to view event configurations
        '404':
          description: Not found
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
  /api/v4.1/assets/{assetId}/timeslots/{Id}/event-configurations/event-seats:
    post:
      tags:
        - Assets
      summary: Timeslots / Event Configurations / Event Seats - Create
      description: Creates an event seats in an existing event configuration.
      operationId: Assets_PostEventseat
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: assetId
          in: path
          required: true
          type: integer
          format: int32
        - name: Id
          in: path
          required: true
          type: integer
          format: int32
        - name: EventSeatJson
          in: body
          required: true
          schema:
            type: object
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.EventSeat'
        '400':
          description: Bad request - Check the detailed message for more information
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User does not have permission to edit event configurations
        '404':
          description: Not found
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
  /api/v4.1/assets/{AssetId}/timeslots/{Id}/event-configurations/single-empty-seats:
    get:
      tags:
        - Assets
      summary: Timeslots / Event Configurations / Event Seats - List Empty Seats
      description: Retrieves all single empty seats in an event configuration.
      operationId: Assets_GetSingleEmptySeats
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: AssetId
          in: path
          required: true
          type: integer
          format: int32
        - name: Id
          in: path
          required: true
          type: integer
          format: int32
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Optimo.WebAPI.Models.EventSeat'
        '400':
          description: Bad request - Check the detailed message for more information
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User does not have permission to view event configurations
        '404':
          description: Not found
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
  /api/v4.1/assets/{assetId}/timeslots/{Id}/event-configurations/event-seats/{seatId}:
    delete:
      tags:
        - Assets
      summary: Timeslots / Event Configurations / Event Seats - Delete
      description: This method is used to delete an event seat
      operationId: Assets_DeleteEventseat
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: assetId
          in: path
          required: true
          type: integer
          format: int32
        - name: Id
          in: path
          required: true
          type: integer
          format: int32
        - name: seatId
          in: path
          required: true
          type: integer
          format: int32
        - name: EventSeatJson
          in: body
          required: true
          schema:
            type: object
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.EventSeat'
        '400':
          description: Bad request - Check the detailed message for more information
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User does not have permission to edit event configurations
        '404':
          description: Not found
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
    patch:
      tags:
        - Assets
      summary: Timeslots / Event Configurations / Event Seats - Patch
      description: This function updates the attributes of an existing event seat.
      operationId: Assets_PatchEventseat
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: assetId
          in: path
          required: true
          type: integer
          format: int32
        - name: Id
          in: path
          required: true
          type: integer
          format: int32
        - name: seatId
          in: path
          required: true
          type: integer
          format: int32
        - name: EventSeatJson
          in: body
          required: true
          schema:
            type: object
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.EventSeat'
        '400':
          description: Bad request - Check the detailed message for more information
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User does not have permission to edit event configurations
        '404':
          description: Not found
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
  /api/v4.1/assets/timeslots/{timeslotId}/setup-timeslot:
    post:
      tags:
        - Assets
      summary: Timeslots / Setup Timeslots - Create
      description: This method is used to create a setup timeslot
      operationId: Assets_PostSetupTimeslot
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: timeslotId
          in: path
          required: true
          type: string
        - name: SetupTimeslotJson
          in: body
          required: true
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.BlockedTimeslot'
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '400':
          description: Bad request - Check the detailed message for more information
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User does not have permission to create timeslots
        '404':
          description: Not found
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
  /api/v4.1/assets/timeslots/{timeslotId}/setup-timeslot/{id}:
    delete:
      tags:
        - Assets
      summary: Timeslots / Setup Timeslots - Delete
      description: This method is used to delete a setup timeslot
      operationId: Assets_DeleteSetupTimeslot
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: timeslotId
          in: path
          required: true
          type: string
        - name: id
          in: path
          required: true
          type: string
        - name: SetupTimeslotJson
          in: body
          required: true
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.BlockedTimeslot'
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '400':
          description: Bad request - Check the detailed message for more information
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User does not have permission to delete timeslots
        '404':
          description: Not found
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
    patch:
      tags:
        - Assets
      summary: Timeslots / Setup Timeslots - Patch
      description: This method is used to patch a setup timeslot
      operationId: Assets_PatchSetupTimeslot
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: timeslotId
          in: path
          required: true
          type: string
        - name: id
          in: path
          required: true
          type: string
        - name: SetupTimeslotJson
          in: body
          required: true
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.SetupTimeslot'
        - name: fields
          in: query
          required: false
          type: string
        - name: include
          in: query
          required: false
          type: string
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '400':
          description: Bad request - Check the detailed message for more information
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User does not have permission to edit timeslots
        '404':
          description: Not found
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
  /api/v4.1/assets/timeslots/{timeslotId}/teardown-timeslot:
    post:
      tags:
        - Assets
      summary: Timeslots / Teardown Timeslots - Create
      description: This method is used to create a teardown timeslot
      operationId: Assets_PostTearDownTimeslot
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: timeslotId
          in: path
          required: true
          type: string
        - name: TearDownTimeslotJson
          in: body
          required: true
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.BlockedTimeslot'
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '400':
          description: Bad request - Check the detailed message for more information
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User does not have permission to create timeslots
        '404':
          description: Not found
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
  /api/v4.1/assets/timeslots/{timeslotId}/teardown-timeslot/{id}:
    delete:
      tags:
        - Assets
      summary: Timeslots / Teardown Timeslots - Delete
      description: This method is used to delete a teardown timeslot
      operationId: Assets_DeleteTearDownTimeslot
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: timeslotId
          in: path
          required: true
          type: string
        - name: id
          in: path
          required: true
          type: string
        - name: SetupTimeslotJson
          in: body
          required: true
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.BlockedTimeslot'
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '400':
          description: Bad request - Check the detailed message for more information
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User does not have permission to delete timeslots
        '404':
          description: Not found
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
    patch:
      tags:
        - Assets
      summary: Timeslots / Teardown Timeslots - Patch
      description: This method is used to patch a teardown timeslot
      operationId: Assets_PatchTearDownTimeslot
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: timeslotId
          in: path
          required: true
          type: string
        - name: id
          in: path
          required: true
          type: string
        - name: SetupTimeslotJson
          in: body
          required: true
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.BlockedTimeslot'
        - name: fields
          in: query
          required: false
          type: string
        - name: include
          in: query
          required: false
          type: string
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '400':
          description: Bad request - Check the detailed message for more information
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User does not have permission to edit timeslots
        '404':
          description: Not found
        '405':
          description: Method not allowed
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
  /api/V4.1/users/User-Overview:
    head:
      tags:
        - Users
      summary: User   Overview
      description: "All access to the OPTIMO application (excluding public web) requires a user account. A user may belong to one or more user groups, which controls which level of access the user has got. \r\n\r\nIn addition to functional rights, OPTIMO also manages data segmentation rights. That is, users may access data from only one venue, a selected set of venues or all venues. Users who don’t have rights to access other venues’ data cannot view bookings or run reports for those venues. \r\n\r\n<img class=\"img-responsive\" alt=\"User Model\" src=\"images/user-model.png\"></img>\r\n\r\nA user may log in through classic username and password authentication or through Active Directory/Azure AD (the API only supports classic login). \r\n\r\nUsers must set their passwords according to the defined password policy. A password reset function is available should a user forget their password. A user may get locked out (set inactive) after several failed login attempts. Locked out users can request a password reset or an admin user can unlock (set to active) the user account."
      operationId: Users_UserOverview
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.Security.User'
  /api/V4.1/users/token-generate:
    post:
      tags:
        - Users
      summary: Users - Generate ADFS Token
      operationId: Users_TokenGenerate
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: userDetailJson
          in: body
          required: true
          schema:
            type: object
        - name: fields
          in: query
          required: false
          type: string
        - name: applicationId
          in: query
          required: false
          type: string
        - name: include
          in: query
          required: false
          type: string
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.Security.User'
  /api/V4.1/users:
    get:
      tags:
        - Users
      summary: Users - List
      description: "Returns a list of <a href=\"#!/Users/Users_UserOverview\">User</a> records. A number of parameters are available to narrow down the list, please see below.\r\n \r\nSupported includes:\r\n\r\n- Venue\r\n- DefaultVenue\r\n- Site\r\n- DefaultSite\r\n- Group\r\n            \r\nSorting as per json:api specification. Supported sort fields:\r\n\r\n- UserID\r\n- UserName\r\n- Venue"
      operationId: Users_GetList
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: sort
          in: query
          required: false
          type: string
        - name: fields
          in: query
          required: false
          type: string
        - name: include
          in: query
          required: false
          type: string
        - name: filters.searchText
          in: query
          required: false
          type: string
        - name: filters.activeStatus
          in: query
          required: false
          type: integer
          format: int32
        - name: filters.userName
          in: query
          required: false
          type: string
        - name: filters.jobPosition
          in: query
          required: false
          type: string
        - name: filters.venueID
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.groupId
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.salesAssistants
          in: query
          required: false
          type: boolean
        - name: filters.eventManagers
          in: query
          required: false
          type: boolean
        - name: page.number
          in: query
          required: false
          type: string
        - name: page.size
          in: query
          required: false
          type: string
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Optimo.WebAPI.Models.Security.User'
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User do not have the permision to view users
        '404':
          description: No record found
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
    post:
      tags:
        - Users
      summary: Users - Create
      operationId: Users_Post
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: userJson
          in: body
          required: true
          schema:
            type: object
        - name: fields
          in: query
          required: false
          type: string
        - name: include
          in: query
          required: false
          type: string
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Optimo.WebAPI.Models.Security.User'
  /api/V4.1/users/login:
    post:
      tags:
        - Users
      summary: Users - Login
      description: "Logs in a user via standard OPTIMO username and password authentication. \r\n\r\nUpon successful authentication, the User record is returned, including a token which may be used to call other API endpoints from the context of that user."
      operationId: Users_Login
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: loginDetail
          in: body
          required: true
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.Security.LoginDetail'
        - name: fields
          in: query
          required: false
          type: string
        - name: applicationId
          in: query
          required: false
          type: string
        - name: include
          in: query
          required: false
          type: string
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.Security.User'
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '403':
          description: User do not have permision to view the user groups
        '404':
          description: No record found
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
  /api/V4.1/users/override:
    post:
      tags:
        - Users
      summary: Users - Override Permission
      operationId: Users_Override
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: overrideUser
          in: body
          required: true
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.Users.OverrideUser'
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
  /api/V4.1/users/{id}:
    put:
      tags:
        - Users
      summary: Users - Replace
      operationId: Users_UserPut
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
        - name: userJson
          in: body
          required: true
          schema:
            type: object
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Optimo.WebAPI.Models.Security.User'
        '400':
          description: Bad request
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '404':
          description: No record found
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
    patch:
      tags:
        - Users
      summary: Users - Patch
      operationId: Users_Patch
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
        - name: userJson
          in: body
          required: true
          schema:
            type: object
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Optimo.WebAPI.Models.Security.User'
        '400':
          description: Bad request
        '401':
          description: >-
            Unauthorised - You need to log in; potentially the token may have
            expired
        '404':
          description: No record found
        '429':
          description: Too many requests - You have exceeded your API limit threshold
        '500':
          description: >-
            Internal server error - Please do not reveal exception details to
            end users
  /api/V4.1/users/admin/venues:
    get:
      tags:
        - Users
      summary: Users - Venues - List
      description: "This endpoint retrieves all active venues from the system, regardless of whether the logged in user has access to them or not.  The purpose is to allow assignment of venues to other users.\r\nNo includes are supported."
      operationId: Users_AdminVenues
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: fields
          in: query
          required: false
          type: string
        - name: include
          in: query
          required: false
          type: string
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Optimo.WebAPI.Models.Venue'
  /api/V4.1/users/groups:
    get:
      tags:
        - Users
      summary: Users / Groups - List
      operationId: Users_GetUserGroupsList
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: sort
          in: query
          required: false
          type: string
        - name: fields
          in: query
          required: false
          type: string
        - name: include
          in: query
          required: false
          type: string
        - name: filters.name
          in: query
          required: false
          type: string
        - name: filters.userId
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: filters.department
          in: query
          required: false
          type: string
          enum:
            - All
            - SalesDepartment
            - EventDepartment
        - name: filters.userName
          in: query
          required: false
          type: string
        - name: filters.venueID
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: page.number
          in: query
          required: false
          type: string
        - name: page.size
          in: query
          required: false
          type: string
        - name: Token
          in: header
          description: access token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Optimo.WebAPI.Models.Security.User'
definitions:
  Optimo.WebAPI.Models.Asset.Result.Asset:
    description: >-
      This is an abstract class which holds generic information related to
      facilities, resources and branding areas.
    type: object
    properties:
      Id:
        description: Id of the asset
        type: string
      Name:
        description: Name of the asset
        type: string
      Venue:
        $ref: '#/definitions/Optimo.WebAPI.Models.Venue'
        description: An asset always belongs to one venue
      Description:
        description: Description of the asset
        type: string
      Keywords:
        description: Keywords applicable for searching the asset
        type: string
      Active:
        description: >-
          Used to indicate that an asset is active. Only active assets can be
          booked.
        type: boolean
      GenerateDiaryNote:
        description: >-
          Controls whether a diary note should be generated automatically when
          this asset is booked
        type: boolean
      OperationalMinutes:
        format: int32
        description: This is used to calculate utilisation percentage in reporting
        type: integer
      SpecialUserRightRequired:
        description: >-
          Indicates whether a user needs the permission "Allow to book
          restricted assets" to book the asset
        type: boolean
      Documents:
        description: Specifies the documents associated with an asset
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Document'
      Multimedia:
        description: Specifies the media files associated with the asset
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Multimedia'
      EnableSharing:
        description: >-
          Controls whether the asset can be shared between events and become
          part of a fusion event timeslot.
        type: boolean
      ClassID:
        format: int32
        description: Asset class id (Facility, Branding area, resource)
        type: integer
      LinkedAssets:
        description: A collection of sub assets in an asset group
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Asset.Result.Asset'
      Owner:
        $ref: '#/definitions/Optimo.WebAPI.Models.Asset.Result.AssetOwner'
        description: Specifies the asset group id for sub assets
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      Default:
        type: boolean
      Item:
        description: A link to all items which are associated with the asset.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Item.Item'
  Optimo.WebAPI.Models.Venue:
    description: >-
      A venue in OPTIMO is a building, or in some cases, multiple buildings or
      spaces, in a confined geographical area. A venue may be a concert hall,
      football stadium, racecourse, exhibition centre, arena, hotel, leisure
      centre etc.
    type: object
    properties:
      Id:
        description: Id of the venue.
        type: string
      Etag:
        type: string
      Name:
        description: Name of the venue.
        type: string
      Description:
        description: Short description of the venue.
        type: string
      Direction:
        description: Instructions how to get to the venue.
        type: string
      Prefix:
        description: >-
          Up to 5 characters short for the venue, which may be used to identify
          the venue in other transactions. For example, booking references may
          start with the venue prefix followed by the unique booking Id.
        type: string
      Url:
        description: Optional URL to the venue's main website
        type: string
      Telephone:
        description: >-
          Phone number to the venue. May appear on invoices and other
          correspondence.
        type: string
      Fax:
        description: (Deprecated)
        type: string
      Email:
        description: >-
          Email address for the venue. May be used as sender of automated
          emails.
        type: string
      Active:
        description: >-
          Indicates whether the venue is active. Only products from active
          venues may be sold.
        type: boolean
      TaxTypeName:
        description: Name of the tax type.
        type: string
      TaxTypeID:
        format: int32
        description: >-
          Tax type approach to use when calculating tax for bookings: 1 - Item
          Tax Rate, 2 - Package Tax Rate
        type: integer
      CostCentreCode:
        description: Cost centre code that may identify the venue in finance integration.
        type: string
      StandardInvoiceTemplateID:
        format: int32
        description: >-
          Id of the invoice layout to use for standard invoices. If not set, the
          default invoice layout will be used.
        type: integer
      StandardInvoiceTemplateName:
        description: Name of the invoice layout to use.
        type: string
      ProFormaInvoiceTemplateID:
        format: int32
        description: >-
          Id of the invoice layout to use for pro-forma invoices. If not set,
          the default pro-forma invoice layout will be used.
        type: integer
      ProFormaInvoiceTemplateName:
        description: Name of the pro-forma invoice layout to use.
        type: string
      Longitude:
        description: Longitude of the venue.
        type: string
      Latitude:
        description: Latitude of the venue.
        type: string
      GoogleMapUrl:
        description: Url for finding the venue on Google maps.
        type: string
      StartTime:
        format: date-time
        description: Default opening time of the venue.
        type: string
      EndTime:
        format: date-time
        description: Default closing time of the venue.
        type: string
      Organisation:
        type: string
      EmailInvoiceType:
        description: 1 - All, 2- Standard Invoice, 3 - Pro-forma Invoice
        enum:
          - All
          - StandardInvoice
          - ProFormaInvoice
        type: string
      CompanyCode:
        description: Company code that may identify the venue in finance integration.
        type: string
      SiteCode:
        description: Site code that may identify the venue in finance integration.
        type: string
      DefaultFunctionSheetMethod:
        description: 1 - Default, 2 - Per Booking, 3 - Per package
        enum:
          - Default
          - PerBooking
          - PerPackage
        type: string
      Documents:
        description: Specifies the documents associated with a venue.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Document'
      CostCentres:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.CostCentre'
      VenueTimeZone:
        description: Timezone of the venue. May be left blank if default timezone is used.
        type: string
      VenueTypeId:
        format: int32
        description: Id of venue type the venue is classified as.
        type: integer
      VenueType:
        description: Name of the venue type.
        type: string
      UserDefault:
        type: boolean
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.Document:
    type: object
    properties:
      Id:
        type: string
      Name:
        type: string
      Description:
        type: string
      DocumentFile:
        type: string
      FileExtension:
        type: string
      DocumentFileURL:
        type: string
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      PrintedBy:
        $ref: '#/definitions/Optimo.WebAPI.Models.Security.User'
      PrintedTime:
        format: date-time
        type: string
      DocumentTypeID:
        format: int32
        type: integer
      EntityConfigurationProfileId:
        format: int32
        type: integer
      DocumentCategoryId:
        format: int32
        type: integer
      DocumentCategory:
        type: string
      DocumentContent:
        type: string
      DocumentName:
        type: string
      UploadedTime:
        format: date-time
        type: string
      FileLocation:
        type: string
  Optimo.WebAPI.Models.Multimedia:
    type: object
    properties:
      Id:
        type: string
      Name:
        type: string
      Description:
        type: string
      FileExtension:
        type: string
      DocumentFileURL:
        type: string
      Default:
        type: boolean
      Imagefile:
        type: boolean
      VirtualTourFile:
        type: boolean
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.Asset.Result.AssetOwner:
    type: object
    properties:
      Id:
        description: Id of the asset
        type: string
      Name:
        description: Name of the asset
        type: string
      Venue:
        $ref: '#/definitions/Optimo.WebAPI.Models.Venue'
        description: An asset always belongs to one venue
      Description:
        description: Description of the asset
        type: string
      Keywords:
        description: Keywords applicable for searching the asset
        type: string
      Active:
        description: >-
          Used to indicate that an asset is active. Only active assets can be
          booked.
        type: boolean
      GenerateDiaryNote:
        description: >-
          Controls whether a diary note should be generated automatically when
          this asset is booked
        type: boolean
      OperationalMinutes:
        format: int32
        description: This is used to calculate utilisation percentage in reporting
        type: integer
      SpecialUserRightRequired:
        description: >-
          Indicates whether a user needs the permission "Allow to book
          restricted assets" to book the asset
        type: boolean
      Documents:
        description: Specifies the documents associated with an asset
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Document'
      Multimedia:
        description: Specifies the media files associated with the asset
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Multimedia'
      EnableSharing:
        description: >-
          Controls whether the asset can be shared between events and become
          part of a fusion event timeslot.
        type: boolean
      ClassID:
        format: int32
        description: Asset class id (Facility, Branding area, resource)
        type: integer
      LinkedAssets:
        description: A collection of sub assets in an asset group
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Asset.Result.Asset'
      Owner:
        $ref: '#/definitions/Optimo.WebAPI.Models.Asset.Result.AssetOwner'
        description: Specifies the asset group id for sub assets
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      Default:
        type: boolean
      Item:
        description: A link to all items which are associated with the asset.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Item.Item'
  Optimo.WebAPI.Models.Audit.AuditInfo:
    type: object
    properties:
      InsertedUser:
        type: string
      InsertedTime:
        format: date-time
        type: string
      UpdatedUser:
        type: string
      UpdatedTime:
        format: date-time
        type: string
  Optimo.WebAPI.Models.Item.Item:
    description: >-
      Items are used to sell all types of goods and services a venue may offer,
      including asset hire and event tickets. The Item class is abstract and
      keeps common attributes while specialised item classes exist for each type
      of item.
    type: object
    properties:
      Id:
        description: Id of the item.
        type: string
      Name:
        description: Name of the item.
        type: string
      NameOnReport:
        description: Name of the item to appear in reporting.
        type: string
      Description:
        description: Description of the item.
        type: string
      ItemType:
        description: Name of the item type.
        type: string
      ItemTypeID:
        format: int32
        description: Id of the item type.
        type: integer
      ItemCategory:
        description: Name of the item category.
        type: string
      ItemCategoryID:
        format: int32
        description: Id of the item category.
        type: integer
      Venue:
        $ref: '#/definitions/Optimo.WebAPI.Models.Venue'
        description: Venue associated with the item.
      Tax:
        $ref: '#/definitions/Optimo.WebAPI.Models.Item.Tax'
        description: Applicable tax configuration for the item.
      WebShortDescription:
        description: Short web description, in HTML format, suitable to use in lists.
        type: string
      WebLongDescription:
        description: >-
          Long web description, in HTML format, suitable to use in a detailed
          view.
        type: string
      SalesCategories:
        description: Defines applicable sales categories for the item, can be multiple.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Item.SalesCategory'
      ItemSalesChannels:
        description: Defines applicable sales channels for the item, can be multiple.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Item.ItemSalesChannel'
      ValidWeekDays:
        description: >-
          (Deprecated) Defines days of the week which the item may be booked.
          This is no longer supported in V4, where price groups are used to
          determine days and times which items may be booked.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.ValidWeekDay'
      AvailableFrom:
        format: date-time
        description: >-
          (Deprecated) Defines the start time which the item may be booked. This
          is no longer supported in V4, where price groups are used to determine
          days and times which items may be booked.
        type: string
      AvailableTo:
        format: date-time
        description: >-
          (Deprecated) Defines the end time which the item may be booked. This
          is no longer supported in V4, where price groups are used to determine
          days and times which items may be booked.
        type: string
      Active:
        description: >-
          Indicates whether the item is active. Only active items may be added
          to a booking.
        type: boolean
      IncomeNominalCode:
        description: >-
          Nominal code to pass an income value generated against the item to the
          financial ledger.
        type: string
      CostNominalCode:
        description: >-
          Nominal code to pass cost value incurred against the item to the
          financial ledger.
        type: string
      LeadDays:
        format: int32
        description: >-
          Number of lead days applicable for the item. Lead time can be
          overridden by setting up an approver condition.
        type: integer
      SegmentCode:
        description: >-
          User defined code to define the item segment. May be used as an
          additional code in finance integration.
        type: string
      FunctionSheetCategoryID:
        format: int32
        description: >-
          Specified the function sheet category which the item will fall under
          when generating function sheets (aka run sheets or BEOs).
        type: integer
      FunctionSheetCategory:
        description: Name of the function sheet category.
        type: string
      ShowInInvoice:
        description: >-
          Define whether the item will be displayed in an invoice. If not, then
          its value will be moved to the package which the item belongs to.
        type: boolean
      ItemTask:
        description: Defines tasks associated with an item.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Item.ItemTask'
      DefaultPriceConcessionID:
        format: int32
        description: Defines the default price concession applicable for the item.
        type: integer
      DefaultPriceConcessionName:
        description: Name of the default price concession.
        type: string
      UpsellItem:
        description: Defines whether the item can be sold as an upsell item.
        type: boolean
      PartOfPackage:
        description: >-
          Defines whether the item can be included in a package as a standard
          item.
        type: boolean
      ItinararyItem:
        description: >-
          Indicates whether the item should appear in the itinerary section in
          function sheets.
        type: boolean
      EnforceAtUpsell:
        description: >-
          Indicates whether the attendees per item rule should be used softly at
          upsell, i.e. default to the specified quantity only, or enforce the
          rule. If the rule is enforced then a lower quantity may be booked, but
          not higher.
        type: boolean
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      ItemQuestion:
        description: Defines questions associated with an item.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Question'
      ItemTasks:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.TemplateTask'
      ParentItemId:
        format: int32
        type: integer
      ValidateSalesCategory:
        format: int32
        description: >-
          Controls whether strict sales category validation (i.e. at least one
          of the item sales categories must match one of the package's sales
          categories) should apply when adding the item to a booking. Choices
          are: 1.Yes, 2.No, 3. Use default as per system settings.
        type: integer
      Suppliers:
        description: List of suppliers for the item.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Item.Supplier'
      AddFacilityNameAtBooking:
        type: boolean
      TemplateTasks:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.BookingTask'
  Optimo.WebAPI.Models.CostCentre:
    type: object
    properties:
      Id:
        type: string
      CostCentreCode:
        type: string
      BusinessAreaID:
        format: int32
        type: integer
      BusinessAreaName:
        type: string
      FacilityID:
        format: int32
        type: integer
      FacilityName:
        type: string
      InsertedUser:
        type: string
      InsertedTime:
        format: date-time
        type: string
      UpdatedUser:
        type: string
      UpdatedTime:
        format: date-time
        type: string
  Optimo.WebAPI.Models.Security.User:
    description: >-
      All access to the OPTIMO application (excluding public web) requires a
      user account. A user may belong to one or more user groups, which controls
      which level of access the user has got.
    type: object
    properties:
      Id:
        description: Id of the user.
        type: string
      UserName:
        description: Username to log into OPTIMO.
        type: string
      Active:
        description: >-
          Indicates whether the user is active. Only active users may log into
          OPTIMO.
        type: boolean
      FirstName:
        description: First name of the user.
        type: string
      LastName:
        description: Last name of the user.
        type: string
      Email:
        description: Email of the user.
        type: string
      Contact:
        $ref: '#/definitions/Optimo.WebAPI.Models.Customer.Contact'
        description: >-
          If a user makes a booking for personal purposes a customer account
          should be created and optionally linked to the user via this field.
      DefaultDiaryView:
        format: int32
        description: >-
          Can be set to customise the user's diary view: 1- Facility, 2-
          Resource, 3-Branding Area
        type: integer
      DefaultVenue:
        $ref: '#/definitions/Optimo.WebAPI.Models.Venue'
        description: The default venue for the user.
      DefaultSite:
        $ref: '#/definitions/Optimo.WebAPI.Models.Site.Result.Site'
        description: The default site for the user.
      Venues:
        description: List of venues the user has access to.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Venue'
      Sites:
        description: List of sites the user has access to.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Site.Result.Site'
      Groups:
        description: List of user groups the user belongs to.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Group'
      EnforcePasswordExpiration:
        description: Enforce the default password expiry policy for the user.
        type: boolean
      ChangePasswordOnNextLogin:
        description: Indicates that the user must change password on the next login.
        type: boolean
      ProfileImage:
        description: Profile image of the user.
        type: string
      Password:
        description: The user's password, generally stored as a hashed value.
        type: string
      InSalesDepartment:
        description: >-
          Indicates whether the user is part of the sales department and thus
          may be the sales assistant for a booking.
        type: boolean
      InEventDepartment:
        description: >-
          Indicates whether the user is part of the events department and thus
          may be the event manager of an event.
        type: boolean
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      UserRights:
        description: A list of all user rights the user has access to.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Security.UserAccessRight'
      OutlookTaskListID:
        description: >-
          Id of the Outlook task list used for synchronisation of tasks between
          OPTIMO and Outlook.
        type: string
  Optimo.WebAPI.Models.Item.Tax:
    type: object
    properties:
      Id:
        type: string
      Name:
        type: string
      InvoiceDescription:
        type: string
      TaxEffectiveDates:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Item.TaxEffectiveDate'
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      ExternalReference:
        type: string
  Optimo.WebAPI.Models.Item.SalesCategory:
    type: object
    properties:
      Id:
        type: string
      Name:
        type: string
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.Item.ItemSalesChannel:
    type: object
    properties:
      Id:
        type: string
      Name:
        type: string
      AllowImmediateConfirmedBookings:
        format: int32
        type: integer
      SalesChannel:
        $ref: '#/definitions/Optimo.WebAPI.Models.SalesChannel.SalesChannel'
  Optimo.WebAPI.Models.ValidWeekDay:
    type: object
    properties:
      Id:
        type: string
      Day:
        type: string
      InsertedUser:
        type: string
      UpdatedUser:
        type: string
      InsertedTime:
        format: date-time
        type: string
      UpdatedTime:
        format: date-time
        type: string
  Optimo.WebAPI.Models.Item.ItemTask:
    type: object
    properties:
      Id:
        type: string
      Tasks:
        $ref: '#/definitions/Optimo.WebAPI.Models.Task'
      ItemID:
        type: string
      TaskID:
        type: string
  Optimo.WebAPI.Models.Question:
    type: object
    properties:
      Id:
        type: string
      QuestionText:
        description: Question text
        type: string
      Mandatory:
        type: boolean
      AllowUndecided:
        type: boolean
      QuantityRequired:
        type: boolean
      SalesChannels:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.SalesChannel.SalesChannel'
      QuestionType:
        description: 1 - General, 2- Mobility, 3 - Catering
        enum:
          - General
          - Mobility
          - Catering
        type: string
      QuestionNo:
        format: int32
        type: integer
      QuestionID:
        format: int32
        type: integer
      BookingStatusId:
        format: int32
        type: integer
      BookingStatus:
        type: string
  Optimo.WebAPI.Models.TemplateTask:
    type: object
    properties:
      Id:
        type: string
      Name:
        description: Template task name
        type: string
      Date:
        format: date-time
        description: Task created date
        type: string
      Reference:
        description: Task reference
        type: string
      FromUser:
        $ref: '#/definitions/Optimo.WebAPI.Models.Security.User'
        description: Task assignee
      AssignedUsers:
        description: Assigned users
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Security.User'
      AssignedUserGroups:
        description: Assigned user groups
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Group'
      FunctionSheetCategoryID:
        format: int32
        type: integer
      FunctionSheetCategory:
        description: Task function sheet category
        type: string
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      DateTypeId:
        format: int32
        type: integer
      DateType:
        type: string
      NoofDays:
        format: int32
        description: Use to create dynamic task due date.No of days
        type: integer
      PeriodId:
        format: int32
        description: Use to create dynamic task due date.Days before, after
        type: integer
      Period:
        type: string
  Optimo.WebAPI.Models.Item.Supplier:
    type: object
    properties:
      Id:
        type: string
      SupplierName:
        type: string
      RegisteredDate:
        format: date-time
        type: string
      MainContactTitleId:
        format: int32
        type: integer
      MainContactTitle:
        type: string
      MainContactLastname:
        type: string
      SupplierCategoryId:
        format: int32
        type: integer
      SupplierCategory:
        type: string
      CommunicationMethods:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Customer.CommunicationMethod'
      Address:
        $ref: '#/definitions/Optimo.WebAPI.Models.Customer.Address'
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.BookingTask:
    description: Booking task related information
    type: object
    properties:
      Booking:
        $ref: '#/definitions/Optimo.WebAPI.Models.Booking.V1.Booking'
      BookingStatus:
        $ref: '#/definitions/Optimo.WebAPI.Models.Booking.BookingStatus'
      BookingClient:
        $ref: '#/definitions/Optimo.WebAPI.Models.Customer.Client'
      BookingContact:
        $ref: '#/definitions/Optimo.WebAPI.Models.Customer.Contact'
      ItemTask:
        $ref: '#/definitions/Optimo.WebAPI.Models.ItemTemplateTask'
      PackageTask:
        $ref: '#/definitions/Optimo.WebAPI.Models.PackageTemplateTask'
      DateTypeId:
        format: int32
        description: >-
          Use to create dynamic task due date. Booking date, Confirmed date,
          Event date
        type: integer
      DateType:
        type: string
      NoofDays:
        format: int32
        description: Use to create dynamic task due date. No of days
        type: integer
      PeriodId:
        format: int32
        description: Use to create dynamic task due date. Days before, after
        type: integer
      Period:
        type: string
      DurationTypeID:
        format: int32
        type: integer
      SpecificTime:
        format: date-time
        type: string
      BookingStatusID:
        type: string
      BookingStatusName:
        type: string
      Id:
        type: string
      Name:
        description: Task name or subject
        type: string
      TaskTypeID:
        format: int32
        type: integer
      TaskType:
        type: string
      Date:
        format: date-time
        description: Task created data
        type: string
      Note:
        description: Task description
        type: string
      Reference:
        description: Task reference
        type: string
      FromUser:
        $ref: '#/definitions/Optimo.WebAPI.Models.Security.User'
        description: Task assignee
      DueDate:
        format: date-time
        description: Task due date
        type: string
      SentDate:
        format: date-time
        description: Task assigned date
        type: string
      Completed:
        type: boolean
      CompletedDate:
        format: date-time
        type: string
      ReadStatus:
        description: Indicate whether task been red or not
        type: boolean
      Cancelled:
        type: boolean
      CancelledDate:
        format: date-time
        type: string
      FunctionSheetCategoryID:
        format: int32
        type: integer
      FunctionSheetCategory:
        type: string
      AssignedUsers:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Security.User'
      AssignedUserGroups:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Group'
      TaskUser:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.TaskUser'
      TaskNotifications:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.TaskNotification'
      Documents:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Document'
      ReminderDate:
        format: date-time
        description: Task reminder date
        type: string
      CompleteBy:
        $ref: '#/definitions/Optimo.WebAPI.Models.Security.User'
      CancelledBy:
        $ref: '#/definitions/Optimo.WebAPI.Models.Security.User'
      Notification:
        type: boolean
      parentTaskId:
        type: string
      Message:
        type: boolean
      SendReminderForAssignee:
        type: boolean
      TaskComments:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Customer.Note'
      TaskAttachments:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.TaskAttachment'
      Template:
        type: boolean
      TaskAutoCancellation:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.TaskAutoCancel'
      CancelReason:
        type: string
      TaskStatusId:
        format: int32
        type: integer
      SetTaskActiveOn:
        type: boolean
      IsActive:
        type: boolean
      RefID:
        format: int32
        type: integer
      FromUserID:
        format: int32
        type: integer
      IsAutoDueDate:
        type: boolean
      TaskForwardDetails:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.TaskHistory'
      PackageDetails:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Booking.V1.BookingPackage'
      ItemDetails:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Booking.V1.BookingItem'
      BookingPackageId:
        format: int32
        type: integer
      BookingItemId:
        format: int32
        type: integer
      BookingDetailId:
        format: int32
        type: integer
      ForwardNote:
        type: string
      TaskActiveScenarioID:
        format: int32
        type: integer
      InsertedTime:
        format: date-time
        type: string
      InsertedUser:
        type: string
  Optimo.WebAPI.Models.Customer.Contact:
    description: A contact person is an individual representing a client.
    type: object
    properties:
      Id:
        type: string
      Ref:
        description: Auto-generated based on a user-defined prefix.
        type: string
      Client:
        $ref: '#/definitions/Optimo.WebAPI.Models.Customer.Client'
        description: The client which the contact is associated with.
      Title:
        description: The title, e.g. "Mr.", "Mrs." etc. These are user-defined.
        type: string
      TitleId:
        format: int32
        type: integer
      FirstName:
        type: string
      LastName:
        type: string
      Active:
        description: Only active contacts may be used to create new bookings.
        type: boolean
      Position:
        description: The position, or job title, of the contact.
        type: string
      PositionId:
        format: int32
        type: integer
      ProfilePicture:
        description: A URL to a picture of the contact, if available.
        type: string
      AccountManager:
        $ref: '#/definitions/Optimo.WebAPI.Models.Security.User'
        description: >-
          The account manager of the contact, which may differ from the account
          manager assigned to the client.
      AccountManagerId:
        format: int32
        type: integer
      Address:
        $ref: '#/definitions/Optimo.WebAPI.Models.Customer.Address'
      UserName:
        description: >-
          The user name when logging in to the website - usually an email
          address.
        type: string
      MarketingConsents:
        description: List of marketing consent phrases the contact has agreed to.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Customer.MarketingConsent'
      MarketingAllowed:
        description: Pending removal.
        type: boolean
      PreferredContactMethod:
        description: Preferred way of getting in touch with the contact.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Customer.ContactMethod'
      DecisionMaker:
        description: For information used in the sales process only.
        type: boolean
      DefaultVenue:
        $ref: '#/definitions/Optimo.WebAPI.Models.Venue'
        description: >-
          The default venue for the contact. This is usually the venue where the
          contact was initially introduced, but may change later.
      Notes:
        description: Any general free text notes about the contact.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Customer.Note'
      Gender:
        format: int32
        description: 1- Male, 2- Female, 3-Other
        type: integer
      BirthDay:
        format: int32
        description: >-
          In order to be able to send birthday messages and promotions, only day
          and month of the contact need to be captured.
        type: integer
      BirthMonth:
        format: int32
        type: integer
      BirthYear:
        format: int32
        description: Optionally capture year of birth if necessary.
        type: integer
      AgeId:
        format: int32
        description: Age bracket which the contact falls into, e.g. "21-30"
        type: integer
      Age:
        type: string
      AnniversaryYear:
        format: int32
        type: integer
      AnniversaryMonth:
        format: int32
        type: integer
      AnniversaryDay:
        format: int32
        type: integer
      DateRegistered:
        format: date-time
        type: string
      Suspended:
        description: >-
          Indicates whether the contact's account is temporarily stopped from
          any processing.
        type: boolean
      SuspendedComment:
        description: Notes about the reason for the suspension.
        type: string
      InvoiceAddress:
        $ref: '#/definitions/Optimo.WebAPI.Models.Customer.Address'
        description: >-
          The default address to use for invoices when the contact makes a
          booking.
      MailingAddress:
        $ref: '#/definitions/Optimo.WebAPI.Models.Customer.Address'
        description: >-
          The default mailing address for correspondence such as quotations and
          contracts.
      DeliveryAddress:
        $ref: '#/definitions/Optimo.WebAPI.Models.Customer.Address'
        description: The default delivery address for items such as tickets and passes.
      CommunicationMethods:
        description: A list of phone numbers, email addresses and other contact details.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Customer.CommunicationMethod'
      InvoiceEmailAddressId:
        format: int32
        type: integer
      InvoiceEmailAddress:
        type: string
      Hobbies:
        description: A list of hobbies, which are user-defined.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Customer.Hobby'
      Preference:
        description: A list of preferences, which are user-defined.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Customer.Preference'
      Password:
        type: string
      Documents:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Document'
      Enquiry:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Enquiry'
      Task:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Task'
      OTAC:
        type: string
      OTACExpirtDate:
        format: date-time
        type: string
      Blocked:
        format: int32
        type: integer
      ExpiredPassword:
        type: boolean
      RandomPassword:
        type: boolean
      AlternativeContactRef:
        type: string
      ContactNotes:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Customer.Note'
      ContactAddresses:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Customer.Address'
      contactMarketingConsent:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Customer.ContactMarketingConsent'
      BookingTypes:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Package.BookingType'
      ContactVenues:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Venue'
      totalContactTasks:
        format: int32
        type: integer
      totalContactOverduePendingTasks:
        format: int32
        type: integer
      totalContactOverdueTasks:
        format: int32
        type: integer
      IsPrimaryContact:
        description: Get the Primary contact belongs to each client
        type: boolean
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.Site.Result.Site:
    type: object
    properties:
      Id:
        type: string
      Etag:
        type: string
      Name:
        type: string
      Active:
        type: boolean
      Description:
        type: string
      Fax:
        type: string
      Telephone:
        type: string
      Email:
        type: string
      Venue:
        $ref: '#/definitions/Optimo.WebAPI.Models.Venue'
      AmountToBeBank:
        format: double
        type: number
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.Group:
    description: >-
      User groups hold user rights for accessing the various functional areas in
      OPTIMO. A user may belong to multiple user groups.
    type: object
    properties:
      Id:
        description: Id of the user group
        type: string
      Name:
        description: Name of the user group
        type: string
      Description:
        description: Short description of the user group
        type: string
      SalesDepartment:
        description: Indicates whether the user group is part of the sales department.
        type: boolean
      EventDepartment:
        description: Indicates whether the user group is part of the events department.
        type: boolean
      Users:
        description: A list of users assigned to the user group.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Security.User'
      AccessRights:
        description: A list of all user rights the group has access to.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.AccessRight'
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.Security.UserAccessRight:
    type: object
    properties:
      AccessRightID:
        format: int32
        type: integer
      AccessRightName:
        type: string
      AccessRightDisplayName:
        type: string
      AccessRightNo:
        format: int32
        type: integer
      HasAccess:
        type: boolean
      Override:
        type: boolean
      EntityResourceDetailID:
        format: int32
        type: integer
  Optimo.WebAPI.Models.Item.TaxEffectiveDate:
    type: object
    properties:
      Id:
        type: string
      EffectiveDate:
        format: date-time
        type: string
      Value:
        format: double
        type: number
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.SalesChannel.SalesChannel:
    type: object
    properties:
      Id:
        type: string
      Name:
        type: string
      TermsAndConditions:
        type: string
      PrivacyPolicy:
        type: string
      CookiePolicy:
        type: string
      TermsAndConditionsFile:
        type: string
      PrivacyPolicyFile:
        type: string
      CookiePolicyFile:
        type: string
      RequiredPolicyAgreements:
        type: boolean
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.Task:
    type: object
    properties:
      Id:
        type: string
      Name:
        description: Task name or subject
        type: string
      TaskTypeID:
        format: int32
        type: integer
      TaskType:
        type: string
      Date:
        format: date-time
        description: Task created data
        type: string
      Note:
        description: Task description
        type: string
      Reference:
        description: Task reference
        type: string
      FromUser:
        $ref: '#/definitions/Optimo.WebAPI.Models.Security.User'
        description: Task assignee
      DueDate:
        format: date-time
        description: Task due date
        type: string
      SentDate:
        format: date-time
        description: Task assigned date
        type: string
      Completed:
        type: boolean
      CompletedDate:
        format: date-time
        type: string
      ReadStatus:
        description: Indicate whether task been red or not
        type: boolean
      Cancelled:
        type: boolean
      CancelledDate:
        format: date-time
        type: string
      FunctionSheetCategoryID:
        format: int32
        type: integer
      FunctionSheetCategory:
        type: string
      AssignedUsers:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Security.User'
      AssignedUserGroups:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Group'
      TaskUser:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.TaskUser'
      TaskNotifications:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.TaskNotification'
      Documents:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Document'
      ReminderDate:
        format: date-time
        description: Task reminder date
        type: string
      CompleteBy:
        $ref: '#/definitions/Optimo.WebAPI.Models.Security.User'
      CancelledBy:
        $ref: '#/definitions/Optimo.WebAPI.Models.Security.User'
      Notification:
        type: boolean
      parentTaskId:
        type: string
      Message:
        type: boolean
      SendReminderForAssignee:
        type: boolean
      TaskComments:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Customer.Note'
      TaskAttachments:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.TaskAttachment'
      Template:
        type: boolean
      TaskAutoCancellation:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.TaskAutoCancel'
      CancelReason:
        type: string
      TaskStatusId:
        format: int32
        type: integer
      SetTaskActiveOn:
        type: boolean
      IsActive:
        type: boolean
      RefID:
        format: int32
        type: integer
      FromUserID:
        format: int32
        type: integer
      IsAutoDueDate:
        type: boolean
      TaskForwardDetails:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.TaskHistory'
      PackageDetails:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Booking.V1.BookingPackage'
      ItemDetails:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Booking.V1.BookingItem'
      BookingPackageId:
        format: int32
        type: integer
      BookingItemId:
        format: int32
        type: integer
      BookingDetailId:
        format: int32
        type: integer
      ForwardNote:
        type: string
      TaskActiveScenarioID:
        format: int32
        type: integer
      InsertedTime:
        format: date-time
        type: string
      InsertedUser:
        type: string
  Optimo.WebAPI.Models.Customer.CommunicationMethod:
    description: >-
      Keeps track of contact details such as phone, mobile, fax, website URL,
      email etc.
    type: object
    properties:
      Id:
        type: string
      CommunicationType:
        description: >-
          The type of communication method, e.g. "Email" or "Office Phone".
          These are user-defined.
        type: string
      CommunicationTypeID:
        format: int32
        type: integer
      Value:
        description: The actual detail, e.g. an email address or a phone number.
        type: string
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.Customer.Address:
    description: Keeps track of postal addresses.
    type: object
    properties:
      Id:
        type: string
      Address1:
        description: First line of address, typically the street and number.
        type: string
      Address2:
        description: Second line of address, which is usually optional.
        type: string
      Address3:
        description: Third line of address, which is usually optional.
        type: string
      City:
        description: City or town.
        type: string
      County:
        description: County or state.
        type: string
      CountryID:
        format: int32
        type: integer
      Country:
        type: string
      StateCode:
        description: State code is used only for certain countries and may be mandatory.
        type: string
      State:
        type: string
      PostCode:
        description: Post code may be mandatory depending on country.
        type: string
      BookingDeliveryAddress:
        type: boolean
      BookingInvoiceAddress:
        type: boolean
      BookingCollectionAddress:
        type: boolean
      EntityTypeID:
        format: int32
        type: integer
      ReferenceEntityID:
        format: int32
        type: integer
      ZoneID:
        format: int32
        type: integer
      ExternalAddressID:
        type: string
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.Booking.V1.Booking:
    description: >-
      This class maintains booking header information as well as its collection
      of booking packages, invoices, payments etc.
    type: object
    properties:
      Id:
        type: string
      BookingReference:
        description: >-
          Auto-generated based on a user-defined prefix, which may change
          according to the venue or sales channel.
        type: string
      Client:
        $ref: '#/definitions/Optimo.WebAPI.Models.Customer.Client'
        description: The client of the booking. Read-only.
      Contact:
        $ref: '#/definitions/Optimo.WebAPI.Models.Customer.Contact'
        description: The contact of the booking.
      BookingDate:
        format: date-time
        description: The date and time, in UTC format, when the booking was created.
        type: string
      BookingStatus:
        $ref: '#/definitions/Optimo.WebAPI.Models.Booking.BookingStatus'
        description: >-
          The status of the booking. Booking statuses are user-defined within
          four parent statuses Quotation, Provisional, Confirmed and Cancelled.
      Confirmed:
        description: >-
          Indicates whether the booking is confirmed, that is, has reached a
          booking status of parent status "Confirmed".
        type: boolean
      ConfirmedDate:
        format: date-time
        description: >-
          The date and time, in UTC format, when the booking was confirmed. In
          some cases, bookings may move back to a provisional status after
          having been confirmed and then get re-confirmed.In such scenarios, the
          confirmed date field will indicate the first time the booking was
          confirmed.
        type: string
      Attendees:
        format: int32
        description: >-
          The total number of attendees for the booking, including all packages.
          Defaults to the sum of attendees for all packages and days by default,
          but may be edited.
        type: integer
      EventName:
        description: >-
          The event name or description of the booking. Defaults to the name of
          the first package added to a booking for a private event and to the
          the event of the first package for a public event.
        type: string
      PaymentTerm:
        $ref: '#/definitions/Optimo.WebAPI.Models.Booking.PaymentTerm'
        description: >-
          The payment term of the booking.Depending on the sales channel,
          customer and what packages are being booked, the payment term will
          initially be assigned automatically.The payment term may be changed by
          a user with the privilege ""May change payment term"", provided that
          the booking has not yet been invoiced.
      CancellationPolicy:
        $ref: '#/definitions/Optimo.WebAPI.Models.Booking.CancellationPolicy'
        description: >-
          The cancellation policy of the booking. Depending on the sales
          channel, customer and what packages are being booked, the cancellation
          policy will initially be assigned automatically.The cancellation
          policy may be changed by a user with the privilege ""May change
          cancellation policy"".
      SalesPerson:
        $ref: '#/definitions/Optimo.WebAPI.Models.Security.User'
        description: The sales person responsible for the booking.
      BookingReasonId:
        format: int32
        description: The reason for the booking, selected from a user-defined list.
        type: integer
      BookingReason:
        type: string
      BookingSourceId:
        format: int32
        description: The source Id of the booking, selected from a user-defined list.
        type: integer
      BookingSource:
        description: The source name of the booking, selected from a user-defined list.
        type: string
      GrossAmount:
        format: double
        description: The gross total booking amount, which includes all taxes.
        type: number
      NetAmount:
        format: double
        description: >-
          The net total booking amount, excluding taxes, but including all other
          charges such as delivery fees and booking charges, as well as any
          discounts.
        type: number
      TaxAmount:
        format: double
        description: The total tax amount for the booking. This may include multiple rates.
        type: number
      DiscountAmountExcludingTax:
        format: double
        description: Total discount amount given for the booking
        type: number
      DiscountAmountIncludingTax:
        format: double
        type: number
      DeliveryCharge:
        format: double
        description: The delivery charge for the booking, if applicable.
        type: number
      BookingCharge:
        format: double
        description: >-
          Total booking charge for the booking. Booking charge can be applied
          either per person or per booking, configured at sales channel level.
        type: number
      EstimatedCost:
        format: double
        description: >-
          Total estimated cost for the items in the booking. Estimated costs are
          set up at item and package level but may be amended at booking level
          for upsell items and bespoke packages (but not standard packages), for
          users with adequate permissions.
        type: number
      ActualCost:
        format: double
        description: >-
          Total actual cost for the items in the booking. Actual costs are
          entered after an event in order to reconcile against
          budgeted/estimated cost and assess actual profitability.
        type: number
      Margin:
        format: double
        description: >-
          Margin of the booking, in percent, based on net amount and estimated
          cost.
        type: number
      InvoicedAmount:
        format: double
        description: Total invoice amount at the given point in time.
        type: number
      NextInvoiceDate:
        format: date-time
        description: >-
          Next invoice date as per the payment terms of the booking. If fully
          invoiced this will be null.
        type: string
      PaidAmount:
        format: double
        description: Total paid amount for the booking.
        type: number
      DueAmount:
        format: double
        description: Amount currently due to be paid based on the payment terms.
        type: number
      Note:
        description: Free text notes for the booking, usually for internal use.
        type: string
      Cancelled:
        description: >-
          Indicates whether the booking has been cancelled. Once a booking is
          cancelled it cannot be reversed back to an active state (but it's
          possible to create a copy of it with an active status).
        type: boolean
      CancellationReasonId:
        format: int32
        description: >-
          The reason for the cancellation when a booking is cancelled. This is a
          mandatory field when a booking is cancelled.
        type: integer
      CancellationReason:
        type: string
      CancelledDate:
        format: date-time
        description: The date of the cancellation, if applicable.
        type: string
      CancellationFee:
        format: double
        type: number
      Enquiry:
        $ref: '#/definitions/Optimo.WebAPI.Models.Enquiry'
        description: The enquiry associated with the booking, if applicable.
      EventManager:
        $ref: '#/definitions/Optimo.WebAPI.Models.Security.User'
        description: >-
          The event manager for the booking. For large bookings, over multiple
          days and/or with multiple events, there may be multiple event
          managers, but specified at function sheet level. Defaults to the
          default event manager of the first package added to the booking.
      SalesChannelId:
        format: int32
        description: >-
          The sales channel Id which the booking was originated. This is
          assigned automatically either based on the logged in sales channel or
          based on the customer type.
        type: integer
      SalesChannel:
        description: >-
          The sales channel name which the booking was originated. This is
          assigned automatically either based on the logged in sales channel or
          based on the customer type.
        type: string
      Temporary:
        description: >-
          Indicates whether the booking is a temporary booking, which is mainly
          used for internet bookings to ensure stock is not held too long.
          Temporarly bookings are automatically expiring after the system
          configured threshold, typically 15-20 minutes.
        type: boolean
      ExpiryDate:
        format: date-time
        description: >-
          Indicates the time when the booking will get expired, if applicable.
          Used both for short term expiries like web bookings as well as for
          long term expiries such as quotations.
        type: string
      ApprovalWarning:
        description: >-
          Any approval conditions that are applicable for this booking, used by
          an approver to make a decision whether to approve the booking or not.
        type: string
      SecureBookingRef:
        description: >-
          A random reference (GUID) assigned to the booking for use with
          temporary links when it's undesirable to include an actual booking
          reference as those can easily be guessed.
        type: string
      POReference:
        description: Purchase order reference or other reference provided by the customer.
        type: string
      AlternativeBookingRef:
        description: >-
          An alternative reference for the booking, typically used for third
          party software integration.
        type: string
      AgentBooking:
        description: >-
          Indicates whether the booking is originated from an agent. Normally,
          the agent would be populated in the referrer field.
        type: boolean
      ReferrerClient:
        $ref: '#/definitions/Optimo.WebAPI.Models.Customer.Client'
        description: >-
          Keeps track of the referrer for a booking, if applicable. The referrer
          is often an agent, tour operator or other type of partner.
      ReferrerContact:
        $ref: '#/definitions/Optimo.WebAPI.Models.Customer.Contact'
        description: Keeps track of the referrer contact for the booking, if applicable.
      Exported:
        description: Indicates whether the booking is exported to a third party software.
        type: boolean
      CopiedBookingId:
        format: int32
        description: Source booking which the booking is copied from, if applicable.
        type: integer
      CampaignId:
        format: int32
        description: >-
          The campaign which a booking is originated from, if applicable.
          Campaign can be entered directly or be derived from a promotional code
          associated with a campaign.
        type: integer
      MobilityNote:
        type: string
      PaymentOnCollection:
        description: >-
          Indicates whether the booking is to be paid on collection. Pay on
          collection bookings can be confirmed and keep stock reserved but
          cannot be despatched by any other method than collection and can only
          be collected once fully paid.
        type: boolean
      PaymentNote:
        description: >-
          A payment chasing note to keep track of what indications the customer
          has made about making an outstanding payment.
        type: string
      SpecialNote:
        description: Any special requests for the booking.
        type: string
      Currency:
        $ref: '#/definitions/Optimo.WebAPI.Models.Booking.Currency'
        description: The currency used for the booking.
      CurrencyExchangeRate:
        format: double
        description: >-
          If a currency which is different from the base currency is used for
          the booking, this field keeps track of the exchange rate at the time
          of the booking.
        type: number
      WaitlistBooking:
        description: Indicates whether the booking is a waitlist booking.
        type: boolean
      PaymentProcessStartTime:
        format: date-time
        description: >-
          This is mainly using for credit card payments. This field indicate the
          time that booking process entered to the payment gateway pages
        type: string
      PaymentInProgress:
        description: >-
          This is used to indicate that the booking is currently redirected to a
          payment gateway for payment processing.
        type: boolean
      ShowPriceWithTax:
        description: >-
          Indicates whether prices should be presented with or without tax,
          which is determined by the type of product originally added to the
          booking.
        type: boolean
      Site:
        $ref: '#/definitions/Optimo.WebAPI.Models.Site.Result.Site'
        description: 'Box office only: the site where the booking was transacted.'
      Till:
        $ref: '#/definitions/Optimo.WebAPI.Models.Till.Till'
        description: 'Box office only: the till where the booking was transacted.'
      PriceConcession:
        $ref: '#/definitions/Optimo.WebAPI.Models.PriceConcession'
        description: The price concession for the booking.
      Venue:
        $ref: '#/definitions/Optimo.WebAPI.Models.Venue'
        description: Primary venue of the booking.
      EventStartDate:
        format: date-time
        description: The first day of the booked event(s), in local time.
        type: string
      EventEndDate:
        format: date-time
        description: The last day of the booked event(s), in local time.
        type: string
      BookingPackages:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Booking.V1.BookingPackage'
      BookingItems:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Booking.V1.BookingItem'
      Invoices:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Invoice.Invoice'
      DeliveryMethod:
        $ref: '#/definitions/Optimo.WebAPI.Models.Packages.DeliveryMethod'
      CurrencyID:
        format: int32
        type: integer
      CurrencyCode:
        type: string
      CurrencyName:
        type: string
      InvoiceAddress:
        $ref: '#/definitions/Optimo.WebAPI.Models.Customer.Address'
        description: >-
          The address to use for invoices and credit card payment authorisation.
          Defaults to the contact's invoice address, but may be changed.
      DeliveryAddress:
        $ref: '#/definitions/Optimo.WebAPI.Models.Customer.Address'
        description: >-
          The delivery address for items such as tickets and passes. Defaults to
          the contact's delivery address, but may be changed.
      CollectionAddress:
        $ref: '#/definitions/Optimo.WebAPI.Models.Customer.Address'
        description: The collection address for waste collection type booking.
      EntityConfigurationProfileId:
        format: int32
        type: integer
      TotalAmount:
        format: double
        type: number
      TotalActualCost:
        format: double
        type: number
      TotalBookingQuestions:
        format: int32
        type: integer
      TotalAnsweredQuestions:
        format: int32
        type: integer
      TotalUnAnsweredMandatoryQuestions:
        format: int32
        type: integer
      TotalBookingTasks:
        format: int32
        type: integer
      TotalCompletedTasks:
        format: int32
        type: integer
      TotalOverdueTasks:
        format: int32
        type: integer
      ExternalBookingId:
        type: string
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      AuditHistory:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.AuditHistory'
      BookingQuestionnaires:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.BookingQuestionnaire'
      BondActivity:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Booking.BondActivity'
      NextBookingStatusID:
        format: int32
        type: integer
      BookingUserDefinedFields:
        description: User defined booking fields.
        type: array
        items:
          $ref: >-
            #/definitions/Optimo.WebAPI.Models.UserDefinedField.BookingUserDefinedField
      GrossAmountExcludingBond:
        format: double
        type: number
      NetAmountExcludingBond:
        format: double
        type: number
      TotalBondAmount:
        format: double
        type: number
      UserDefinedField:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.UserDefinedField.UserDefinedField'
      InvoiceStatus:
        enum:
          - FullyInvoiced
          - PartiallyInvoiced
          - NotInvoiced
        type: string
      PaymentStatus:
        enum:
          - FullyPaid
          - PartiallyPaid
          - NotPaid
          - Overdue
        type: string
      BookingApprovalTrail:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Booking.V1.BookingApprovalTrail'
      ApprovalRequirementId:
        format: int32
        type: integer
      NextApprover:
        type: string
      NextApproveUser:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Security.User'
      NextApproveGroup:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Group'
      PendingPushAction:
        type: boolean
      ProvisionalBookingStatusInvoiceDate:
        format: date-time
        type: string
      InvoicedAmountExcludingBond:
        format: double
        type: number
      BookingTypeId:
        format: int32
        type: integer
      SeasonId:
        format: int32
        type: integer
      BookingTasks:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.BookingTask'
      TotalPendingAndOverDueTasks:
        format: int32
        type: integer
      CustomerFeedback:
        $ref: '#/definitions/Optimo.WebAPI.Models.CustomerFeedback'
  Optimo.WebAPI.Models.Booking.BookingStatus:
    description: >-
      Booking statuses are configurable to allow customised workflows with
      automations for different types of bookings.
    type: object
    properties:
      Id:
        type: string
      Name:
        description: The name of the booking status
        type: string
      StockAllocated:
        description: Indicates whether stock should be allocated for this booking status.
        type: boolean
      Precedence:
        format: int32
        description: Indicates the order which booking statuses would normally progress
        type: integer
      Description:
        description: A description of the booking status.
        type: string
      ParentStatus:
        description: "The parent booking status, which can be either:\r\n            1 - Quotation\r\n            2 - Provisional\r\n            3 - Confirmed\r\n            4 - Cancelled"
        enum:
          - Quotation
          - Provisional
          - Confirmed
          - Cancelled
        type: string
      CalenderColor:
        description: Colour used to highlight bookings in the diary and calendar.
        type: string
      ExpiresAfterEventStartDate:
        description: >-
          Indicates whether the status should automatically expire after the
          event has started. May be used in conjunction with ExpiresAfterDays,
          in which case the first event will trigger the expiry.
        type: boolean
      ExpiresAfterEventEndDate:
        description: >-
          Indicates whether the status should automatically expire after the
          event has finished. May be used in conjunction with ExpiresAfterDays,
          in which case the first event will trigger the expiry.
        type: boolean
      ExpiresAfterDays:
        format: int32
        description: >-
          Indicates after how many days the status should expire after, if
          required. May be used in conjunction with ExpiresAfterEventDate, in
          which case the first event will trigger the expiry.
        type: integer
      ExpiryBookingStatus:
        $ref: '#/definitions/Optimo.WebAPI.Models.Booking.BookingStatus'
        description: >-
          Determines which booking status should be assigned when the status
          expires, according to the above expiry settings.
      ApprovalType:
        description: "Indicates whether approval is required in order to progress further and if so either:\r\n            0 - Approval not required(default)\r\n            1 - Approval Required Always\r\n            2 - Approval Required Conditionally\r\n            Note that if approval is required then users will not be able to progress to any other status than the status specified in ApprovedBookingStatus(and that will not be executed until approved) unless the user has the right to \"Bypass Booking Approvals\"."
        enum:
          - ApprovalNotRequired
          - ApprovalRequiredAlways
          - ApprovalRequiredConditionally
        type: string
      ApprovedBookingStatus:
        $ref: '#/definitions/Optimo.WebAPI.Models.Booking.BookingStatus'
        description: The booking status to automatically progress to if approved.
      RejectedBookingStatus:
        $ref: '#/definitions/Optimo.WebAPI.Models.Booking.BookingStatus'
        description: The booking status to automatically progress to if rejected.
      ApprovalConditions:
        description: >-
          If ApprovalType is "Approval Required Conditionally" then one or more
          approval conditions may be specified. If more than one condition is
          specified then any of the conditions needs to be true in order to
          trigger approval (an OR operator).
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Booking.ApprovalCondition'
      Approvers:
        description: If approval is required, one or more approvers must be specified.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Booking.Approver'
      ApproverSequence:
        description: "If approval is required, this specifies who will need to approve in more than one approver is specified (i.e. the Approvers collection has more than one entry), options which are:\r\n            1 - Any(when any approver has made a decision the booking is considered approved or rejected)\r\n            2 - All in Parallel(all approvers must approve in order to consider the booking approved. If anybody rejects, it's rejected)\r\n            3 - All in Sequence (all approvers must approve, but one after the other starting from the first in the list)"
        enum:
          - Any
          - AllinParallel
          - AllinSequence
        type: string
      Notifications:
        description: >-
          Manages notifications to be sent out when the status is applied to a
          booking first time.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Booking.Notification'
      ApprovedNotifications:
        description: Manages notifications to be sent out when the status is approved.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Booking.Notification'
      RejectedNotifications:
        description: Manages notifications to be sent out when the status is rejected.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Booking.Notification'
      ExpiryNotifications:
        description: Manages notifications to be sent out when the status is expired.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Booking.Notification'
      CanSendBookingDocument:
        description: >-
          Indicates whether it's permitted to send out a booking document such
          as a quotation or proposal at this booking status. Defaults to the
          same value as the previous booking status (as per sequence).
        type: boolean
      CanSendFunctionSheet:
        description: >-
          Indicates whether it's permitted to send out a function sheet at this
          booking status. Applies to both customers, suppliers and internal
          users. It is permitted to generate and prepare a function sheet, but
          it cannot be published or emailed. Defaults to the same value as the
          previous booking status (as per sequence).
        type: boolean
      CanGenerateInvoice:
        description: >-
          Indicates whether it's permitted to generate and send out an invoice
          (or proforma) at this booking status. Defaults to the same value as
          the previous booking status (as per sequence).
        type: boolean
      CanMakeDateChanges:
        description: >-
          Indicates whether it's permitted to make any change that affects event
          date or time. Defaults to the same value as the previous booking
          status (as per sequence).
        type: boolean
      CanMakeFinancialChanges:
        description: >-
          Indicates whether it's permitted to make any change that affects the
          booking total at this booking status. Defaults to the same value as
          the previous booking status (as per sequence).
        type: boolean
      BookingWorkflows:
        description: >-
          Specifies which booking workflows the booking status is applicable to.
          Can be left null to indicate it's used by all workflows. See also
          BookingWorkflow.BookingStatuses.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Booking.BookingWorkflow'
  Optimo.WebAPI.Models.Customer.Client:
    description: >-
      Abstract class containing client information, which can be either a
      corporate, individual, agent or prospect.
    type: object
    properties:
      Id:
        type: string
      ClientRef:
        description: Auto-generated based on a user-defined prefix.
        type: string
      AlternativeClientRef:
        description: >-
          Alternative client reference, for example an identifier for the client
          used in a third party system
        type: string
      AlternativeClientID:
        type: string
      ClientName:
        description: >-
          The name of the client, which will either be the full name of an
          individual or the company name of a corporate.
        type: string
      ProfilePicture:
        type: string
      AccountManager:
        $ref: '#/definitions/Optimo.WebAPI.Models.Security.User'
        description: >-
          The account manager of the client, which may differ from the account
          manager assigned to its contacts.
      AccountManagerName:
        type: string
      Active:
        description: >-
          Used to indicate whether a client  Only active clients may be used to
          create new bookings. See also the Suspended field below, which may be
          used for temporarily stop processing a client account.
        type: boolean
      ClientCategoryId:
        format: int32
        type: integer
      ClientCategory:
        description: The primary client category.
        type: string
      AlternativeClientCategoryRef:
        description: >-
          Any additional client categories, including membership categories. If
          the client is a member, the membership category will be recorded as an
          additional client category along with membership number and an expiry
          date.
        type: string
      ClientType:
        description: >-
          The client type, which can be either: 1. Regular(as in standard) 2.
          Agent3. Tour Operator4. Partner5. Prospect Client types are system
          controlled and determine which sales channel is assigned to bookings
          if the type is either agent, tour operator or partner. (For regular
          clients, the method of selling is used to determine sales channel,
          while prospects cannot book until they have become a regular client).
        type: string
      ClientTypeId:
        format: int32
        type: integer
      PaymentTerm:
        $ref: '#/definitions/Optimo.WebAPI.Models.Booking.PaymentTerm'
        description: >-
          The default payment term for the client. This is optional. If
          assigned, this will override the payment term used by the package
          added to a booking.
      CreditStatus:
        description: >-
          Indicates credit status of the client. Credit statuses are
          user-defined and may be set up to warn or stop further sales at
          specific statuses.
        type: string
      CreditStatusId:
        format: int32
        type: integer
      Suspended:
        description: >-
          Indicates whether the client account is temporarily stopped from any
          processing.
        type: boolean
      SuspendedComment:
        description: Notes about the reason for the suspension.
        type: string
      AnnualBudget:
        format: double
        description: >-
          May be used to keep track of the client's annual budget for spending
          on events.
        type: number
      Source:
        description: Records how the client was introduced to the organisation.
        type: string
      SourceId:
        format: int32
        type: integer
      DefaultVenue:
        $ref: '#/definitions/Optimo.WebAPI.Models.Venue'
        description: >-
          The client's default venue, normally the one where the client was
          originally introduced.
      ClientVenues:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Venue'
      DateRegistered:
        format: date-time
        type: string
      CreditLimit:
        format: double
        description: >-
          Credit clients may trade on credit as long as it is below their credit
          limit. Once the limit is reached the standard payment terms will
          apply.
        type: number
      OpeningBalance:
        format: double
        description: >-
          Used to set an opening balance for existing clients when migrating
          from another system.
        type: number
      Tax:
        $ref: '#/definitions/Optimo.WebAPI.Models.Item.Tax'
        description: >-
          Indicates whether the client has a special, typically zero-rated, tax
          code. If so, this will override any standard tax rates defined at
          proudct level.
      Notes:
        description: Any general free text notes about the client.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Customer.Note'
      DefaultCurrencyId:
        format: int32
        type: integer
      DefaultCurrency:
        type: string
      SalesChannelId:
        format: int32
        type: integer
      SalesChannel:
        type: string
      Address:
        $ref: '#/definitions/Optimo.WebAPI.Models.Customer.Address'
        description: The default address for the client.
      Contacts:
        description: A URI to the list of contacts attached to the client.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Customer.Contact'
      CommunicationMethods:
        description: A list of phone numbers, email addresses and other contact details.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Customer.CommunicationMethod'
      Bookings:
        description: A URI to the list of bookings made by the client.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Booking.V1.Booking'
      Enquires:
        description: A URI to the list of enquiries made by the client.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Enquiry'
      Tasks:
        description: A URI to the list of tasks associated with the client.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Task'
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      AdditionalClientCategories:
        description: >-
          Any additional client categories, including membership categories. If
          the client is a member, the membership category will be recorded as an
          additional client category along with membership number and an expiry
          date.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Customer.AdditionalClientCategory'
      Documents:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Document'
      ContactNotes:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Customer.Note'
      ContactAddresses:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Customer.Address'
      MarketingConsent:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Customer.MarketingConsent'
      PriceConcession:
        $ref: '#/definitions/Optimo.WebAPI.Models.PriceConcession'
      BookingTypes:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Package.BookingType'
  Optimo.WebAPI.Models.ItemTemplateTask:
    description: Item template task
    type: object
    properties:
      Owner:
        $ref: '#/definitions/Optimo.WebAPI.Models.Item.Item'
      Id:
        type: string
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.PackageTemplateTask:
    description: Package template task
    type: object
    properties:
      Owner:
        $ref: '#/definitions/Optimo.WebAPI.Models.Packages.Package'
      Id:
        type: string
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.TaskUser:
    type: object
    properties:
      Id:
        type: string
      TaskID:
        format: int32
        type: integer
      UserID:
        format: int32
        type: integer
      GroupID:
        format: int32
        type: integer
      IsRead:
        type: boolean
      InsertedTime:
        format: date-time
        type: string
      InsertedUser:
        type: string
  Optimo.WebAPI.Models.TaskNotification:
    type: object
    properties:
      Id:
        type: string
      ScenarioId:
        format: int32
        type: integer
      NotificationType:
        enum:
          - Notification
          - Email
        type: string
      Scenario:
        $ref: '#/definitions/Optimo.WebAPI.Models.TaskNotificationScenario'
      TemplateId:
        format: int32
        type: integer
      TaskId:
        format: int32
        type: integer
      NotificationTypeID:
        format: int32
        type: integer
  Optimo.WebAPI.Models.Customer.Note:
    type: object
    properties:
      Id:
        type: string
      PlainText:
        type: string
      RichText:
        type: string
      Html:
        type: string
      EntityTypeID:
        format: int32
        type: integer
      EntityType:
        type: string
      NoteTypeId:
        format: int32
        type: integer
      NoteType:
        type: string
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      EntityConfigurationProfileId:
        format: int32
        type: integer
      FromUser:
        $ref: '#/definitions/Optimo.WebAPI.Models.Security.User'
      UserId:
        format: int32
        type: integer
      ReferenceEntityId:
        format: int32
        type: integer
      UserName:
        type: string
      Date:
        format: date-time
        type: string
      ImageUrl:
        type: string
      ImageName:
        type: string
      Base64Image:
        type: string
      ImageType:
        type: string
  Optimo.WebAPI.Models.TaskAttachment:
    type: object
    properties:
      Id:
        type: string
      TaskID:
        format: int32
        type: integer
      Attachment:
        format: byte
        type: string
      Name:
        type: string
      Description:
        type: string
      DocumentType:
        type: string
      InsertedUser:
        type: string
      InsertedTime:
        format: date-time
        type: string
  Optimo.WebAPI.Models.TaskAutoCancel:
    type: object
    properties:
      Id:
        type: string
      ScenarioId:
        format: int32
        type: integer
      TaskID:
        format: int32
        type: integer
  Optimo.WebAPI.Models.TaskHistory:
    type: object
    properties:
      Id:
        type: string
      TaskID:
        format: int32
        type: integer
      TaskHistoryTypeId:
        format: int32
        type: integer
      FromUserIds:
        type: string
      FromUserGroupIds:
        type: string
      ToUserIds:
        type: string
      ToUserGroupIds:
        type: string
      Description:
        type: string
      From:
        type: string
      To:
        type: string
      WorkStation:
        type: string
      TaskHistoryType:
        enum:
          - General
          - TaskForward
          - TaskComplete
          - TaskCancel
        type: string
      InsertedTime:
        format: date-time
        type: string
      InsertedUser:
        type: string
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.Booking.V1.BookingPackage:
    description: >-
      Everything added to a booking in OPTIMO is based on packages. A package
      may contain one ore more items.
    type: object
    properties:
      Id:
        type: string
      Name:
        description: >-
          The name of the package. This can be edited for bespoke packages and
          private event packages. Note that for private events, this is often
          considered being the event name.
        type: string
      Attendees:
        format: int32
        description: >-
          Number of attendees. Defaults to quantity multiplied by attendees per
          package, but may be overridden for some types of packages.
        type: integer
      Quantity:
        format: int32
        description: >-
          The number of packages. This is often the same as number of attendees,
          but may vary depending on how the package is priced.
        type: integer
      PriceTypeId:
        format: int32
        description: The price type used for the package.
        type: integer
      PriceType:
        type: string
      UnitPrice:
        format: double
        description: TODO Remove.
        type: number
      UnitPriceExcludingTax:
        format: double
        description: >-
          The price per package and unit excluding tax. Requires special user
          right to edit.
        type: number
      UnitPriceIncludingTax:
        format: double
        description: >-
          The price per package and unit including tax. Requires special user
          right to edit.
        type: number
      PriceSettingMethodId:
        format: int32
        description: "The method which the price has been set, which can be either:\r\n            <para>0 - Undeterminable</para><para>1 - Excluding tax</para><para>2 - Including tax</para><para>This field should normally not be assigned as it's calculated by OPTIMO. However, it can be overridden for certain scenarios, </para><para>e.g. if you only display prices excluding tax to the user, then set the price setting method to 1.</para>"
        type: integer
      EstimatedUnitCost:
        format: double
        description: >-
          Total estimated cost per unit for the items in the package. Estimated
          costs are set up at item and package level but may be amended at
          booking level for upsell items and bespoke packages (but not standard
          packages), for users with adequate permissions.
        type: number
      EstimatedTotalCost:
        format: double
        description: >-
          Total estimated cost for the items and quantities in the package.
          Estimated costs are set up at item and package level but may be
          amended at booking level for upsell items and bespoke package items
          (but not standard packages), for users with adequate permissions.
        type: number
      ActualUnitCost:
        format: double
        description: >-
          Total actual cost per unit for the items in the package. Actual costs
          are entered after an event in order to reconcile against
          budgeted/estimated cost and assess actual profitability.
        type: number
      ActualTotalCost:
        format: double
        description: >-
          Total actual cost for the items and quantities in the package. Actual
          costs are entered after an event in order to reconcile against
          budgeted/estimated cost and assess actual profitability.
        type: number
      TaxId:
        format: int32
        type: integer
      TaxCode:
        description: >-
          The tax code being used for the booking package. Requires special user
          right to edit.
        type: string
      TaxRate:
        format: double
        description: >-
          The tax rate used for the package. In some scenarios, tax rates are
          defined at item level, in which case this is null.
        type: number
      TaxAmount:
        format: double
        description: The total tax amount for the package. This may include multiple rates.
        type: number
      NetAmount:
        format: double
        description: >-
          The net total package amount, excluding taxes, but including all other
          charges such as delivery fees and booking charges, as well as any
          discounts. Requires special user right to edit.
        type: number
      Margin:
        format: double
        description: >-
          Margin of the package, in percent, based on net amount and estimated
          cost.
        type: number
      TotalAmount:
        format: double
        type: number
      GrossAmount:
        format: double
        description: >-
          The gross total package amount, including taxes and all other charges
          such as delivery fees and booking charges, as well as any discounts.
          Requires special user right to edit.
        type: number
      DiscountAmount:
        format: double
        type: number
      StartDate:
        format: date-time
        type: string
      EndDate:
        format: date-time
        description: End date of the package, in local time.
        type: string
      Bespoke:
        description: >-
          Indicates whether this is a bespoke package. If so, users may remove,
          rename and change prices of any default items. The name may also be
          edited.
        type: boolean
      Note:
        description: A note about the record.
        type: string
      AttendeesPerPackage:
        format: int32
        description: >-
          The number of attendees one package holds. This is usually one, but
          may be more for packages such as family packages or private suite
          packages.
        type: integer
      Complimentary:
        description: >-
          Indicates whether this is a complimentary, or free of charge, package.
          Users with the right "Allow selling complimentary packages" may sell
          any package free of charge.
        type: boolean
      BookingItems:
        description: >-
          The list of items in the package. This list may consist of standard
          items (if a standard package), default items (if a bespoke package) as
          well as upsell items, which have been added at point of booking.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Booking.V1.BookingItem'
      Event:
        $ref: '#/definitions/Optimo.WebAPI.Models.Event'
        description: The primary event of the package
      Package:
        $ref: '#/definitions/Optimo.WebAPI.Models.Packages.Package'
        description: A reference to the package which is being booked.
      PackageType:
        $ref: '#/definitions/Optimo.WebAPI.Models.Packages.LinkedPackageType'
        description: >-
          The package type of the package, which can be either the primary or a
          linked (e.g. child or student) type.
      VoucherPackage:
        description: Indicates whether this is a voucher package being booked.
        type: boolean
      VoucherRedeemedPackage:
        description: >-
          Indicates whether this is a package that has been booked by redeeming
          an experience voucher.
        type: boolean
      PrimaryPackageId:
        format: int32
        description: >-
          If a linked package then this will contain a reference to the primary
          package. If a primary package then this will be null.
        type: integer
      AttendeeCaptureProfile:
        $ref: '#/definitions/Optimo.WebAPI.Models.Packages.AttendeeCaptureProfile'
        description: >-
          An attendee capture profile determines what information to capture for
          hosts, guests, delegates and participants. The profile may be changed
          for bespoke packages only.
      CostCentreCode:
        description: >-
          The cost centre code assigned to the booked package, which is
          determined based on venue settings but may be overridden.
        type: string
      HasUpsellItems:
        description: >-
          Indicates whether there are any upsell items included in the booking
          package.
        type: boolean
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      SingleDayPackage:
        type: boolean
      EntityConfigurationProfileId:
        format: int32
        type: integer
      TId:
        type: string
      Sequence:
        format: int32
        type: integer
      PackageBookingQuestionnaires:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.PackageBookingQuestionnaire'
      NetAmountExcludingBond:
        format: double
        type: number
      TotalBondAmount:
        format: double
        type: number
      UnitPriceExcludingBond:
        format: double
        type: number
      BookingDetailStatus:
        $ref: '#/definitions/Optimo.WebAPI.Models.BookingDetailStatus'
      BookingPackageNotes:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Customer.Note'
      Booking:
        $ref: '#/definitions/Optimo.WebAPI.Models.Booking.V1.Booking'
  Optimo.WebAPI.Models.Booking.V1.BookingItem:
    description: >-
      Holds booking item information. All bookings items,  both standard and
      upsell, must belong to a booking package.
    type: object
    properties:
      Id:
        type: string
      Name:
        description: >-
          The name of the item. Editable for upsell items and default items
          included in bespoke packages.
        type: string
      PriceTypeId:
        format: int32
        description: >-
          The price type used for the booking item. Can be edited for upsell
          items, but not for standard package items.
        type: integer
      PriceType:
        type: string
      PriceGroup:
        $ref: '#/definitions/Optimo.WebAPI.Models.Item.PriceGroup'
        description: >-
          The price group which has been determined automatically for the
          booking item.  Cannot be changed.
      UnitPrice:
        format: double
        description: The price per unit, excluding any taxes.
        type: number
      EstimatedUnitCost:
        format: double
        description: >-
          The estimated cost per unit, excluding any taxes. Editable for upsell
          items and default items included in bespoke packages. Requires special
          user right to edit.
        type: number
      EstimatedTotalCost:
        format: double
        description: >-
          The total estimated cost for the booking item, excluding any taxes.
          Editable for upsell items and default items included in bespoke
          packages. Requires special user right to edit.
        type: number
      ActualUnitCost:
        format: double
        description: >-
          The actual cost per unit, excluding any taxes. Editable for all items.
          Requires special user right to edit.
        type: number
      ActualTotalCost:
        format: double
        description: >-
          The total actual cost for the booking item, excluding any taxes.
          Editable for all items. Requires special user right to edit.
        type: number
      TaxId:
        format: int32
        description: >-
          The tax code being used for the booking item. Requires special user
          right to edit.
        type: integer
      TaxCode:
        type: string
      TaxRate:
        format: double
        description: >-
          The tax rate being used for the booking item, in percent expressed as
          a decimal. This cannot be edited at booking level, but needs to be
          chagned for the tax code.
        type: number
      TaxAmount:
        format: double
        description: The total tax amount for the booking item.
        type: number
      NetAmount:
        format: double
        description: >-
          The total net amount for the booking item, i.e. the total selling
          price exlcluding all taxes.
        type: number
      GrossAmount:
        format: double
        type: number
      Margin:
        format: double
        description: >-
          Margin of the booking item, in percent, based on net amount and
          estimated cost.
        type: number
      ShowInDocuments:
        description: >-
          Indicate whether the item is included in booking type documents, such
          as quotations and contracts.
        type: boolean
      ShowInInvoice:
        description: >-
          Indicates whether the item is included in invoices. If set to false,
          the price element of the item will be attributed to the package line.
        type: boolean
      Quantity:
        format: int32
        description: The quantity of the item.
        type: integer
      Units:
        format: double
        type: number
      CostCentreCode:
        description: Cost centre code is determined based on venue settings.
        type: string
      Item:
        $ref: '#/definitions/Optimo.WebAPI.Models.Item.Item'
        description: A reference to the item which is being booked.
      Venue:
        $ref: '#/definitions/Optimo.WebAPI.Models.Venue'
        description: The venue which the booking item belongs to.
      Upsell:
        description: >-
          Indicates whether the booking item was added to the booking as an
          extra item rather than a standard or default item.
        type: boolean
      UnitPriceExcludingTax:
        format: double
        type: number
      UnitPriceIncludingTax:
        format: double
        type: number
      PriceSettingMethod:
        enum:
          - Undeterminable
          - ExcludingTax
          - IncludingTax
        type: string
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      PackageItem:
        $ref: '#/definitions/Optimo.WebAPI.Models.Packages.PackageItem'
      TId:
        type: string
      PrimaryBookingItemId:
        format: int32
        type: integer
      BookingId:
        format: int32
        type: integer
      BookingItemDetails:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Booking.V1.BookingItemDetail'
      EntityConfigurationProfileId:
        format: int32
        type: integer
      DiscountValue:
        format: double
        type: number
      ItemBookingQuestionnaires:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.ItemBookingQuestionnaire'
      BookingPackage:
        $ref: '#/definitions/Optimo.WebAPI.Models.Booking.V1.BookingPackage'
      BookingItemAssociations:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Booking.BookingItemAssociation'
      EventConfiguration:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.EventConfiguration'
      RecurrenceOption:
        $ref: '#/definitions/Optimo.WebAPI.Models.Booking.RecurrenceOption'
      Invoiced:
        type: boolean
      SplitBookingItems:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Booking.V1.BookingItem'
      SupplierInvoiceRef:
        type: string
      SupplierInvoiceDate:
        format: date-time
        type: string
      Supplier:
        $ref: '#/definitions/Optimo.WebAPI.Models.Item.Supplier'
      CostExported:
        type: boolean
      CostExportedDate:
        format: date-time
        type: string
      RecurrentBookingItems:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Booking.V1.BookingItem'
      AdHoc:
        type: boolean
      Conflicts:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Timeslot'
      DiscountItemId:
        format: int32
        type: integer
  Optimo.WebAPI.Models.Customer.MarketingConsent:
    type: object
    properties:
      Id:
        type: string
      ConsentPhrase:
        type: string
      PhraseCategory:
        type: string
      PhraseCategoryId:
        type: string
      Sequance:
        type: string
      ActiveStatus:
        type: boolean
      IsPhone:
        type: boolean
      IsEmail:
        type: boolean
      IsSMS:
        type: boolean
      IsPost:
        type: boolean
      IsCallCenter:
        type: boolean
      IsBoxOffice:
        type: boolean
      IsPublicWeb:
        type: boolean
      SalesChannel:
        $ref: '#/definitions/Optimo.WebAPI.Models.SalesChannel.SalesChannel'
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.Customer.ContactMethod:
    type: object
    properties:
      Id:
        type: string
      MarketingMediumId:
        format: int32
        type: integer
      MarketingMedium:
        type: string
      Precidence:
        format: int32
        type: integer
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.Customer.Hobby:
    type: object
    properties:
      Id:
        type: string
      Name:
        type: string
  Optimo.WebAPI.Models.Customer.Preference:
    type: object
    properties:
      Id:
        type: string
      Name:
        type: string
  Optimo.WebAPI.Models.Enquiry:
    description: >-
      An enquiry (also known as opportunity in many CRM systems) is a way of
      capturing a customer's or prospect's initial interest in a product, before
      it's matured sufficiently to commence with a quote or booking.
    type: object
    properties:
      Id:
        type: string
      EnquiryRef:
        description: Auto-generated based on a user-defined prefix.
        type: string
      Subject:
        description: The subject, or summary, of the enquiry.
        type: string
      Date:
        format: date-time
        description: The date when the enquiry was created.
        type: string
      Contact:
        $ref: '#/definitions/Optimo.WebAPI.Models.Customer.Contact'
        description: >-
          The contact of the booking, which may be associated with a customer or
          prospect type client.
      Attendees:
        format: int32
        description: The number of attendees expected.
        type: integer
      Budget:
        format: double
        description: Can be used to gauge the potential of the enquiry.
        type: number
      ReasonID:
        format: int32
        description: >-
          A reason for the interest, selected from a list of user-defined
          reasons.
        type: integer
      Reason:
        type: string
      SourceID:
        format: int32
        description: The source of the enquiry.
        type: integer
      Source:
        type: string
      Prospect:
        $ref: '#/definitions/Optimo.WebAPI.Models.Prospect'
        description: >-
          Indicates whether the contact of the enquiry is a prospect or already
          a customer.
      StatusID:
        format: int32
        description: >-
          The status of the enquiry, which are user-defined and typically values
          such as "hot", "warm", "cold" etc.
        type: integer
      Status:
        type: string
      SalesPerson:
        $ref: '#/definitions/Optimo.WebAPI.Models.Security.User'
        description: The sales person responsible for following up the enquiry.
      FollowupDate:
        format: date-time
        description: >-
          Time when the enquiry is due to be followed up. A task is usually also
          created with the same due time.
        type: string
      isFollowupRequired:
        type: boolean
      Notes:
        description: Additional information and progress notes
        type: string
      ClosedDate:
        format: date-time
        description: Date when the enquiry was closed if it is closed.
        type: string
      ClosingNote:
        description: >-
          Any notes about the reason the enquiry was closed. Only used when
          lost.
        type: string
      ClosingReasonID:
        format: int32
        description: >-
          A reason, selected from a user-definable list, why the enquiry was
          closed. Only used when lost.
        type: integer
      ClosingReason:
        type: string
      AlternateReference:
        description: >-
          An optional reference, typically used when integrating with an
          external CRM system.
        type: string
      Venue:
        $ref: '#/definitions/Optimo.WebAPI.Models.Venue'
        description: >-
          The venue of interest. If not set, will be treated as all venues are
          of interest.
      CampaignID:
        format: int32
        description: >-
          Used to track success rates of marketing campaigns. Can be entered
          manually or automatically from a clickthrough.
        type: integer
      Exported:
        description: >-
          This flag is used for third party software integration, to keep track
          of whether an enquiry has been exported.
        type: boolean
      ExportedDate:
        format: date-time
        description: >-
          Used for third party software integration, to keep track of when an
          enquiry has been exported. This is updated if an enquiry gets exported
          again, e.g. after any changes have been applied at a later date.
        type: string
      ExportedAfterChange:
        description: >-
          Is used to make sure any additional changes to an enquiry gets
          exported.
        type: boolean
      WebNote:
        description: >-
          Comments entered by a customer/prospect when accepting online
          enquiries.
        type: string
      BusinessAreas:
        description: Business areas of interest for the enquiry.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.BusinessArea'
      EventFromDate:
        format: date-time
        description: >-
          If dates of interest are expressed as a date range, this indicates the
          start date.
        type: string
      EventToDate:
        format: date-time
        description: >-
          If dates of interest are expressed as a date range, this indicates the
          end date.
        type: string
      EventDates:
        description: >-
          If dates of interest are expressed as a collection of dates, this is
          used to keep track of them.
        type: array
        items:
          format: date-time
          type: string
      EventMonths:
        description: >-
          If dates of interest are expressed as a collection of months, this is
          used to keep track of them. Month 1 = Jan, 12 - Dec.
        type: array
        items:
          format: int32
          type: integer
      Events:
        description: Events of interest for the enquiry.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Event'
      Assets:
        description: >-
          Assets of interest for the enquiry. These may also be part of specific
          enquiry timeslots.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Asset.Result.Asset'
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      ExpiryDate:
        format: date-time
        type: string
      Tasks:
        description: Tasks which are associaed with the enquiry.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Task'
      BusinessTypeID:
        format: int32
        type: integer
      BusinessType:
        type: string
      EnquiryTimeslots:
        description: >-
          Optionally, specific timeslots, which usually will appear in the
          diary, may be attached to an enquiry.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.EnquiryTimeslot'
      Correspondence:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Document'
    example:
      data:
        type: enquiry
        id: '1'
        attributes:
          enquiryRef: Test
          subject: Test
          date: 2021-12-06T18:04:45.4964816+05:30
          attendees: 1
          budget: 0
          reasonID: 1
          sourceID: 1
          prospect:
            titleID: 1
            firstName: FirstName
            lastName: LastName
            companyName: CompanyName
            telephoneNo: '0123456789'
            mobileNo: '0123456789'
            officeEmail: 123@exampl.com
            personalEmail: 123@exampl.com
            accountManagerId: 1
          followupDate: 2021-12-06T18:04:45.4964816+05:30
          isFollowupRequired: true
          notes: Test
          closedDate: 2021-12-06T18:04:45.4964816+05:30
          closingNote: Test
          closingReasonID: 1
          alternateReference: Test
          campaignID: 1
          exported: true
          exportedDate: 2021-12-06T18:04:45.4964816+05:30
          exportedAfterChange: true
          webNote: Test
          businessAreas:
            - businessAreaId: '1'
              name: BusinessArea
          eventFromDate: 2021-12-06T18:04:45.4964816+05:30
          eventToDate: 2021-12-06T18:04:45.4964816+05:30
          eventDates:
            - 2021-12-06T18:04:45.4964816+05:30
          eventMonths:
            - 1
          expiryDate: 2021-12-06T18:04:45.4964816+05:30
          businessTypeID: 1
        relationships:
          contact:
            data:
              id: '1'
              type: contact
          salesPerson:
            data:
              id: '1'
              type: user
          venue:
            data:
              id: '1'
              type: venue
          events:
            data:
              - id: '1'
                type: event
          assets:
            data:
              - id: '1'
                type: asset
          tasks:
            data:
              - id: '1'
                type: task
          enquiryTimeslots:
            data:
              - id: '1'
                type: enquiryTimeslot
      included:
        - type: contact
          id: '1'
          attributes:
            blocked: 0
            totalContactTasks: 0
            totalContactOverduePendingTasks: 0
            totalContactOverdueTasks: 0
        - type: asset
          id: '1'
          attributes:
            default: true
          links:
            related: '#{BASE_URL}api/v4.1/assets/1'
        - type: task
          id: '1'
          attributes:
            notification: false
            sendReminderForAssignee: false
            taskStatusId: 0
            setTaskActiveOn: false
            isActive: false
            refID: 0
            fromUserID: 0
            isAutoDueDate: false
            insertedTime: 0001-01-01T00:00:00
        - type: enquiryTimeslot
          id: '1'
          relationships:
            asset:
              data:
                id: '1'
                type: asset
  Optimo.WebAPI.Models.Customer.ContactMarketingConsent:
    type: object
    properties:
      Id:
        type: string
      contactMarketingConsentID:
        format: int32
        type: integer
      marketingConsentID:
        format: int32
        type: integer
      contactID:
        format: int32
        type: integer
      marketingConsent:
        $ref: '#/definitions/Optimo.WebAPI.Models.Customer.MarketingConsent'
  Optimo.WebAPI.Models.Package.BookingType:
    type: object
    properties:
      Id:
        type: string
      Name:
        type: string
      IsRestricted:
        type: boolean
      BookingPrefix:
        type: string
  Optimo.WebAPI.Models.AccessRight:
    type: object
    properties:
      Id:
        type: string
      Name:
        type: string
      Description:
        type: string
      AccessRightNo:
        format: int32
        type: integer
      AccessRightCategoryId:
        format: int32
        type: integer
      AccessRightCategory:
        type: string
      AccessRightTypeId:
        format: int32
        type: integer
      AssessRightType:
        type: string
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.Booking.PaymentTerm:
    type: object
    properties:
      Id:
        type: string
      Name:
        type: string
      Description:
        type: string
      Active:
        type: boolean
      AlternativeRef:
        type: string
      ManualInvoice:
        type: boolean
      EventDayConsumptionTemplateID:
        format: int32
        type: integer
      EventDayConsumptionTemplateName:
        type: string
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      PaymentTermDetails:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Booking.PaymentTermDetail'
  Optimo.WebAPI.Models.Booking.CancellationPolicy:
    type: object
    properties:
      Id:
        type: string
      Name:
        type: string
      Description:
        type: string
      CancellationPolicyDetails:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Booking.CancellationPolicyDetail'
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.Booking.Currency:
    type: object
    properties:
      Id:
        type: string
      Name:
        type: string
      Symbol:
        type: string
      ActiveStatus:
        type: boolean
      BaseCurrency:
        type: boolean
      DecimalPlaces:
        format: int32
        type: integer
      CurrencyExchangeRate:
        $ref: '#/definitions/Optimo.WebAPI.Models.Booking.CurrencyExchangeRate'
      Format:
        type: string
      ExternalReference:
        type: string
  Optimo.WebAPI.Models.Till.Till:
    type: object
    properties:
      Id:
        type: string
      Name:
        type: string
      Sites:
        $ref: '#/definitions/Optimo.WebAPI.Models.Site.Result.Site'
      MacAddress:
        type: string
      Venues:
        type: string
      TillSalesConfigurationId:
        type: string
      TillPaymentConfigurationId:
        type: string
      CardMachineId:
        type: string
      CardMachine:
        type: string
      CashDrawerId:
        type: string
      CashDrawer:
        type: string
      ReceiptTemplateId:
        type: string
      ReceiptTemplate:
        type: string
      ReceiptPrinter:
        type: string
      TicketPrinter:
        type: string
      Active:
        type: string
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.PriceConcession:
    type: object
    properties:
      Id:
        type: string
      Name:
        type: string
      Active:
        type: boolean
      Default:
        type: boolean
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.Invoice.Invoice:
    description: >-
      This is an abstract class which maintains generic invoice type
      information. An invoice can either be a standard invoice, proforma invoice
      or credit note.
    type: object
    properties:
      Id:
        type: string
      InvoiceReference:
        description: Auto-generated based on a user-defined prefix.
        type: string
      Client:
        $ref: '#/definitions/Optimo.WebAPI.Models.Customer.Client'
        description: The client of the invoice.
      Contact:
        $ref: '#/definitions/Optimo.WebAPI.Models.Customer.Contact'
      Address:
        $ref: '#/definitions/Optimo.WebAPI.Models.Customer.Address'
        description: The postal address of the invoice recipient.
      Email:
        description: The email address of the invoice.
        type: string
      Booking:
        $ref: '#/definitions/Optimo.WebAPI.Models.Booking.V1.Booking'
        description: >-
          The booking involved in the invoice. An invoice must always have one
          single booking associated with it.
      InvoiceDate:
        format: date-time
        description: The date the invoice was generated.
        type: string
      TotalAmount:
        format: double
        description: The total invoice amount, including any taxes.
        type: number
      TaxAmount:
        format: double
        description: The total tax amount.
        type: number
      InvoiceOutstandingAmount:
        format: double
        description: The outstanding amount of the invoice.
        type: number
      Note:
        description: Free text notes that can be added when generating the invoice.
        type: string
      SalesPerson:
        $ref: '#/definitions/Optimo.WebAPI.Models.Security.User'
      AlternativeRef:
        description: An alternative reference, e.g. from an external accounts system.
        type: string
      ExportedDate:
        format: date-time
        type: string
      InvoiceTemplateId:
        format: int32
        description: The invoice template used to generate the invoice document.
        type: integer
      InvoiceTemplate:
        type: string
      GeneratedType:
        format: int32
        description: "1 - Manual \r\n2 - Batch\r\n3 - Selective"
        type: integer
      PaymentTermSteps:
        description: >-
          The payment term steps used to generate the invoice. Usually, only one
          step is present, but if the invoice is generated for a booking that
          has been created near the event date, multiple payment term steps may
          need to be accommodated in the same invoice.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Booking.PaymentTermDetail'
      InvoiceLines:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Invoice.InvoiceLine'
      PaymentPortalReference:
        type: string
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      Cancelled:
        type: boolean
      PaymentDueDate:
        format: date-time
        description: >-
          The date when payment is due for the invoice, usually set
          automatically based on the payment term.
        type: string
      PaidAmount:
        format: double
        description: >-
          The total paid amount allocated to the invoice.This is not necessarily
          payments per se, but can also be other types of allocations,
          e.g.adjustments or credit notes.
        type: number
      IncludeBond:
        type: boolean
      FilePath:
        type: string
      Printed:
        type: boolean
      Emailed:
        type: boolean
      ShowAllItems:
        type: boolean
      Exported:
        type: boolean
      CancellationNote:
        type: string
  Optimo.WebAPI.Models.Packages.DeliveryMethod:
    type: object
    properties:
      Id:
        type: string
      Name:
        type: string
      Price:
        format: double
        type: number
      Cost:
        format: double
        type: number
      Description:
        type: string
      CutoffDate:
        format: int32
        type: integer
      CutOffTime:
        format: date-time
        type: string
      International:
        type: boolean
      Collection:
        type: boolean
      Electronic:
        type: boolean
      PrintAtHome:
        type: boolean
      ShippingProviderId:
        format: int32
        type: integer
      ShippingPrivider:
        type: string
      ServiceProviderId:
        format: int32
        type: integer
      ServiceProvider:
        type: string
      Item:
        $ref: '#/definitions/Optimo.WebAPI.Models.Item.Item'
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.AuditHistory:
    type: object
    properties:
      Id:
        type: string
      UserId:
        format: int32
        type: integer
      UserName:
        type: string
      TransactionTime:
        format: date-time
        type: string
      Description:
        type: string
      WorkStation:
        type: string
      PreviousValue:
        type: string
      NewValue:
        type: string
      APIEndPoint:
        type: string
      LogID:
        type: string
      EntityTypeID:
        format: int32
        type: integer
      ReferenceEntityID:
        format: int32
        type: integer
      OverrideUserID:
        format: int32
        type: integer
      AuditType:
        enum:
          - UserRights
          - Post
          - Put
          - Patch
          - Delete
        type: string
      Module:
        enum:
          - Reservation
          - BookingApproval
          - ChangePassword
          - ClientContactManagement
          - CRM
          - Diary
          - EventManagement
          - Facility
          - Finance
          - LogIn
          - Setup
          - UserManagement
          - WasteManagement
        type: string
      ModuleName:
        type: string
      EntityResource:
        $ref: '#/definitions/Optimo.WebAPI.Models.EntityConfiguration.EntityResource'
      Internal:
        type: boolean
      PackageName:
        type: string
      ItemName:
        type: string
  Optimo.WebAPI.Models.BookingQuestionnaire:
    description: >-
      A booking questionnaire is a collection of questions added to a booking
      through either a package, an item or per a global rule. While maintaining
      a link to the original questionnaire, the attributes and questions are
      copied over to the booking record so that they remain unaffected should
      the underlying questionnaire change.
    type: object
    properties:
      Id:
        type: string
      Questionnaire:
        $ref: '#/definitions/Optimo.WebAPI.Models.Questionnaire'
      BookingQuestions:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.BookingQuestion'
  Optimo.WebAPI.Models.Booking.BondActivity:
    type: object
    properties:
      Id:
        type: string
      BookingItem:
        $ref: '#/definitions/Optimo.WebAPI.Models.Booking.V1.BookingItem'
      BondValue:
        format: double
        type: number
      RefundAmount:
        format: double
        type: number
      ForfeitAmount:
        format: double
        type: number
      Deleted:
        type: boolean
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.UserDefinedField.BookingUserDefinedField:
    type: object
    properties:
      Id:
        description: A UDF for the CorporateClient entity.
        type: string
      UserDefinedField:
        $ref: '#/definitions/Optimo.WebAPI.Models.UserDefinedField.UserDefinedField'
      Value:
        type: string
      File:
        type: string
      UserDefinedFieldValue:
        type: array
        items:
          $ref: >-
            #/definitions/Optimo.WebAPI.Models.UserDefinedField.UserDefinedFieldValue
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.UserDefinedField.UserDefinedField:
    type: object
    properties:
      Id:
        type: string
      Name:
        description: >-
          The name of the UDF. This may have another label in user-interfaces,
          as per the relevant entity configuration.
        type: string
      EntityType:
        type: string
      EntityTypeId:
        format: int32
        description: The entity type that the UDF is associated with.
        type: integer
      DataTypeId:
        format: int32
        description: The data type of the UDF. The following types are supported.
        type: integer
      DataType:
        type: string
      Length:
        format: int32
        description: May be used to restrict text and rich text field length.
        type: integer
      Datasource:
        description: >-
          API endpoint for list values. These may be OPTIMO endpoints or
          external systems.
        type: string
      Internal:
        description: >-
          Indicates whether the Datasource in an internal api or external
          endpoint. If internal, the same authentication as for other API access
          will be used.
        type: boolean
      UserDefinedFieldValue:
        description: >-
          Hard coded list of values for list type UDFs when Datasource is not
          used.
        type: array
        items:
          $ref: >-
            #/definitions/Optimo.WebAPI.Models.UserDefinedField.UserDefinedFieldValue
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      ReferenceEntityID:
        format: int32
        type: integer
  Optimo.WebAPI.Models.Booking.V1.BookingApprovalTrail:
    type: object
    properties:
      Id:
        type: string
      Booking:
        $ref: '#/definitions/Optimo.WebAPI.Models.Booking.V1.Booking'
      FromBookingStatusId:
        format: int32
        type: integer
      FromBookingStatus:
        type: string
      ToBookingStatusId:
        format: int32
        type: integer
      ToBookingStatus:
        type: string
      ApprovalStatus:
        enum:
          - Approved
          - Rejected
          - Inprogress
          - Pending
        type: string
      BookingStatusApprovesUser:
        type: string
      Note:
        type: string
      ApprovedTime:
        format: date-time
        type: string
      ApprovalRequirement:
        $ref: '#/definitions/Optimo.WebAPI.Models.Booking.V1.ApprovalRequirement'
      ApproveUser:
        $ref: '#/definitions/Optimo.WebAPI.Models.Security.User'
      ApproveGroup:
        $ref: '#/definitions/Optimo.WebAPI.Models.Group'
      AuditHistory:
        $ref: '#/definitions/Optimo.WebAPI.Models.AuditHistory'
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.CustomerFeedback:
    type: object
    properties:
      Id:
        type: string
      Booking:
        $ref: '#/definitions/Optimo.WebAPI.Models.Booking.V1.Booking'
      BookingPackages:
        $ref: '#/definitions/Optimo.WebAPI.Models.Booking.V1.BookingPackage'
      BookingID:
        type: string
      BookingDetailID:
        type: string
      MinStarRate:
        format: int32
        type: integer
      MaxStarRate:
        format: int32
        type: integer
      StarRate:
        format: int32
        type: integer
      Note:
        type: string
      InsertedUser:
        type: string
      InsertedTime:
        format: date-time
        type: string
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.Booking.ApprovalCondition:
    description: Manages approval conditions, which are used to trigger booking approvals.
    type: object
    properties:
      Id:
        type: string
      Condition:
        type: string
      ConditionFilters:
        type: array
        items:
          format: int32
          type: integer
      ParameterType:
        type: string
      ParameterValue:
        format: double
        type: number
  Optimo.WebAPI.Models.Booking.Approver:
    type: object
    properties:
      Id:
        type: string
      Sequence:
        format: int32
        type: integer
      ApproverType:
        description: " Can be either:\r\n1 - User\r\n2 - User Group\r\nIf user group is specified then anybody in the group can make the decision(only one decision is required regardless of the ApproverSequence setting).\""
        enum:
          - User
          - UserGroup
        type: string
      ApproverId:
        format: int32
        type: integer
      SelectVenueUser:
        description: >-
          Indicates whether only users associated with the venue of the booking
          should be able to approve when approver type is a user group. First
          priority goes to users with the venue as default venue. If no user
          represents the venue of the booking then anybody can approve. Defaults
          to false.
        type: boolean
  Optimo.WebAPI.Models.Booking.Notification:
    type: object
    properties:
      Id:
        type: string
      MessageType:
        enum:
          - Email
          - Task
        type: string
      RecipientType:
        enum:
          - Contact
          - SalesPerson
          - User
          - Client
          - EventManager
          - Approver
        type: string
      NotificationRecipientUsers:
        type: array
        items:
          format: int32
          type: integer
      NotificationRecipientGroups:
        type: array
        items:
          format: int32
          type: integer
      EmailTemplateId:
        format: int32
        type: integer
      EmailTemplateName:
        type: string
      TaskDefaultSubject:
        type: string
      SenderEmaillAddress:
        type: string
      NotificationEventID:
        format: int32
        type: integer
      NotificationDetailID:
        format: int32
        type: integer
      NotificationServiceTypeId:
        format: int32
        type: integer
      NotificationServiceRecipientId:
        format: int32
        type: integer
      IsActive:
        type: boolean
  Optimo.WebAPI.Models.Booking.BookingWorkflow:
    description: >-
      Keeps track of booking workflow automation profiles. A booking workflow
      can be assigned to a user or sales channel.
    type: object
    properties:
      Id:
        type: string
      Name:
        type: string
      Description:
        type: string
      BookingStatuses:
        description: >-
          The list of booking statuses involved in the workflow. See also
          BookingStatus.BookingWorkflows
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Booking.BookingStatus'
  Optimo.WebAPI.Models.Customer.AdditionalClientCategory:
    type: object
    properties:
      Id:
        description: >-
          Manages any additional client categories beside the primary client
          category held by a client.
        type: string
      ClientCategoryId:
        format: int32
        description: The client category id.
        type: integer
      ClientCategory:
        type: string
      MembershipNumber:
        description: The membership number if a membership category.
        type: string
      MembershipExpiryDate:
        format: date-time
        description: >-
          The expiry date of a membership. The membership category will be
          automatically removed after the expiry date has passed.
        type: string
      MembershipStartDate:
        format: date-time
        description: The start date of a membership.
        type: string
      MembershipPackage:
        description: A link to the package used for adding the membership.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Packages.MembershipPackage'
      MembershipBooking:
        description: A link to the booking used for adding the membership.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Booking.MembershipBooking'
  Optimo.WebAPI.Models.Packages.Package:
    type: object
    properties:
      Id:
        description: Id of the package.
        type: string
      Name:
        description: Name of the package.
        type: string
      NameOnReport:
        description: Name of the package in reporting.
        type: string
      PackageRef:
        description: >-
          A short reference to the package, which is optional. If set, should be
          unique.
        type: string
      Description:
        description: >-
          A description of the package aimed at internal users. See web
          description for external users.
        type: string
      Active:
        description: Only active packages can be booked.
        type: boolean
      BusinessAreaId:
        format: int32
        description: >-
          The user-defined business area which the package belongs to and is
          used mainly for reporting. Typical business areas may be Ticketing,
          Hospitality, MICE, Sponsorship and so on.
        type: integer
      BusinessArea:
        description: Name of the business area.
        type: string
      PackageClassId:
        format: int32
        description: >-
          The user-defined package class, which is used for classification and
          also the "ABC rule" (see PackageClassRestrictions for public events).
        type: integer
      PackageClass:
        description: Name of the package class.
        type: string
      PaymentTerm:
        $ref: '#/definitions/Optimo.WebAPI.Models.Booking.PaymentTerm'
        description: >-
          All packages must have a payment term assigned, which is used in the
          call centre and corporate sales channels to indicate when to raise
          invoices and make payments. Staged payment plans are supported.
          Payment terms are ignored for for the OPTIMO in-built public web and
          box office applications, where 100% upfront payments are required
          always.
      CancellationPolicy:
        $ref: '#/definitions/Optimo.WebAPI.Models.Booking.CancellationPolicy'
        description: >-
          All packages must have a cancellation policy assigned, which is used
          to determine any cancellation fee based on time past since booking or
          time left before the event.
      BespokePackage:
        description: >-
          Indicates whether this is a bespoke package. A bespoke package may be
          empty or may have default items, which can be removed or edited at
          time of booking (as opposed to a standard package where its items
          cannot be removed or edited).
        type: boolean
      Attendees:
        format: int32
        description: >-
          Indicates how many people the package is for. In most cases this is
          set to 1, but for example a family type package might have Attendees
          set to 4. A private suite package might have attendees set to 20.
        type: integer
      MinimumAttendees:
        format: int32
        description: >-
          Used to assign a minimum number of attendees in order to book the
          package. Can be used in conjunction with Attendees.
        type: integer
      MaximumAttendees:
        format: int32
        description: >-
          Used to assign a maximum number of attendees that is allowed per
          booking.
        type: integer
      FixedPriceExcludingTax:
        format: double
        description: >-
          The total fixed price, if any, of a package, excluding taxes. Total
          fixed price is made up of any items in the package defined either as
          fixed or using a session price type.
        type: number
      VariablePriceExcludingTax:
        format: double
        description: >-
          The total variable price, if any, of a package, excluding taxes. Total
          variable price is made up of items of any other price type than
          session and not defined as fixed.
        type: number
      FixedPriceIncludingTax:
        format: double
        description: >-
          The total fixed price, if any, of a package, including taxes. Total
          fixed price is made up of any items in the package defined either as
          fixed or using a session price type.
        type: number
      VariablePriceIncludingTax:
        format: double
        description: >-
          The total variable price, if any, of a package, including taxes. Total
          variable price is made up of items of any other price type than
          session and not defined as fixed.
        type: number
      Margin:
        format: double
        description: >-
          The gross margin of one package, taking both fixed and variable prices
          into account.
        type: number
      PackageDeliveryMethods:
        description: >-
          Indicates permitted delivery methods, out of which one must be set as
          default. Note that package delivery methods include cut-off times for
          when each delivery method can no longer be used.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Packages.PackageDeliveryMethod'
      SalesCategories:
        description: >-
          Sales categories are user-defined and used for linking packages with
          relevant upsell items as well as for reporting. A system setting may
          determine that only one sales category can be assigned to packages.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Item.SalesCategory'
      BookingTypes:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Package.BookingType'
      PriceTypeId:
        format: int32
        description: >-
          The price type of the package, which is determined based on how the
          package items have been defined. In the event there are multiple price
          types used the price type will show as "Mixed".
        type: integer
      PriceType:
        description: Name of the price type.
        type: string
      TaxId:
        format: int32
        description: >-
          The tax code used by the package - if applicable. If not applicable
          (according to the venue setup, tax may be calculated based on the
          included items' tax codes) then this will be set to null.
        type: integer
      TaxCode:
        description: Name of the tax code.
        type: string
      SegmentCodeId:
        format: int32
        description: >-
          The user-defined segment code assigned to the package. The primary
          purpose of segment codes is for passing information to third party
          systems, e.g. finance systems.
        type: integer
      SegmentCode:
        type: string
      NominalCodeId:
        format: int32
        description: >-
          The user-defined nominal code assigned to the package. The purpose of
          nominal codes is for passing information to a third party finance
          system.
        type: integer
      NominalCode:
        type: string
      LinkedPackages:
        description: >-
          A linked package is a package which has the exact same configuration,
          or nearly the same configuration, but is priced differently, e.g. a
          child or concession price. That way, it makes it convenient to list
          all price options under the primary package without having to describe
          the contents over and over again. Some rules can be built into linked
          packages, e.g. to indicate whether an adult package is required and
          what the ratio should be between adult and linked packages, e.g. max 2
          children per adult package.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Packages.Package'
      LinkedPackageType:
        $ref: '#/definitions/Optimo.WebAPI.Models.Packages.LinkedPackageType'
        description: >-
          The linked package type, e.g. "Child" or "Student". If the primary
          package then it will set to "Primary"
      PrimaryPackage:
        $ref: '#/definitions/Optimo.WebAPI.Models.Packages.Package'
      WebDescription:
        description: >-
          The HTML formatted description of a package, which is suitable to
          display for both internal and external users, e.g. on the public
          website.
        type: string
      ShortWebDescription:
        description: >-
          The HTML formatted short description of a package, which is suitable
          to display for both internal and external users.
        type: string
      PackageSalesChannels:
        description: >-
          Specifies which sales channels the package may be sold over, including
          any quotas and start and cut-off timings.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Packages.PackageSalesChannel'
      PackageQuestions:
        description: >-
          Specifies a list of questions associated with the package, which may
          be prompted at various booking statuses.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Question'
      PackageDocuments:
        description: >-
          Specifies a list of documents associated with the package, which may
          optionally be displayed or sent to a user or customer.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Document'
      PackageClientCategories:
        description: >-
          Specifies a list of client categories who may purchase the package. Is
          null for unrestricted packages.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.ClientCategory'
      PackageUserGroups:
        description: List of Id and the name
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Packages.PackageUserGroup'
      AvailableForEnquiriesOnly:
        description: >-
          This is only applicable for the internet sales channel and for
          packages which have been configured to not be available for sale on
          the internet. However, if this flag is set, the package may appear
          with an "Enquire Now" type of button to create an enquiry for it.
        type: boolean
      PackagePriceGroups:
        description: Specifies a list of price groups associated with the package.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Packages.PackagePriceGroup'
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      AttendeeCaptureProfile:
        $ref: '#/definitions/Optimo.WebAPI.Models.Packages.AttendeeCaptureProfile'
        description: >-
          Specifies whether an attendee capture profile is to be used when
          booking the package, in order to capture host and/or guest details.
      PackageItems:
        description: >-
          The list of standard (for standard packages) or default (for bespoke
          packages) package items included in the package.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Packages.PackageItem'
      PackageTasks:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.TemplateTask'
      PriceSettingMethod:
        enum:
          - Undeterminable
          - ExcludingTax
          - IncludingTax
        type: string
      DefaultPriceConcessionId:
        format: int32
        type: integer
      PackageBusinessArea:
        $ref: '#/definitions/Optimo.WebAPI.Models.Packages.BusinessArea'
      TemplateTasks:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.BookingTask'
      AllocatePlansAutomatically:
        type: boolean
  Optimo.WebAPI.Models.TaskNotificationScenario:
    type: object
    properties:
      Id:
        format: int32
        type: integer
      Scenario:
        type: string
      IsActive:
        type: boolean
      IsUserOption:
        type: boolean
      ScenarioKey:
        type: string
      NotificationTemplate:
        type: string
  Optimo.WebAPI.Models.Event:
    description: >-
      This is the abstract class behind PublicEvent and PrivateEvent. Public
      events are sold per person and private events are sold as space hire.
    type: object
    properties:
      Id:
        type: string
      Name:
        type: string
      Description:
        description: The event description is normally for internal use.
        type: string
      EventCategoryId:
        format: int32
        description: >-
          The event category for an event can be used for filtering and
          reporting.
        type: integer
      EventCategory:
        type: string
      PrimaryVenue:
        $ref: '#/definitions/Optimo.WebAPI.Models.Venue'
        description: >-
          An event may take place over multiple venues. This is used to simplify
          reporting and adhering to policies in such cases.
      EventGroupId:
        format: int32
        description: >-
          The event group for an event is designed to group recurring events,
          e.g. an annual conference, together, for reporting.
        type: integer
      EventGroup:
        type: string
      EventStartDate:
        format: date-time
        description: >-
          Event days must remain within the event start and end date range, but
          there must not necessarily be an event date defined on the event start
          date.
        type: string
      EventEndDate:
        format: date-time
        description: >-
          Event days must remain within the event start and end date range, but
          there must not necessarily be an event date defined on the event end
          date.
        type: string
      EventManagerId:
        format: int32
        description: >-
          Public events: Main event manager, which can be overrIdden at function
          sheet level Private events: The default event manager will be assigned
          to any instances of the event unless specified.
        type: integer
      EventManagerUserName:
        type: string
      Keywords:
        type: string
      MinimumMargin:
        format: double
        type: number
      WebDescription:
        description: >-
          Can be used to manage event content in HTML format for display on
          customer facing websites or internal applications.
        type: string
      Active:
        type: boolean
      VenueMap:
        $ref: '#/definitions/Optimo.WebAPI.Models.map.VenueMap'
        description: Can be used to present packages through a visual venue map
      Multimedia:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Multimedia'
      Documents:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Document'
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      BookingTypes:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Package.BookingType'
  Optimo.WebAPI.Models.Packages.LinkedPackageType:
    description: >-
      A linked package type is a package type used to link a relationship to a
      primary package. Some of the package type's attributes can be overridden
      here.
    type: object
    properties:
      Id:
        type: string
      PackageType:
        $ref: '#/definitions/Optimo.WebAPI.Models.Packages.PackageType'
      Name:
        description: >-
          Name of the package type, which defaults to the name of the base
          package type.
        type: string
      AdultRequired:
        description: >-
          Indicates whether this linked package requires an adult package in
          order to be booked. Can be overridden at linked package type level.
        type: boolean
      MaxRatioPerAdult:
        format: int32
        description: >-
          Max quantity of this linked package per adult package. Can be
          overridden at linked package type level.
        type: integer
  Optimo.WebAPI.Models.Packages.AttendeeCaptureProfile:
    description: >-
      This class holds information of which, if any, type of information to
      capture about hosts and/or guests booked for a package. Note also that
      dynamic host and guests questions will also be prompted for when
      applicable.
    type: object
    properties:
      Id:
        type: string
      Name:
        description: The name of the attendee capture profile.
        type: string
      CaptureHost:
        description: >-
          If set host information will be captured for the package. Typically, a
          booking has one host, but in some scenarios there may be multiple
          hosts, e.g. for a large dining booking which is allocated on multiple
          tables.
        type: boolean
      CaptureGuest:
        description: If set guest information will be captured for the package.
        type: boolean
      GuestLabel:
        description: >-
          Defaults to "Guest", but allows to customise depending on the type of
          activity where it may be more appropriate to use something like
          "Delegate", "Participant", "Student" etc.
        type: string
      GuestLabelPlural:
        description: Defaults to "Guests".
        type: string
      PromptAtBooking:
        description: >-
          If set, the user should be prompted to add applicable host and guest
          details at the time when the package is added to a booking.
        type: boolean
      PromptAtCheckout:
        description: >-
          If set, the user should be prompted to add applicable host and guest
          details during the checkout process.
        type: boolean
      PromptAfterBooking:
        description: >-
          If set, the user should be prompted to add applicable host and guest
          details after the completion of a booking, e.g. through "My Event".
        type: boolean
      CutOffDays:
        format: int32
        description: >-
          The number of days before the event start which the host and guest
          details are no longer editable - except by users with the special user
          right "Allow editing attendee details after cut-off".
        type: integer
      FormStyle:
        format: int32
        description: "1- ReadOnly Popup Single Record Form\r\n            2- Editable Table Edit\r\n            These options are implemented in the in-built OPTIMO applications, but don't necessarily have to be adhered to in third party integrations."
        type: integer
      EmailTemplate:
        $ref: '#/definitions/Optimo.WebAPI.Models.Packages.DocumentTemplate'
        description: >-
          Default email template for sending out invitations or sharing
          e-tickets.
      AttendeeCaptureProfileFields:
        description: The fields to capture for this profile.
        type: array
        items:
          $ref: >-
            #/definitions/Optimo.WebAPI.Models.Packages.AttendeeCaptureProfileField
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.PackageBookingQuestionnaire:
    description: A questionnaire that is answered for each package in a booking.
    type: object
    properties:
      BookingPackage:
        $ref: '#/definitions/Optimo.WebAPI.Models.Booking.V1.BookingPackage'
      Id:
        type: string
      Questionnaire:
        $ref: '#/definitions/Optimo.WebAPI.Models.Questionnaire'
      BookingQuestions:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.BookingQuestion'
  Optimo.WebAPI.Models.BookingDetailStatus:
    type: object
    properties:
      Id:
        type: string
      BookingDetailId:
        type: string
      CollectionStatusId:
        type: string
      CollectionStatusName:
        type: string
      ResolvedStatusId:
        type: string
      CollectionLocationId:
        type: string
      CollectionLocationName:
        type: string
      InsertedUserId:
        type: string
      InsertedTime:
        format: date-time
        type: string
      RejectReasonId:
        type: string
      RequestRescheduleReasonId:
        type: string
      RejectReason:
        type: string
      RescheduleReason:
        type: string
  Optimo.WebAPI.Models.Item.PriceGroup:
    type: object
    properties:
      Id:
        type: string
      Name:
        description: Price group name
        type: string
      DayId:
        description: List of weekdays
        type: array
        items:
          format: int32
          type: integer
      SpecifiedDate:
        description: List of specific days
        type: array
        items:
          format: date-time
          type: string
      StartTime:
        format: date-time
        description: Price group effects from
        type: string
      EndTime:
        format: date-time
        description: price grpoup effects to
        type: string
      DurationStart:
        format: double
        description: Price group duration start
        type: number
      DurationEnd:
        format: double
        description: price group duration end
        type: number
      FullDayFrom:
        format: double
        type: number
      FullDayTo:
        format: double
        type: number
      HalfDayFrom:
        format: double
        type: number
      HalfDayTo:
        format: double
        type: number
      AverageDaysPerYear:
        format: double
        type: number
      AverageDaysPerMonth:
        format: double
        type: number
      Description:
        description: Description
        type: string
      MonthFrom:
        format: int32
        description: Indicates minimum number of days to apply monthly pricing
        type: integer
      YearFrom:
        format: int32
        description: Indicates minimum number of days to apply yearly pricing
        type: integer
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.Packages.PackageItem:
    description: >-
      A package item is an item that has been included in a package as a
      standard or default (for bespoke packages). Most item attributes are
      present at package item level, where they can be overridden, e.g. have a
      different price or cost.
    type: object
    properties:
      Id:
        type: string
      Name:
        description: >-
          The name of the package item, which defaults to the item name, but may
          be overridden here.
        type: string
      ShowinInvoice:
        description: Indicates whether the item will appear in invoices.
        type: boolean
      ShowInCorrespondance:
        description: >-
          Indicates whether the item will appear in correspondence and documents
          other than invoices, e.g. contracts and proposals.
        type: boolean
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.Booking.V1.BookingItemDetail:
    type: object
    properties:
      Id:
        type: string
      StartDate:
        format: date-time
        type: string
      EndDate:
        format: date-time
        type: string
  Optimo.WebAPI.Models.ItemBookingQuestionnaire:
    description: A questionnaire that is answered for each upsell in a booking.
    type: object
    properties:
      BookingPackage:
        $ref: '#/definitions/Optimo.WebAPI.Models.Booking.V1.BookingPackage'
      BookingItem:
        $ref: '#/definitions/Optimo.WebAPI.Models.Booking.V1.BookingItem'
      Id:
        type: string
      Questionnaire:
        $ref: '#/definitions/Optimo.WebAPI.Models.Questionnaire'
      BookingQuestions:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.BookingQuestion'
  Optimo.WebAPI.Models.Booking.BookingItemAssociation:
    type: object
    properties:
      id:
        type: string
      allocatedQuantity:
        format: int32
        type: integer
      startTime:
        format: date-time
        type: string
      endTime:
        format: date-time
        type: string
      asset:
        $ref: '#/definitions/Optimo.WebAPI.Models.Asset.Result.Asset'
      auditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      primaryBookingSpaceItem:
        $ref: '#/definitions/Optimo.WebAPI.Models.Booking.V1.BookingItem'
      bookingitemId:
        type: string
  Optimo.WebAPI.Models.EventConfiguration:
    type: object
    properties:
      Id:
        type: string
      ConfigurationFile:
        type: string
      Locked:
        type: boolean
      LockedBy:
        type: string
      LockedTime:
        format: date-time
        type: string
      Capacity:
        format: int32
        type: integer
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.Booking.RecurrenceOption:
    type: object
    properties:
      Id:
        type: string
      StartTime:
        format: date-time
        type: string
      EndTime:
        format: date-time
        type: string
      RecurrenceStartDate:
        format: date-time
        type: string
      RecurrenceEndDate:
        format: date-time
        type: string
      Occurrences:
        format: int32
        type: integer
      RecurrenceOptionID:
        enum:
          - NotSet
          - Daily
          - Weekly
          - Monthly
          - Yearly
        type: string
      RecurrenceWeekDays:
        type: string
      RecurrenceDate:
        format: int32
        type: integer
      RecurrenceMonth:
        format: int32
        type: integer
      RecurrenceOptionType:
        enum:
          - NotSet
          - First
          - Second
          - Third
          - Fourth
          - Last
        type: string
      RecurrenceEndAfter:
        format: int32
        type: integer
      DateType:
        enum:
          - NotSet
          - Sunday
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
          - Day
          - WeekDay
          - WeekEnd
        type: string
      Assets:
        type: string
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      isReturnDairyNote:
        type: boolean
      ExcludeDates:
        type: array
        items:
          format: date-time
          type: string
  Optimo.WebAPI.Models.Timeslot:
    description: >-
      A timeslot keeps information about an asset scheduled in for some activity
      for a period of time. The timeslot type is abstract and types include
      public events, private events (booking), fusion events, blocks, enquiries,
      setup slots and teardown slots. Most types of timeslots are blocking, i.e.
      other blocking timeslots cannot overlap. Only enquiry timeslots and
      preliminary private event timeslots are non-blocking and may overlap any
      other type of timeslot. Fusion event timeslots may also overlap, on the
      condition there is sufficient available quantity on the overlapping
      period.
    type: object
    properties:
      Id:
        type: string
      StartTime:
        format: date-time
        description: The start date and time of the timeslot
        type: string
      EndTime:
        format: date-time
        description: The end date and time of the timeslot
        type: string
      AssetGroupTimeslot:
        $ref: '#/definitions/Optimo.WebAPI.Models.Timeslot'
        description: >-
          If this is a timeslot included in a asset group timeslot, this
          indicates the asset group timeslot owner
      AssetGroupTimeslotPeriods:
        description: >-
          This collection is populated only if this timeslot has an asset which
          is an asset group
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.AssetGroupTimeslotPeriod'
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      Asset:
        $ref: '#/definitions/Optimo.WebAPI.Models.Asset.Result.Asset'
      Reserved:
        type: boolean
      ReservationId:
        type: string
      ExpiryDate:
        format: date-time
        type: string
  Optimo.WebAPI.Models.Prospect:
    description: >-
      A prospect is a prospective client that has never made a booking so far,
      where only limited information needs to be recorded. In order to make a
      booking, the prospect must first be converted to a regular client. All
      fields are optional for a prospect.
    type: object
    properties:
      TitleID:
        format: int32
        description: The title, e.g. "Mr.", "Mrs." etc. These are user-defined.
        type: integer
      FirstName:
        type: string
      LastName:
        type: string
      CompanyName:
        type: string
      TelephoneNo:
        type: string
      MobileNo:
        type: string
      OfficeEmail:
        type: string
      PersonalEmail:
        type: string
      AccountManagerId:
        format: int32
        description: >-
          The account manager of the contact which the contact, of the enquiry
          if an enquiry is generated at the same time, is associated with. This
          is often the same as the sales person, but may differ.
        type: integer
  Optimo.WebAPI.Models.BusinessArea:
    type: object
    properties:
      BusinessAreaId:
        type: string
      Name:
        type: string
  Optimo.WebAPI.Models.EnquiryTimeslot:
    description: >-
      An enquiry timeslot is optionally created and attached to an enquiry to
      keep track of specific times and assets of interest. An enquiry timeslot
      is never blocking any other timeslots.
    type: object
    properties:
      Enquiry:
        $ref: '#/definitions/Optimo.WebAPI.Models.Enquiry'
      Asset:
        $ref: '#/definitions/Optimo.WebAPI.Models.Asset.Result.Asset'
      Id:
        type: string
      StartTime:
        format: date-time
        description: The start date and time of the timeslot
        type: string
      EndTime:
        format: date-time
        description: The end date and time of the timeslot
        type: string
      AssetGroupTimeslot:
        $ref: '#/definitions/Optimo.WebAPI.Models.Timeslot'
        description: >-
          If this is a timeslot included in a asset group timeslot, this
          indicates the asset group timeslot owner
      AssetGroupTimeslotPeriods:
        description: >-
          This collection is populated only if this timeslot has an asset which
          is an asset group
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.AssetGroupTimeslotPeriod'
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      Reserved:
        type: boolean
      ReservationId:
        type: string
      ExpiryDate:
        format: date-time
        type: string
  Optimo.WebAPI.Models.Booking.PaymentTermDetail:
    type: object
    properties:
      Id:
        type: string
      Name:
        type: string
      Percentage:
        type: boolean
      Amount:
        format: double
        type: number
      AmountPerAttendee:
        format: double
        type: number
      BalanceOnly:
        type: boolean
      Bond:
        type: boolean
      PaymentDueDateType:
        enum:
          - AfterBooking
          - AfterEventStarted
          - AfterEventEnded
          - BeforeEventStartDate
        type: string
      PaymentDueDateID:
        format: int32
        type: integer
      PaymentDueDate:
        type: string
      InvoiceDueDateID:
        format: int32
        type: integer
      InvoiceDueDate:
        type: string
      Sequance:
        format: int32
        type: integer
      InvoiceTemplateID:
        format: int32
        type: integer
      InvoiceTemplate:
        type: string
      BookingStatusAfterInvoiceId:
        format: int32
        type: integer
      BookingStatusAfterInvoice:
        type: string
      BookingStatusAfterPaymentId:
        format: int32
        type: integer
      BookingStatusAfterPayment:
        type: string
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.Booking.CancellationPolicyDetail:
    type: object
    properties:
      Id:
        type: string
      CancellationPolicyID:
        format: int32
        type: integer
      CancelDateTypeID:
        format: int32
        type: integer
      CancelDateType:
        type: string
      DateID:
        format: int32
        type: integer
      DatesName:
        type: string
      DatesValue:
        format: int32
        type: integer
      Percentage:
        format: double
        type: number
      IsCurrentFee:
        type: boolean
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.Booking.CurrencyExchangeRate:
    type: object
    properties:
      Id:
        type: string
      Rate:
        format: double
        type: number
  Optimo.WebAPI.Models.Invoice.InvoiceLine:
    description: >-
      This is an abstract class which handles invoice lines in an invoice. An
      invoice line is either an InvoicePackage or InvoiceItem.
    type: object
    properties:
      Id:
        type: string
      Quantity:
        format: int32
        description: >-
          The quantity of the line item. If the quantity has changed and the
          previous quantity has been fully invoiced up to the step that is being
          invoiced, the change in quantity will be used. If the previous
          quantity has not been fully invoiced up to the step that is being
          invoiced, but has been partially invoiced, then the item will be split
          into two (or more) lines. If the previous quantity has not been
          invoiced at all, then the total current quantity will be used.
        type: integer
      UnitPrice:
        format: double
        description: The unit price of the line item.
        type: number
      Units:
        format: double
        description: >-
          The number of units of the line item. If the units have changed then
          the behaviour will follow the same principle as for changes in
          quantity, see above.
        type: number
      TaxRate:
        format: double
        description: The tax rate of the item.
        type: number
      TaxAmount:
        format: double
        description: >-
          The total tax value for the portion of the line item that is now being
          invoiced.
        type: number
      NetAmount:
        format: double
        description: >-
          The total amount, excluding tax, for the portion of the line item that
          is now being invoiced.
        type: number
      GrossAmount:
        format: double
        description: >-
          The total amount, including tax, for the portion of the line item that
          is now being invoiced.
        type: number
      PriceTypeId:
        format: int32
        description: The price type used for the line item.
        type: integer
      PriceType:
        type: string
      StartDate:
        format: date-time
        description: The event start time for the line item.
        type: string
      EndDate:
        format: date-time
        description: The event end time for the line item.
        type: string
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.EntityConfiguration.EntityResource:
    type: object
    properties:
      Id:
        type: string
      Name:
        type: string
  Optimo.WebAPI.Models.Questionnaire:
    description: >-
      A questionnaire is a collection of questions and can be attached to
      packages and items so that when those are booked additional information
      can be captured from the customer.
    type: object
    properties:
      Id:
        type: string
      Name:
        description: >-
          The name of the questionnaire. If a composite questionnaire, this is
          typically the question text itself.
        type: string
      Composite:
        description: >-
          If true, this means the questionnaire is a composite field of another
          entity, e.g. an item or package. Composite questionnaires usually only
          have one question and cannot be re-used by any other records.
        type: boolean
      Questions:
        description: >-
          The list of questions for this questionnaire. The questions may be a
          mix of different types.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Question'
      FunctionSheetCategoryId:
        format: int32
        description: >-
          The function sheet category under which this questionnaire should
          report its answers.
        type: integer
      FunctionSheetCategory:
        type: string
      BookingStatusId:
        format: int32
        description: >-
          The booking status at which time the questions should be asked. Note
          that sometimes a booking status can be skipped, in which case the
          question is asked for the next status in higher sequence.
        type: integer
      BookingStatus:
        type: string
  Optimo.WebAPI.Models.BookingQuestion:
    description: >-
      A booking question is a question which has been added to a booking,
      through a booking questionnaire, and keeps track of the answers.
    type: object
    properties:
      Id:
        type: string
      Question:
        $ref: '#/definitions/Optimo.WebAPI.Models.Question'
      Undecided:
        type: boolean
      AnsweredBy:
        $ref: '#/definitions/Optimo.WebAPI.Models.Security.User'
        description: Captures the user who initially answered the question
      AnsweredTime:
        format: date-time
        description: The time when the question was initially answered.
        type: string
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.UserDefinedField.UserDefinedFieldValue:
    type: object
    properties:
      Id:
        description: The list Id
        type: string
      Name:
        description: The name of the list item
        type: string
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.Booking.V1.ApprovalRequirement:
    type: object
    properties:
      Id:
        type: string
      Name:
        type: string
      BookingStatus:
        $ref: '#/definitions/Optimo.WebAPI.Models.Booking.BookingStatus'
      LogicalOperator:
        enum:
          - OR
          - AND
        type: string
      ApproverSequence:
        enum:
          - Any
          - AllinParallel
          - AllinSequence
        type: string
      RejectedBookingStatus:
        $ref: '#/definitions/Optimo.WebAPI.Models.Booking.BookingStatus'
      ApprovalWarning:
        type: string
      Booking:
        $ref: '#/definitions/Optimo.WebAPI.Models.Booking.V1.Booking'
      NextApprover:
        type: string
      ApprovalConditions:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Booking.V1.ApprovalCondition'
      ShowConflicts:
        type: boolean
  Optimo.WebAPI.Models.Packages.MembershipPackage:
    type: object
    properties:
      MambershipCategory:
        $ref: '#/definitions/Optimo.WebAPI.Models.ClientCategory'
      MembershipReferencePrefix:
        type: string
      MembershipValIdFrom:
        format: date-time
        type: string
      MembershipValIdTo:
        format: date-time
        type: string
      MembershipNumberStatus:
        format: int32
        type: integer
      IncompatibleMemberships:
        $ref: >-
          #/definitions/Optimo.WebAPI.Models.Packages.PackageIncompatibleMembership
      PackageDates:
        $ref: '#/definitions/Optimo.WebAPI.Models.Packages.PackageDate'
      PackageMembershipRenewalNotifications:
        $ref: >-
          #/definitions/Optimo.WebAPI.Models.Packages.PackageMembershipRenewalNotification
      PackageMembershipConditions:
        $ref: '#/definitions/Optimo.WebAPI.Models.Packages.PackageMembershipCondition'
      PromptAutomaticRenewal:
        type: boolean
      RetainSpaceAllocationTillAllNotifications:
        type: boolean
      Id:
        description: Id of the package.
        type: string
      Name:
        description: Name of the package.
        type: string
      NameOnReport:
        description: Name of the package in reporting.
        type: string
      PackageRef:
        description: >-
          A short reference to the package, which is optional. If set, should be
          unique.
        type: string
      Description:
        description: >-
          A description of the package aimed at internal users. See web
          description for external users.
        type: string
      Active:
        description: Only active packages can be booked.
        type: boolean
      BusinessAreaId:
        format: int32
        description: >-
          The user-defined business area which the package belongs to and is
          used mainly for reporting. Typical business areas may be Ticketing,
          Hospitality, MICE, Sponsorship and so on.
        type: integer
      BusinessArea:
        description: Name of the business area.
        type: string
      PackageClassId:
        format: int32
        description: >-
          The user-defined package class, which is used for classification and
          also the "ABC rule" (see PackageClassRestrictions for public events).
        type: integer
      PackageClass:
        description: Name of the package class.
        type: string
      PaymentTerm:
        $ref: '#/definitions/Optimo.WebAPI.Models.Booking.PaymentTerm'
        description: >-
          All packages must have a payment term assigned, which is used in the
          call centre and corporate sales channels to indicate when to raise
          invoices and make payments. Staged payment plans are supported.
          Payment terms are ignored for for the OPTIMO in-built public web and
          box office applications, where 100% upfront payments are required
          always.
      CancellationPolicy:
        $ref: '#/definitions/Optimo.WebAPI.Models.Booking.CancellationPolicy'
        description: >-
          All packages must have a cancellation policy assigned, which is used
          to determine any cancellation fee based on time past since booking or
          time left before the event.
      BespokePackage:
        description: >-
          Indicates whether this is a bespoke package. A bespoke package may be
          empty or may have default items, which can be removed or edited at
          time of booking (as opposed to a standard package where its items
          cannot be removed or edited).
        type: boolean
      Attendees:
        format: int32
        description: >-
          Indicates how many people the package is for. In most cases this is
          set to 1, but for example a family type package might have Attendees
          set to 4. A private suite package might have attendees set to 20.
        type: integer
      MinimumAttendees:
        format: int32
        description: >-
          Used to assign a minimum number of attendees in order to book the
          package. Can be used in conjunction with Attendees.
        type: integer
      MaximumAttendees:
        format: int32
        description: >-
          Used to assign a maximum number of attendees that is allowed per
          booking.
        type: integer
      FixedPriceExcludingTax:
        format: double
        description: >-
          The total fixed price, if any, of a package, excluding taxes. Total
          fixed price is made up of any items in the package defined either as
          fixed or using a session price type.
        type: number
      VariablePriceExcludingTax:
        format: double
        description: >-
          The total variable price, if any, of a package, excluding taxes. Total
          variable price is made up of items of any other price type than
          session and not defined as fixed.
        type: number
      FixedPriceIncludingTax:
        format: double
        description: >-
          The total fixed price, if any, of a package, including taxes. Total
          fixed price is made up of any items in the package defined either as
          fixed or using a session price type.
        type: number
      VariablePriceIncludingTax:
        format: double
        description: >-
          The total variable price, if any, of a package, including taxes. Total
          variable price is made up of items of any other price type than
          session and not defined as fixed.
        type: number
      Margin:
        format: double
        description: >-
          The gross margin of one package, taking both fixed and variable prices
          into account.
        type: number
      PackageDeliveryMethods:
        description: >-
          Indicates permitted delivery methods, out of which one must be set as
          default. Note that package delivery methods include cut-off times for
          when each delivery method can no longer be used.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Packages.PackageDeliveryMethod'
      SalesCategories:
        description: >-
          Sales categories are user-defined and used for linking packages with
          relevant upsell items as well as for reporting. A system setting may
          determine that only one sales category can be assigned to packages.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Item.SalesCategory'
      BookingTypes:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Package.BookingType'
      PriceTypeId:
        format: int32
        description: >-
          The price type of the package, which is determined based on how the
          package items have been defined. In the event there are multiple price
          types used the price type will show as "Mixed".
        type: integer
      PriceType:
        description: Name of the price type.
        type: string
      TaxId:
        format: int32
        description: >-
          The tax code used by the package - if applicable. If not applicable
          (according to the venue setup, tax may be calculated based on the
          included items' tax codes) then this will be set to null.
        type: integer
      TaxCode:
        description: Name of the tax code.
        type: string
      SegmentCodeId:
        format: int32
        description: >-
          The user-defined segment code assigned to the package. The primary
          purpose of segment codes is for passing information to third party
          systems, e.g. finance systems.
        type: integer
      SegmentCode:
        type: string
      NominalCodeId:
        format: int32
        description: >-
          The user-defined nominal code assigned to the package. The purpose of
          nominal codes is for passing information to a third party finance
          system.
        type: integer
      NominalCode:
        type: string
      LinkedPackages:
        description: >-
          A linked package is a package which has the exact same configuration,
          or nearly the same configuration, but is priced differently, e.g. a
          child or concession price. That way, it makes it convenient to list
          all price options under the primary package without having to describe
          the contents over and over again. Some rules can be built into linked
          packages, e.g. to indicate whether an adult package is required and
          what the ratio should be between adult and linked packages, e.g. max 2
          children per adult package.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Packages.Package'
      LinkedPackageType:
        $ref: '#/definitions/Optimo.WebAPI.Models.Packages.LinkedPackageType'
        description: >-
          The linked package type, e.g. "Child" or "Student". If the primary
          package then it will set to "Primary"
      PrimaryPackage:
        $ref: '#/definitions/Optimo.WebAPI.Models.Packages.Package'
      WebDescription:
        description: >-
          The HTML formatted description of a package, which is suitable to
          display for both internal and external users, e.g. on the public
          website.
        type: string
      ShortWebDescription:
        description: >-
          The HTML formatted short description of a package, which is suitable
          to display for both internal and external users.
        type: string
      PackageSalesChannels:
        description: >-
          Specifies which sales channels the package may be sold over, including
          any quotas and start and cut-off timings.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Packages.PackageSalesChannel'
      PackageQuestions:
        description: >-
          Specifies a list of questions associated with the package, which may
          be prompted at various booking statuses.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Question'
      PackageDocuments:
        description: >-
          Specifies a list of documents associated with the package, which may
          optionally be displayed or sent to a user or customer.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Document'
      PackageClientCategories:
        description: >-
          Specifies a list of client categories who may purchase the package. Is
          null for unrestricted packages.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.ClientCategory'
      PackageUserGroups:
        description: List of Id and the name
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Packages.PackageUserGroup'
      AvailableForEnquiriesOnly:
        description: >-
          This is only applicable for the internet sales channel and for
          packages which have been configured to not be available for sale on
          the internet. However, if this flag is set, the package may appear
          with an "Enquire Now" type of button to create an enquiry for it.
        type: boolean
      PackagePriceGroups:
        description: Specifies a list of price groups associated with the package.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Packages.PackagePriceGroup'
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      AttendeeCaptureProfile:
        $ref: '#/definitions/Optimo.WebAPI.Models.Packages.AttendeeCaptureProfile'
        description: >-
          Specifies whether an attendee capture profile is to be used when
          booking the package, in order to capture host and/or guest details.
      PackageItems:
        description: >-
          The list of standard (for standard packages) or default (for bespoke
          packages) package items included in the package.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Packages.PackageItem'
      PackageTasks:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.TemplateTask'
      PriceSettingMethod:
        enum:
          - Undeterminable
          - ExcludingTax
          - IncludingTax
        type: string
      DefaultPriceConcessionId:
        format: int32
        type: integer
      PackageBusinessArea:
        $ref: '#/definitions/Optimo.WebAPI.Models.Packages.BusinessArea'
      TemplateTasks:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.BookingTask'
      AllocatePlansAutomatically:
        type: boolean
  Optimo.WebAPI.Models.Booking.MembershipBooking:
    type: object
    properties:
      Id:
        type: string
      BookingReference:
        description: >-
          Auto-generated based on a user-defined prefix, which may change
          according to the venue or sales channel.
        type: string
      Client:
        $ref: '#/definitions/Optimo.WebAPI.Models.Customer.Client'
        description: The client of the booking. Read-only.
      Contact:
        $ref: '#/definitions/Optimo.WebAPI.Models.Customer.Contact'
        description: The contact of the booking.
      BookingDate:
        format: date-time
        description: The date and time, in UTC format, when the booking was created.
        type: string
      BookingStatus:
        $ref: '#/definitions/Optimo.WebAPI.Models.Booking.BookingStatus'
        description: >-
          The status of the booking. Booking statuses are user-defined within
          four parent statuses Quotation, Provisional, Confirmed and Cancelled.
      Confirmed:
        description: >-
          Indicates whether the booking is confirmed, that is, has reached a
          booking status of parent status "Confirmed".
        type: boolean
      ConfirmedDate:
        format: date-time
        description: >-
          The date and time, in UTC format, when the booking was confirmed. In
          some cases, bookings may move back to a provisional status after
          having been confirmed and then get re-confirmed.In such scenarios, the
          confirmed date field will indicate the first time the booking was
          confirmed.
        type: string
      Attendees:
        format: int32
        description: >-
          The total number of attendees for the booking, including all packages.
          Defaults to the sum of attendees for all packages and days by default,
          but may be edited.
        type: integer
      EventName:
        description: >-
          The event name or description of the booking. Defaults to the name of
          the first package added to a booking for a private event and to the
          the event of the first package for a public event.
        type: string
      PaymentTerm:
        $ref: '#/definitions/Optimo.WebAPI.Models.Booking.PaymentTerm'
        description: >-
          The payment term of the booking.Depending on the sales channel,
          customer and what packages are being booked, the payment term will
          initially be assigned automatically.The payment term may be changed by
          a user with the privilege ""May change payment term"", provided that
          the booking has not yet been invoiced.
      CancellationPolicy:
        $ref: '#/definitions/Optimo.WebAPI.Models.Booking.CancellationPolicy'
        description: >-
          The cancellation policy of the booking. Depending on the sales
          channel, customer and what packages are being booked, the cancellation
          policy will initially be assigned automatically.The cancellation
          policy may be changed by a user with the privilege ""May change
          cancellation policy"".
      SalesPerson:
        $ref: '#/definitions/Optimo.WebAPI.Models.Security.User'
        description: The sales person responsible for the booking.
      BookingReasonId:
        format: int32
        description: The reason for the booking, selected from a user-defined list.
        type: integer
      BookingReason:
        type: string
      BookingSourceId:
        format: int32
        description: The source Id of the booking, selected from a user-defined list.
        type: integer
      BookingSource:
        description: The source name of the booking, selected from a user-defined list.
        type: string
      GrossAmount:
        format: double
        description: The gross total booking amount, which includes all taxes.
        type: number
      NetAmount:
        format: double
        description: >-
          The net total booking amount, excluding taxes, but including all other
          charges such as delivery fees and booking charges, as well as any
          discounts.
        type: number
      TaxAmount:
        format: double
        description: The total tax amount for the booking. This may include multiple rates.
        type: number
      DiscountAmountExcludingTax:
        format: double
        description: Total discount amount given for the booking
        type: number
      DiscountAmountIncludingTax:
        format: double
        type: number
      DeliveryCharge:
        format: double
        description: The delivery charge for the booking, if applicable.
        type: number
      BookingCharge:
        format: double
        description: >-
          Total booking charge for the booking. Booking charge can be applied
          either per person or per booking, configured at sales channel level.
        type: number
      EstimatedCost:
        format: double
        description: >-
          Total estimated cost for the items in the booking. Estimated costs are
          set up at item and package level but may be amended at booking level
          for upsell items and bespoke packages (but not standard packages), for
          users with adequate permissions.
        type: number
      ActualCost:
        format: double
        description: >-
          Total actual cost for the items in the booking. Actual costs are
          entered after an event in order to reconcile against
          budgeted/estimated cost and assess actual profitability.
        type: number
      Margin:
        format: double
        description: >-
          Margin of the booking, in percent, based on net amount and estimated
          cost.
        type: number
      InvoicedAmount:
        format: double
        description: Total invoice amount at the given point in time.
        type: number
      NextInvoiceDate:
        format: date-time
        description: >-
          Next invoice date as per the payment terms of the booking. If fully
          invoiced this will be null.
        type: string
      PaidAmount:
        format: double
        description: Total paid amount for the booking.
        type: number
      DueAmount:
        format: double
        description: Amount currently due to be paid based on the payment terms.
        type: number
      Note:
        description: Free text notes for the booking, usually for internal use.
        type: string
      Cancelled:
        description: >-
          Indicates whether the booking has been cancelled. Once a booking is
          cancelled it cannot be reversed back to an active state (but it's
          possible to create a copy of it with an active status).
        type: boolean
      CancellationReasonId:
        format: int32
        description: >-
          The reason for the cancellation when a booking is cancelled. This is a
          mandatory field when a booking is cancelled.
        type: integer
      CancellationReason:
        type: string
      CancelledDate:
        format: date-time
        description: The date of the cancellation, if applicable.
        type: string
      CancellationFee:
        format: double
        type: number
      Enquiry:
        $ref: '#/definitions/Optimo.WebAPI.Models.Enquiry'
        description: The enquiry associated with the booking, if applicable.
      EventManager:
        $ref: '#/definitions/Optimo.WebAPI.Models.Security.User'
        description: >-
          The event manager for the booking. For large bookings, over multiple
          days and/or with multiple events, there may be multiple event
          managers, but specified at function sheet level. Defaults to the
          default event manager of the first package added to the booking.
      SalesChannelId:
        format: int32
        description: >-
          The sales channel Id which the booking was originated. This is
          assigned automatically either based on the logged in sales channel or
          based on the customer type.
        type: integer
      SalesChannel:
        description: >-
          The sales channel name which the booking was originated. This is
          assigned automatically either based on the logged in sales channel or
          based on the customer type.
        type: string
      Temporary:
        description: >-
          Indicates whether the booking is a temporary booking, which is mainly
          used for internet bookings to ensure stock is not held too long.
          Temporarly bookings are automatically expiring after the system
          configured threshold, typically 15-20 minutes.
        type: boolean
      ExpiryDate:
        format: date-time
        description: >-
          Indicates the time when the booking will get expired, if applicable.
          Used both for short term expiries like web bookings as well as for
          long term expiries such as quotations.
        type: string
      ApprovalWarning:
        description: >-
          Any approval conditions that are applicable for this booking, used by
          an approver to make a decision whether to approve the booking or not.
        type: string
      SecureBookingRef:
        description: >-
          A random reference (GUID) assigned to the booking for use with
          temporary links when it's undesirable to include an actual booking
          reference as those can easily be guessed.
        type: string
      POReference:
        description: Purchase order reference or other reference provided by the customer.
        type: string
      AlternativeBookingRef:
        description: >-
          An alternative reference for the booking, typically used for third
          party software integration.
        type: string
      AgentBooking:
        description: >-
          Indicates whether the booking is originated from an agent. Normally,
          the agent would be populated in the referrer field.
        type: boolean
      ReferrerClient:
        $ref: '#/definitions/Optimo.WebAPI.Models.Customer.Client'
        description: >-
          Keeps track of the referrer for a booking, if applicable. The referrer
          is often an agent, tour operator or other type of partner.
      ReferrerContact:
        $ref: '#/definitions/Optimo.WebAPI.Models.Customer.Contact'
        description: Keeps track of the referrer contact for the booking, if applicable.
      Exported:
        description: Indicates whether the booking is exported to a third party software.
        type: boolean
      CopiedBookingId:
        format: int32
        description: Source booking which the booking is copied from, if applicable.
        type: integer
      CampaignId:
        format: int32
        description: >-
          The campaign which a booking is originated from, if applicable.
          Campaign can be entered directly or be derived from a promotional code
          associated with a campaign.
        type: integer
      MobilityNote:
        type: string
      PaymentOnCollection:
        description: >-
          Indicates whether the booking is to be paid on collection. Pay on
          collection bookings can be confirmed and keep stock reserved but
          cannot be despatched by any other method than collection and can only
          be collected once fully paid.
        type: boolean
      PaymentNote:
        description: >-
          A payment chasing note to keep track of what indications the customer
          has made about making an outstanding payment.
        type: string
      SpecialNote:
        description: Any special requests for the booking.
        type: string
      Currency:
        $ref: '#/definitions/Optimo.WebAPI.Models.Booking.Currency'
        description: The currency used for the booking.
      CurrencyExchangeRate:
        format: double
        description: >-
          If a currency which is different from the base currency is used for
          the booking, this field keeps track of the exchange rate at the time
          of the booking.
        type: number
      WaitlistBooking:
        description: Indicates whether the booking is a waitlist booking.
        type: boolean
      PaymentProcessStartTime:
        format: date-time
        description: >-
          This is mainly using for credit card payments. This field indicate the
          time that booking process entered to the payment gateway pages
        type: string
      PaymentInProgress:
        description: >-
          This is used to indicate that the booking is currently redirected to a
          payment gateway for payment processing.
        type: boolean
      ShowPriceWithTax:
        description: >-
          Indicates whether prices should be presented with or without tax,
          which is determined by the type of product originally added to the
          booking.
        type: boolean
      Site:
        $ref: '#/definitions/Optimo.WebAPI.Models.Site.Result.Site'
        description: 'Box office only: the site where the booking was transacted.'
      Till:
        $ref: '#/definitions/Optimo.WebAPI.Models.Till.Till'
        description: 'Box office only: the till where the booking was transacted.'
      PriceConcession:
        $ref: '#/definitions/Optimo.WebAPI.Models.PriceConcession'
        description: The price concession for the booking.
      Venue:
        $ref: '#/definitions/Optimo.WebAPI.Models.Venue'
        description: Primary venue of the booking.
      EventStartDate:
        format: date-time
        description: The first day of the booked event(s), in local time.
        type: string
      EventEndDate:
        format: date-time
        description: The last day of the booked event(s), in local time.
        type: string
      BookingPackages:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Booking.V1.BookingPackage'
      BookingItems:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Booking.V1.BookingItem'
      Invoices:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Invoice.Invoice'
      DeliveryMethod:
        $ref: '#/definitions/Optimo.WebAPI.Models.Packages.DeliveryMethod'
      CurrencyID:
        format: int32
        type: integer
      CurrencyCode:
        type: string
      CurrencyName:
        type: string
      InvoiceAddress:
        $ref: '#/definitions/Optimo.WebAPI.Models.Customer.Address'
        description: >-
          The address to use for invoices and credit card payment authorisation.
          Defaults to the contact's invoice address, but may be changed.
      DeliveryAddress:
        $ref: '#/definitions/Optimo.WebAPI.Models.Customer.Address'
        description: >-
          The delivery address for items such as tickets and passes. Defaults to
          the contact's delivery address, but may be changed.
      CollectionAddress:
        $ref: '#/definitions/Optimo.WebAPI.Models.Customer.Address'
        description: The collection address for waste collection type booking.
      EntityConfigurationProfileId:
        format: int32
        type: integer
      TotalAmount:
        format: double
        type: number
      TotalActualCost:
        format: double
        type: number
      TotalBookingQuestions:
        format: int32
        type: integer
      TotalAnsweredQuestions:
        format: int32
        type: integer
      TotalUnAnsweredMandatoryQuestions:
        format: int32
        type: integer
      TotalBookingTasks:
        format: int32
        type: integer
      TotalCompletedTasks:
        format: int32
        type: integer
      TotalOverdueTasks:
        format: int32
        type: integer
      ExternalBookingId:
        type: string
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      AuditHistory:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.AuditHistory'
      BookingQuestionnaires:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.BookingQuestionnaire'
      BondActivity:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Booking.BondActivity'
      NextBookingStatusID:
        format: int32
        type: integer
      BookingUserDefinedFields:
        description: User defined booking fields.
        type: array
        items:
          $ref: >-
            #/definitions/Optimo.WebAPI.Models.UserDefinedField.BookingUserDefinedField
      GrossAmountExcludingBond:
        format: double
        type: number
      NetAmountExcludingBond:
        format: double
        type: number
      TotalBondAmount:
        format: double
        type: number
      UserDefinedField:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.UserDefinedField.UserDefinedField'
      InvoiceStatus:
        enum:
          - FullyInvoiced
          - PartiallyInvoiced
          - NotInvoiced
        type: string
      PaymentStatus:
        enum:
          - FullyPaid
          - PartiallyPaid
          - NotPaid
          - Overdue
        type: string
      BookingApprovalTrail:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Booking.V1.BookingApprovalTrail'
      ApprovalRequirementId:
        format: int32
        type: integer
      NextApprover:
        type: string
      NextApproveUser:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Security.User'
      NextApproveGroup:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Group'
      PendingPushAction:
        type: boolean
      ProvisionalBookingStatusInvoiceDate:
        format: date-time
        type: string
      InvoicedAmountExcludingBond:
        format: double
        type: number
      BookingTypeId:
        format: int32
        type: integer
      SeasonId:
        format: int32
        type: integer
      BookingTasks:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.BookingTask'
      TotalPendingAndOverDueTasks:
        format: int32
        type: integer
      CustomerFeedback:
        $ref: '#/definitions/Optimo.WebAPI.Models.CustomerFeedback'
  Optimo.WebAPI.Models.Packages.PackageDeliveryMethod:
    description: >-
      Keeps track of additional attributes for a delivery method when assigned
      to a package.
    type: object
    properties:
      Id:
        type: string
      DeliveryMethod:
        $ref: '#/definitions/Optimo.WebAPI.Models.Packages.DeliveryMethod'
        description: >-
          The underlying delivery method, which contains generic information
          such as name, whether it can be delivered internationally, whether
          it's electronic etc.
      Price:
        format: double
        description: The selling price of the delivery method when used with this package.
        type: number
      Cost:
        format: double
        description: The cost of the delivery method when used with this package.
        type: number
      CutOffDate:
        format: int32
        description: >-
          Number of days before the event start date when this delivery method
          will no longer be available for selection. Note also sales cut-off
          times specified in the package sales channels.
        type: integer
      CutoffTime:
        format: date-time
        description: >-
          The time of the day, on the cut off date, when this delivery method
          will no longer be available for selection. If no cut off time is
          specified, it will be applied at midnight.
        type: string
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      Expired:
        description: Is set to true if the cut-off date and time have passed.
        type: boolean
  Optimo.WebAPI.Models.Packages.PackageSalesChannel:
    description: >-
      Keeps track of additional attributes for sales channels which the package
      is available for sale.
    type: object
    properties:
      Id:
        type: string
      SalesChannelId:
        format: int32
        description: The underlying sales channel.
        type: integer
      SalesChannelName:
        type: string
      Limit:
        format: int32
        description: >-
          The max number of packages that can be sold through this sales
          channel.
        type: integer
      StartDate:
        format: date-time
        description: The date and time the package will become available for sale.
        type: string
      EndDate:
        format: date-time
        description: >-
          The date this package will be taken off sale, only applicable if end
          date type is set to fixed.
        type: string
      EndDateType:
        format: int32
        description: "1 - Fixed. EndDate must be set with a valid date and optionally with a time.\r\n            2 - Dynamic.End time is specified using end date parameter and minutes."
        type: integer
      EndDateParameter:
        format: int32
        description: "1- Before event start. \r\n            2 -After event start.Note that this is per event day, not the first day of the event. \r\n            3 -Before event end.Note that this is per event day, not the last day of the event. \r\n            4- After event end.Note that this is per event day, not the last day of the event. PENDING REMOVAL\r\n            For clarity, these options are not necessarily reated to the first or last day of an event, but they are defined as each event date the package takes place on if it's a single-day package. If it's a multi-day package, event start is the time of the first day and event end is the time of the last day."
        type: integer
      Minutes:
        format: int32
        description: >-
          The minutes before/after start/end of the event date, as specified by
          the end date parameter.
        type: integer
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.ClientCategory:
    type: object
    properties:
      Id:
        type: string
      Name:
        type: string
      RequireSpecialUserRight:
        type: boolean
      AlternateCategoryID:
        type: string
      CalendarColor:
        type: string
      MembershipCategory:
        type: boolean
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.Packages.PackageUserGroup:
    type: object
    properties:
      Id:
        type: string
      GroupId:
        format: int32
        type: integer
      GroupName:
        type: string
  Optimo.WebAPI.Models.Packages.PackagePriceGroup:
    description: A package price group defines price details for a price group.
    type: object
    properties:
      Id:
        type: string
      PriceGroup:
        $ref: '#/definitions/Optimo.WebAPI.Models.PriceGroup.Result.PriceGroup'
        description: The price group which the prices are defined for.
      FixedPriceExcludingTax:
        format: double
        description: >-
          The total fixed price, if any, of a package, excluding taxes. Total
          fixed price is made up of any items in the package defined either as
          fixed or using a session price type.
        type: number
      FixedPriceIncludingTax:
        format: double
        description: >-
          The total fixed price, if any, of a package, including taxes. Total
          fixed price is made up of any items in the package defined either as
          fixed or using a session price type.
        type: number
      VariablePriceExcludingTax:
        format: double
        description: >-
          The total variable price, if any, of a package, excluding taxes. Total
          variable price is made up of items of any other price type than
          session and not defined as fixed.
        type: number
      VariablePriceIncludingTax:
        format: double
        description: >-
          The total variable price, if any, of a package, including taxes. Total
          variable price is made up of items of any other price type than
          session and not defined as fixed.
        type: number
      TotalCostExcludingTax:
        format: double
        description: >-
          The total cost excluding tax for one package, which may consist of
          both a fixed and/or variable amount.
        type: number
      TotalCostIncludingTax:
        format: double
        description: >-
          The total cost including tax for one package, which may consist of
          both a fixed and/or variable amount.
        type: number
      TotalPriceExcludingTax:
        format: double
        description: >-
          The total price including tax for one package, which may consist of
          both a fixed and/or variable amount.
        type: number
      TotalPriceIncludingTax:
        format: double
        description: >-
          The total price excluding tax for one package, which may consist of
          both a fixed and/or variable amount.
        type: number
      Margin:
        format: double
        description: >-
          The gross margin of one package, taking both fixed and variable prices
          into account.
        type: number
  Optimo.WebAPI.Models.Packages.BusinessArea:
    type: object
    properties:
      Id:
        type: string
      Name:
        type: string
      CalenderColor:
        type: string
      TimeslotPatternID:
        format: int32
        type: integer
      TimeslotPattern:
        type: string
      BillerCode:
        type: string
      BCCEmailAddresses:
        type: string
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.map.VenueMap:
    description: Holds Venue map information. One venue can have more than one map
    type: object
    properties:
      Id:
        type: string
      Name:
        type: string
      Url:
        type: string
      Height:
        format: double
        type: number
      Width:
        format: double
        type: number
      Venue:
        $ref: '#/definitions/Optimo.WebAPI.Models.Venue'
      LinkedVenueMap:
        description: Venue map can have different sub level venue maps
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.map.LinkedVenueMap'
      VenueMapAsset:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.map.VenueMapAsset'
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      Scale:
        format: double
        type: number
  Optimo.WebAPI.Models.Packages.PackageType:
    description: >-
      Package types are used to define default package types for linking
      packages together for different price options.
    type: object
    properties:
      Id:
        type: string
      Name:
        description: Default name of the package type, e.g. "Adult", "Child" or "Student".
        type: string
      Adult:
        description: >-
          Indicates whether this type is considered being an adult, which is
          useful for types such as "Senior Citizen", "Member" etc.
        type: boolean
  Optimo.WebAPI.Models.Packages.DocumentTemplate:
    type: object
    properties:
      Id:
        type: string
      Name:
        type: string
  Optimo.WebAPI.Models.Packages.AttendeeCaptureProfileField:
    type: object
    properties: {}
  Optimo.WebAPI.Models.AssetGroupTimeslotPeriod:
    description: >-
      An asset group timeslot period keeps track of asset group timeslots that
      all occur during at the same time during an uninterrupted start and end
      time.
    type: object
    properties:
      PeriodId:
        type: string
      StartTime:
        format: date-time
        type: string
      EndTime:
        format: date-time
        type: string
      AssetCount:
        format: int32
        description: >-
          The total number of sub assets participating in this asset group
          timeslot period.
        type: integer
      LinkedTimeslots:
        description: The collection of included timeslots within the timeslot period.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Timeslot'
  Optimo.WebAPI.Models.Booking.V1.ApprovalCondition:
    type: object
    properties:
      Id:
        type: string
      Condition:
        type: string
      ParameterValue:
        type: string
      ParameterFromValue:
        type: string
      ParameterToValue:
        type: string
      ParameterType:
        type: string
      ShowConflicts:
        type: boolean
  Optimo.WebAPI.Models.Packages.PackageIncompatibleMembership:
    type: object
    properties:
      Id:
        format: int32
        type: integer
      ClientCategoryId:
        format: int32
        type: integer
      ClientCategoryName:
        type: string
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.Packages.PackageDate:
    description: >-
      A date which a public package is available. The date must correspond to a
      valid event date of the event which the package belongs to.
    type: object
    properties:
      Id:
        type: string
      EventDate:
        $ref: '#/definitions/Optimo.WebAPI.Models.EventDate'
        description: >-
          An event date which is associated with the same public event that the
          package belongs to.
      Description:
        description: >-
          This defaults to the event date description, but can be overridden
          here.
        type: string
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.Packages.PackageMembershipRenewalNotification:
    type: object
    properties:
      Id:
        type: string
      NoOfDays:
        format: int32
        type: integer
      NotificationRecipientTypeId:
        format: int32
        type: integer
      NotificationRecipientType:
        type: string
      DocumentTemplateId:
        format: int32
        type: integer
      DocumentTemplate:
        type: string
      Period:
        format: int32
        type: integer
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.Packages.PackageMembershipCondition:
    type: object
    properties:
      Id:
        format: int32
        type: integer
      MembershipConditionTypeId:
        format: int32
        type: integer
      MembershipConditionType:
        type: string
      MembershipConditionFrequancyId:
        format: int32
        type: integer
      MembershipConditionFrequancy:
        type: string
      Frequancy:
        format: int32
        type: integer
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.PriceGroup.Result.PriceGroup:
    type: object
    properties:
      Id:
        type: string
  Optimo.WebAPI.Models.map.LinkedVenueMap:
    description: Holds linked venue map infomations that are liked with venue map
    type: object
    properties:
      Id:
        type: string
      Coordinates:
        type: string
      Color:
        type: string
      Opacity:
        type: string
  Optimo.WebAPI.Models.map.VenueMapAsset:
    description: Holds asset infomations that are liked with venue map
    type: object
    properties:
      Id:
        type: string
      Name:
        type: string
      Asset:
        $ref: '#/definitions/Optimo.WebAPI.Models.Asset.Result.Asset'
      Coordinates:
        type: string
      Color:
        type: string
      Opacity:
        type: string
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.EventDate:
    type: object
    properties:
      Id:
        type: string
      Date:
        format: date-time
        type: string
      StartTime:
        format: date-time
        type: string
      EndTime:
        format: date-time
        type: string
      Description:
        type: string
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.Asset.Result.Facility:
    description: >-
      An asset sub type that represents facility space in a venue, such as
      restaurants, meetings rooms, stands etc
    type: object
    properties:
      FacilityTypeId:
        format: int32
        description: User-defined type to classify a facility
        type: integer
      FacilityType:
        description: The name of the facility type
        type: string
      FacilityCategoryId:
        format: int32
        description: User-defined category to categorise a facility
        type: integer
      FacilityCategory:
        description: The name of the facility category
        type: string
      Capacity:
        description: >-
          Capacity of the facility, which may be expressed as a range if there
          are multiple configurations with different capacities.
        type: string
      UnitOfMesurementId:
        format: int32
        description: >-
          Measurement units for specifying the dimensions of a facility, e.g.
          meter or feet
        type: integer
      UnitOfMesurement:
        description: The name of the measurement unit
        type: string
      Length:
        format: double
        description: Specifies the length of a facility
        type: number
      Width:
        format: double
        description: Specifies the width of a facility
        type: number
      Height:
        format: double
        description: Specifies the height of a facility
        type: number
      Area:
        format: double
        description: Specifies the area of a facility
        type: number
      Configurations:
        description: >-
          A facility may have many configurations, but must have one default
          configuration
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Configuration'
      Directions:
        description: Indicates the directions on how to reach the facility
        type: string
      URL:
        description: Indicates the URL for the client website
        type: string
      OpeningTime:
        format: date-time
        type: string
      ClosingTime:
        format: date-time
        type: string
      Amenities:
        description: A list of amenities which belong to the facility.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Asset.Amenity'
      Latitude:
        description: >-
          Indicates the latitude coordinate of the facility in geographical
          positioning
        type: string
      Longitude:
        description: >-
          Indicates the longitude coordinate of the facility in geographical
          positioning
        type: string
      Layout:
        type: string
      Id:
        description: Id of the asset
        type: string
      Name:
        description: Name of the asset
        type: string
      Venue:
        $ref: '#/definitions/Optimo.WebAPI.Models.Venue'
        description: An asset always belongs to one venue
      Description:
        description: Description of the asset
        type: string
      Keywords:
        description: Keywords applicable for searching the asset
        type: string
      Active:
        description: >-
          Used to indicate that an asset is active. Only active assets can be
          booked.
        type: boolean
      GenerateDiaryNote:
        description: >-
          Controls whether a diary note should be generated automatically when
          this asset is booked
        type: boolean
      OperationalMinutes:
        format: int32
        description: This is used to calculate utilisation percentage in reporting
        type: integer
      SpecialUserRightRequired:
        description: >-
          Indicates whether a user needs the permission "Allow to book
          restricted assets" to book the asset
        type: boolean
      Documents:
        description: Specifies the documents associated with an asset
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Document'
      Multimedia:
        description: Specifies the media files associated with the asset
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Multimedia'
      EnableSharing:
        description: >-
          Controls whether the asset can be shared between events and become
          part of a fusion event timeslot.
        type: boolean
      ClassID:
        format: int32
        description: Asset class id (Facility, Branding area, resource)
        type: integer
      LinkedAssets:
        description: A collection of sub assets in an asset group
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Asset.Result.Asset'
      Owner:
        $ref: '#/definitions/Optimo.WebAPI.Models.Asset.Result.AssetOwner'
        description: Specifies the asset group id for sub assets
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      Default:
        type: boolean
      Item:
        description: A link to all items which are associated with the asset.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Item.Item'
  Optimo.WebAPI.Models.Configuration:
    type: object
    properties:
      Id:
        description: Id of the configuration.
        type: string
      Name:
        description: Name of the configuration.
        type: string
      Default:
        description: >-
          Specifies whether this is the default configuration for an asset. An
          asset will always have one default configuration.
        type: boolean
      ConfigurationCategoryId:
        format: int32
        description: User-defined category to categorise a configuration
        type: integer
      ConfigurationCategory:
        type: string
      Capacity:
        format: int32
        description: >-
          Capacity, which is usually measured in number of people, that the
          configuration can accommodate.
        type: integer
      Private:
        description: If set to private, only one customer can book the facility.
        type: boolean
      Description:
        description: Describes the configuration in detail.
        type: string
      Keywords:
        description: Keywords applicable to search the configuration.
        type: string
      SetupTime:
        format: int32
        description: Default setup time for the configuration
        type: integer
      TeardownTime:
        format: int32
        description: Default teardown time for the configuration
        type: integer
      UnitOfMesurementId:
        format: int32
        description: >-
          Default measurement units for specifying the dimensions of
          configuration objects
        type: integer
      UnitOfMesurement:
        description: The name of the measurement unit.
        type: string
      Documents:
        description: Specifies the documents associated with a configuration.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Document'
      Multimedia:
        description: Specifies the media files associated with a configuration.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Multimedia'
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      InternetName:
        description: >-
          The name to be displayed for users making bookings online in the
          public web portal.
        type: string
      ConfigurationThumbnail:
        description: >-
          A thumbnail image representing the configuration. Should be 32 x 32
          pixels.
        type: string
      InternetEnabled:
        description: Decides whether this configuration is enabled for online bookings.
        type: boolean
      InternetDefault:
        description: >-
          Indicates whether this is the default configuration for online
          bookings.
        type: boolean
  Optimo.WebAPI.Models.Asset.Amenity:
    type: object
    properties:
      Id:
        type: string
      Name:
        type: string
      Sequance:
        format: int32
        type: integer
      Icon:
        type: string
      IconExtension:
        type: string
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.Asset.Result.Resource:
    type: object
    properties:
      ResourceTypeId:
        format: int32
        description: User-defined type to classify a branding area
        type: integer
      ResourceType:
        type: string
      ResourceCategoryId:
        format: int32
        description: User-defined category to categorise a branding area
        type: integer
      ResourceCategory:
        type: string
      Capacity:
        format: int32
        description: >-
          Capacity of this resource, e.g. a standard car may seat 4 people while
          a large SUV may seat 7 people
        type: integer
      SetupTime:
        format: int32
        description: Default setup time for the resource
        type: integer
      TeardownTime:
        format: int32
        description: Default teardown time for the resource
        type: integer
      HumanResource:
        description: Indicates whether this is a human resource
        type: boolean
      SystemUser:
        $ref: '#/definitions/Optimo.WebAPI.Models.Security.User'
        description: This is used if this human resource is also a user in the system
      Reference:
        description: >-
          Can be used to further Identify a resource, e.g. a barcode of a
          projector, a vehicle registration plate and so on
        type: string
      EmailAddress:
        description: >-
          Can be used to specify contact information for human resources who are
          not users in the system
        type: string
      PhoneNumber:
        description: >-
          Can be used to specify contact information for human resources who are
          not users in the system
        type: string
      MobileNumber:
        description: >-
          Can be used to specify contact information for human resources who are
          not users in the system
        type: string
      ResourceItems:
        $ref: '#/definitions/Optimo.WebAPI.Models.Item.ResourceItem'
        description: Items which may be used to book the resource
      OpeningTime:
        format: date-time
        type: string
      ClosingTime:
        format: date-time
        type: string
      Amenities:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Asset.Amenity'
      DefaultSettings:
        $ref: '#/definitions/Optimo.WebAPI.Models.Asset.Result.WasteDefaultSettings'
      Id:
        description: Id of the asset
        type: string
      Name:
        description: Name of the asset
        type: string
      Venue:
        $ref: '#/definitions/Optimo.WebAPI.Models.Venue'
        description: An asset always belongs to one venue
      Description:
        description: Description of the asset
        type: string
      Keywords:
        description: Keywords applicable for searching the asset
        type: string
      Active:
        description: >-
          Used to indicate that an asset is active. Only active assets can be
          booked.
        type: boolean
      GenerateDiaryNote:
        description: >-
          Controls whether a diary note should be generated automatically when
          this asset is booked
        type: boolean
      OperationalMinutes:
        format: int32
        description: This is used to calculate utilisation percentage in reporting
        type: integer
      SpecialUserRightRequired:
        description: >-
          Indicates whether a user needs the permission "Allow to book
          restricted assets" to book the asset
        type: boolean
      Documents:
        description: Specifies the documents associated with an asset
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Document'
      Multimedia:
        description: Specifies the media files associated with the asset
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Multimedia'
      EnableSharing:
        description: >-
          Controls whether the asset can be shared between events and become
          part of a fusion event timeslot.
        type: boolean
      ClassID:
        format: int32
        description: Asset class id (Facility, Branding area, resource)
        type: integer
      LinkedAssets:
        description: A collection of sub assets in an asset group
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Asset.Result.Asset'
      Owner:
        $ref: '#/definitions/Optimo.WebAPI.Models.Asset.Result.AssetOwner'
        description: Specifies the asset group id for sub assets
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      Default:
        type: boolean
      Item:
        description: A link to all items which are associated with the asset.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Item.Item'
  Optimo.WebAPI.Models.Item.ResourceItem:
    type: object
    properties:
      CoversPerItem:
        format: int32
        type: integer
      ItemAssets:
        description: List of assets available to book through this asset item.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Item.ItemAsset'
      ItemPrices:
        description: List of prices for the default price group
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Item.ItemPrice'
      ItemPriceGroups:
        description: List of price groups for the item
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Item.ItemPriceGroup'
      CalculatedItemPriceGroups:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Item.CalculatedItemPriceGroup'
      MultiplesOnly:
        description: >-
          Used in conjunction with Covers/Attendees Per Item to determine
          whether the X attendees need to be achieved before the first item is
          given.
        type: boolean
      Discountable:
        description: Indicates whether discounts can be applied to the item or not.
        type: boolean
      Commissionable:
        description: >-
          Indicates whether the item by be included in calculation of commission
          payouts
        type: boolean
      ExclusionDates:
        description: List of dates where the item will not be available.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Item.ItemExclusionDates'
      ItemAvailability:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Item.ItemAvailability'
      AvailabilityStatus:
        description: "If public event single day: sum of availability for the date\r\nIf multiple dates - indeterminable \r\n\r\nIf private and specific time: Status provided based on any hard or soft timeslots conflicts\r\nIf no time specified: indeterminable"
        type: string
      AllocateToAllAssets:
        description: Indicates whether all eligible assets should be allocated when booked.
        type: boolean
      AssetCount:
        format: int32
        type: integer
      ItemAvailabilityPublic:
        description: Item availability for public events.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Item.ItemAvailabilityPublic'
      ItemAvailabilityPrivate:
        $ref: '#/definitions/Optimo.WebAPI.Models.Item.ItemAvailabilityPrivate'
        description: Item availability for private events.
      DespatchInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Item.DespatchInfo'
      Id:
        description: Id of the item.
        type: string
      Name:
        description: Name of the item.
        type: string
      NameOnReport:
        description: Name of the item to appear in reporting.
        type: string
      Description:
        description: Description of the item.
        type: string
      ItemType:
        description: Name of the item type.
        type: string
      ItemTypeID:
        format: int32
        description: Id of the item type.
        type: integer
      ItemCategory:
        description: Name of the item category.
        type: string
      ItemCategoryID:
        format: int32
        description: Id of the item category.
        type: integer
      Venue:
        $ref: '#/definitions/Optimo.WebAPI.Models.Venue'
        description: Venue associated with the item.
      Tax:
        $ref: '#/definitions/Optimo.WebAPI.Models.Item.Tax'
        description: Applicable tax configuration for the item.
      WebShortDescription:
        description: Short web description, in HTML format, suitable to use in lists.
        type: string
      WebLongDescription:
        description: >-
          Long web description, in HTML format, suitable to use in a detailed
          view.
        type: string
      SalesCategories:
        description: Defines applicable sales categories for the item, can be multiple.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Item.SalesCategory'
      ItemSalesChannels:
        description: Defines applicable sales channels for the item, can be multiple.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Item.ItemSalesChannel'
      ValidWeekDays:
        description: >-
          (Deprecated) Defines days of the week which the item may be booked.
          This is no longer supported in V4, where price groups are used to
          determine days and times which items may be booked.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.ValidWeekDay'
      AvailableFrom:
        format: date-time
        description: >-
          (Deprecated) Defines the start time which the item may be booked. This
          is no longer supported in V4, where price groups are used to determine
          days and times which items may be booked.
        type: string
      AvailableTo:
        format: date-time
        description: >-
          (Deprecated) Defines the end time which the item may be booked. This
          is no longer supported in V4, where price groups are used to determine
          days and times which items may be booked.
        type: string
      Active:
        description: >-
          Indicates whether the item is active. Only active items may be added
          to a booking.
        type: boolean
      IncomeNominalCode:
        description: >-
          Nominal code to pass an income value generated against the item to the
          financial ledger.
        type: string
      CostNominalCode:
        description: >-
          Nominal code to pass cost value incurred against the item to the
          financial ledger.
        type: string
      LeadDays:
        format: int32
        description: >-
          Number of lead days applicable for the item. Lead time can be
          overridden by setting up an approver condition.
        type: integer
      SegmentCode:
        description: >-
          User defined code to define the item segment. May be used as an
          additional code in finance integration.
        type: string
      FunctionSheetCategoryID:
        format: int32
        description: >-
          Specified the function sheet category which the item will fall under
          when generating function sheets (aka run sheets or BEOs).
        type: integer
      FunctionSheetCategory:
        description: Name of the function sheet category.
        type: string
      ShowInInvoice:
        description: >-
          Define whether the item will be displayed in an invoice. If not, then
          its value will be moved to the package which the item belongs to.
        type: boolean
      ItemTask:
        description: Defines tasks associated with an item.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Item.ItemTask'
      DefaultPriceConcessionID:
        format: int32
        description: Defines the default price concession applicable for the item.
        type: integer
      DefaultPriceConcessionName:
        description: Name of the default price concession.
        type: string
      UpsellItem:
        description: Defines whether the item can be sold as an upsell item.
        type: boolean
      PartOfPackage:
        description: >-
          Defines whether the item can be included in a package as a standard
          item.
        type: boolean
      ItinararyItem:
        description: >-
          Indicates whether the item should appear in the itinerary section in
          function sheets.
        type: boolean
      EnforceAtUpsell:
        description: >-
          Indicates whether the attendees per item rule should be used softly at
          upsell, i.e. default to the specified quantity only, or enforce the
          rule. If the rule is enforced then a lower quantity may be booked, but
          not higher.
        type: boolean
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      ItemQuestion:
        description: Defines questions associated with an item.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Question'
      ItemTasks:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.TemplateTask'
      ParentItemId:
        format: int32
        type: integer
      ValidateSalesCategory:
        format: int32
        description: >-
          Controls whether strict sales category validation (i.e. at least one
          of the item sales categories must match one of the package's sales
          categories) should apply when adding the item to a booking. Choices
          are: 1.Yes, 2.No, 3. Use default as per system settings.
        type: integer
      Suppliers:
        description: List of suppliers for the item.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Item.Supplier'
      AddFacilityNameAtBooking:
        type: boolean
      TemplateTasks:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.BookingTask'
  Optimo.WebAPI.Models.Asset.Result.WasteDefaultSettings:
    type: object
    properties:
      Id:
        type: string
      WasteCollectionVehicle:
        $ref: '#/definitions/Optimo.WebAPI.Models.Asset.Result.Asset'
      WasteCollectionDefaultDriver:
        $ref: '#/definitions/Optimo.WebAPI.Models.Asset.Result.Asset'
      DefaultZone:
        $ref: '#/definitions/Optimo.WebAPI.Models.WasteCollection.Zone'
  Optimo.WebAPI.Models.Item.ItemAsset:
    type: object
    properties:
      Id:
        type: string
      Asset:
        $ref: '#/definitions/Optimo.WebAPI.Models.Asset.Result.Asset'
      Preference:
        format: int32
        type: integer
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      ConfigurationId:
        format: int32
        type: integer
  Optimo.WebAPI.Models.Item.ItemPrice:
    type: object
    properties:
      Id:
        type: string
      PriceType:
        type: string
      PriceTypeId:
        format: int32
        type: integer
      PriceConcessions:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.PriceConcession'
      PriceExcludingTax:
        format: double
        type: number
      PriceIncludingTax:
        format: double
        type: number
      CostExcludingTax:
        format: double
        type: number
      CostIncludingTax:
        format: double
        type: number
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.Item.ItemPriceGroup:
    type: object
    properties:
      Id:
        type: string
      PriceGroups:
        $ref: '#/definitions/Optimo.WebAPI.Models.Item.PriceGroup'
      PriceTypeId:
        format: int32
        type: integer
      PriceType:
        type: string
      PriceExcludingTax:
        format: double
        type: number
      PriceIncludingTax:
        format: double
        type: number
      ItemPrice:
        format: double
        type: number
      CostExcludingTax:
        format: double
        type: number
      CostIncludingTax:
        format: double
        type: number
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      ConcessionId:
        format: int32
        type: integer
      Concession:
        type: string
      PriceSettingMethodId:
        format: int32
        type: integer
      PriceSettingMethod:
        type: string
  Optimo.WebAPI.Models.Item.CalculatedItemPriceGroup:
    type: object
    properties:
      Id:
        type: string
      PriceGroups:
        $ref: '#/definitions/Optimo.WebAPI.Models.Item.PriceGroup'
      PriceTypeId:
        format: int32
        type: integer
      PriceType:
        type: string
      PriceExcludingTax:
        format: double
        type: number
      PriceIncludingTax:
        format: double
        type: number
      CostExcludingTax:
        format: double
        type: number
      CostIncludingTax:
        format: double
        type: number
      ConcessionId:
        format: int32
        type: integer
      Concession:
        type: string
      StartTime:
        format: date-time
        type: string
      EndTime:
        format: date-time
        type: string
      Units:
        format: double
        type: number
  Optimo.WebAPI.Models.Item.ItemExclusionDates:
    type: object
    properties:
      Id:
        type: string
      ExclusionDate:
        format: date-time
        type: string
      InsertedUser:
        type: string
      UpdatedUser:
        type: string
      InsertedTime:
        format: date-time
        type: string
      UpdatedTime:
        format: date-time
        type: string
  Optimo.WebAPI.Models.Item.ItemAvailability:
    type: object
    properties:
      Availability:
        type: string
      SessionStart:
        format: date-time
        type: string
      SessionEnd:
        format: date-time
        type: string
  Optimo.WebAPI.Models.Item.ItemAvailabilityPublic:
    type: object
    properties:
      Id:
        type: string
      ItemId:
        type: string
      Availability:
        type: string
      SessionStart:
        format: date-time
        type: string
      SessionEnd:
        format: date-time
        type: string
  Optimo.WebAPI.Models.Item.ItemAvailabilityPrivate:
    type: object
    properties:
      Id:
        type: string
      ItemId:
        type: string
      AvailabilityStatus:
        enum:
          - Available
          - Conflicts
          - Tentative
        type: string
      SessionStart:
        format: date-time
        type: string
      SessionEnd:
        format: date-time
        type: string
      AvailableAssetsCount:
        format: int32
        type: integer
      AssetsCount:
        format: int32
        type: integer
  Optimo.WebAPI.Models.Item.DespatchInfo:
    description: Composite class for items that can be despatched
    type: object
    properties:
      DespatchItem:
        description: >-
          Indicates whether this is an item that needs to be despatched,
          physically or electronically, to the customer ahead of the event. This
          would usually be entrance tickets, vouchers or passes.
        type: boolean
      PrintBeforeDespatch:
        description: >-
          Indicates whether a despatch item should be printed before despatch,
          using a pre-configured document template.
        type: boolean
      ScanBeforeDespatch:
        description: >-
          Indicates whether a despatch item should be scanned before despatch.
          This usually applies to items which are not printed internally but
          sourced from elsewhere and needs to be associated with the booking for
          security and access control.
        type: boolean
      TemplateTypeId:
        format: int32
        description: >-
          For items that are to be printed before despatch, this indicates what
          type of template is used.
        type: integer
      TemplateType:
        type: string
      TemplateId:
        format: int32
        description: >-
          For items that are to be printed before despatch, this specifies which
          template to use when printed internally.
        type: integer
      TemplateName:
        type: string
      PrintAtHomeTemplateId:
        format: int32
        description: >-
          For items that are to be printed before despatch, this specifies which
          template to use when a PDF file is generated for at home printing.
        type: integer
      PrintAtHomeTemplate:
        type: string
      MobileTemplateId:
        format: int32
        description: >-
          For items that are to be printed before despatch, this specifies which
          template to use when sending to a mobile device, which can be either
          PDF or a mobile wallet supported file such as pass.json.
        type: integer
      MobileTemplate:
        type: string
  Optimo.WebAPI.Models.WasteCollection.Zone:
    type: object
    properties:
      Id:
        format: int32
        type: integer
      Name:
        type: string
      AlternativeRef:
        format: int32
        type: integer
  Optimo.WebAPI.Models.Asset.Result.BrandingArea:
    description: >-
      An asset sub type that represents branding areas such as advertising
      banners, flags or media centre backdrops
    type: object
    properties:
      BrandingAreaTypeId:
        format: int32
        description: User-defined type to classify a branding area
        type: integer
      BrandingAreaType:
        type: string
      BrandingAreaCategoryId:
        format: int32
        description: User-defined category to categorise a branding area
        type: integer
      BrandingAreaCategory:
        type: string
      UnitOfMesurementId:
        format: int32
        description: >-
          Measurement units for specifying the dimensions of a facility, e.g.
          meter or feet
        type: integer
      UnitOfMesurement:
        type: string
      SetupTime:
        format: int32
        description: Default setup time for the branding area
        type: integer
      TeardownTime:
        format: int32
        description: Default teardown time for the branding area
        type: integer
      Length:
        format: double
        type: number
      Width:
        format: double
        type: number
      Height:
        format: double
        type: number
      Area:
        format: double
        type: number
      BrandingAreaItems:
        $ref: '#/definitions/Optimo.WebAPI.Models.Item.BrandingAreaItem'
        description: Items which may be used to book the branding area
      Id:
        description: Id of the asset
        type: string
      Name:
        description: Name of the asset
        type: string
      Venue:
        $ref: '#/definitions/Optimo.WebAPI.Models.Venue'
        description: An asset always belongs to one venue
      Description:
        description: Description of the asset
        type: string
      Keywords:
        description: Keywords applicable for searching the asset
        type: string
      Active:
        description: >-
          Used to indicate that an asset is active. Only active assets can be
          booked.
        type: boolean
      GenerateDiaryNote:
        description: >-
          Controls whether a diary note should be generated automatically when
          this asset is booked
        type: boolean
      OperationalMinutes:
        format: int32
        description: This is used to calculate utilisation percentage in reporting
        type: integer
      SpecialUserRightRequired:
        description: >-
          Indicates whether a user needs the permission "Allow to book
          restricted assets" to book the asset
        type: boolean
      Documents:
        description: Specifies the documents associated with an asset
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Document'
      Multimedia:
        description: Specifies the media files associated with the asset
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Multimedia'
      EnableSharing:
        description: >-
          Controls whether the asset can be shared between events and become
          part of a fusion event timeslot.
        type: boolean
      ClassID:
        format: int32
        description: Asset class id (Facility, Branding area, resource)
        type: integer
      LinkedAssets:
        description: A collection of sub assets in an asset group
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Asset.Result.Asset'
      Owner:
        $ref: '#/definitions/Optimo.WebAPI.Models.Asset.Result.AssetOwner'
        description: Specifies the asset group id for sub assets
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      Default:
        type: boolean
      Item:
        description: A link to all items which are associated with the asset.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Item.Item'
  Optimo.WebAPI.Models.Item.BrandingAreaItem:
    type: object
    properties:
      CoversPerItem:
        format: int32
        type: integer
      ItemAssets:
        description: List of assets available to book through this asset item.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Item.ItemAsset'
      ItemPrices:
        description: List of prices for the default price group
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Item.ItemPrice'
      ItemPriceGroups:
        description: List of price groups for the item
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Item.ItemPriceGroup'
      CalculatedItemPriceGroups:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Item.CalculatedItemPriceGroup'
      MultiplesOnly:
        description: >-
          Used in conjunction with Covers/Attendees Per Item to determine
          whether the X attendees need to be achieved before the first item is
          given.
        type: boolean
      Discountable:
        description: Indicates whether discounts can be applied to the item or not.
        type: boolean
      Commissionable:
        description: >-
          Indicates whether the item by be included in calculation of commission
          payouts
        type: boolean
      ExclusionDates:
        description: List of dates where the item will not be available.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Item.ItemExclusionDates'
      ItemAvailability:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Item.ItemAvailability'
      AvailabilityStatus:
        description: "If public event single day: sum of availability for the date\r\nIf multiple dates - indeterminable \r\n\r\nIf private and specific time: Status provided based on any hard or soft timeslots conflicts\r\nIf no time specified: indeterminable"
        type: string
      AllocateToAllAssets:
        description: Indicates whether all eligible assets should be allocated when booked.
        type: boolean
      AssetCount:
        format: int32
        type: integer
      ItemAvailabilityPublic:
        description: Item availability for public events.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Item.ItemAvailabilityPublic'
      ItemAvailabilityPrivate:
        $ref: '#/definitions/Optimo.WebAPI.Models.Item.ItemAvailabilityPrivate'
        description: Item availability for private events.
      DespatchInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Item.DespatchInfo'
      Id:
        description: Id of the item.
        type: string
      Name:
        description: Name of the item.
        type: string
      NameOnReport:
        description: Name of the item to appear in reporting.
        type: string
      Description:
        description: Description of the item.
        type: string
      ItemType:
        description: Name of the item type.
        type: string
      ItemTypeID:
        format: int32
        description: Id of the item type.
        type: integer
      ItemCategory:
        description: Name of the item category.
        type: string
      ItemCategoryID:
        format: int32
        description: Id of the item category.
        type: integer
      Venue:
        $ref: '#/definitions/Optimo.WebAPI.Models.Venue'
        description: Venue associated with the item.
      Tax:
        $ref: '#/definitions/Optimo.WebAPI.Models.Item.Tax'
        description: Applicable tax configuration for the item.
      WebShortDescription:
        description: Short web description, in HTML format, suitable to use in lists.
        type: string
      WebLongDescription:
        description: >-
          Long web description, in HTML format, suitable to use in a detailed
          view.
        type: string
      SalesCategories:
        description: Defines applicable sales categories for the item, can be multiple.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Item.SalesCategory'
      ItemSalesChannels:
        description: Defines applicable sales channels for the item, can be multiple.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Item.ItemSalesChannel'
      ValidWeekDays:
        description: >-
          (Deprecated) Defines days of the week which the item may be booked.
          This is no longer supported in V4, where price groups are used to
          determine days and times which items may be booked.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.ValidWeekDay'
      AvailableFrom:
        format: date-time
        description: >-
          (Deprecated) Defines the start time which the item may be booked. This
          is no longer supported in V4, where price groups are used to determine
          days and times which items may be booked.
        type: string
      AvailableTo:
        format: date-time
        description: >-
          (Deprecated) Defines the end time which the item may be booked. This
          is no longer supported in V4, where price groups are used to determine
          days and times which items may be booked.
        type: string
      Active:
        description: >-
          Indicates whether the item is active. Only active items may be added
          to a booking.
        type: boolean
      IncomeNominalCode:
        description: >-
          Nominal code to pass an income value generated against the item to the
          financial ledger.
        type: string
      CostNominalCode:
        description: >-
          Nominal code to pass cost value incurred against the item to the
          financial ledger.
        type: string
      LeadDays:
        format: int32
        description: >-
          Number of lead days applicable for the item. Lead time can be
          overridden by setting up an approver condition.
        type: integer
      SegmentCode:
        description: >-
          User defined code to define the item segment. May be used as an
          additional code in finance integration.
        type: string
      FunctionSheetCategoryID:
        format: int32
        description: >-
          Specified the function sheet category which the item will fall under
          when generating function sheets (aka run sheets or BEOs).
        type: integer
      FunctionSheetCategory:
        description: Name of the function sheet category.
        type: string
      ShowInInvoice:
        description: >-
          Define whether the item will be displayed in an invoice. If not, then
          its value will be moved to the package which the item belongs to.
        type: boolean
      ItemTask:
        description: Defines tasks associated with an item.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Item.ItemTask'
      DefaultPriceConcessionID:
        format: int32
        description: Defines the default price concession applicable for the item.
        type: integer
      DefaultPriceConcessionName:
        description: Name of the default price concession.
        type: string
      UpsellItem:
        description: Defines whether the item can be sold as an upsell item.
        type: boolean
      PartOfPackage:
        description: >-
          Defines whether the item can be included in a package as a standard
          item.
        type: boolean
      ItinararyItem:
        description: >-
          Indicates whether the item should appear in the itinerary section in
          function sheets.
        type: boolean
      EnforceAtUpsell:
        description: >-
          Indicates whether the attendees per item rule should be used softly at
          upsell, i.e. default to the specified quantity only, or enforce the
          rule. If the rule is enforced then a lower quantity may be booked, but
          not higher.
        type: boolean
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      ItemQuestion:
        description: Defines questions associated with an item.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Question'
      ItemTasks:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.TemplateTask'
      ParentItemId:
        format: int32
        type: integer
      ValidateSalesCategory:
        format: int32
        description: >-
          Controls whether strict sales category validation (i.e. at least one
          of the item sales categories must match one of the package's sales
          categories) should apply when adding the item to a booking. Choices
          are: 1.Yes, 2.No, 3. Use default as per system settings.
        type: integer
      Suppliers:
        description: List of suppliers for the item.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Item.Supplier'
      AddFacilityNameAtBooking:
        type: boolean
      TemplateTasks:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.BookingTask'
  Optimo.WebAPI.Models.GeneralAdmissionConfiguration:
    type: object
    properties:
      Id:
        description: Id of the configuration.
        type: string
      Name:
        description: Name of the configuration.
        type: string
      Default:
        description: >-
          Specifies whether this is the default configuration for an asset. An
          asset will always have one default configuration.
        type: boolean
      ConfigurationCategoryId:
        format: int32
        description: User-defined category to categorise a configuration
        type: integer
      ConfigurationCategory:
        type: string
      Capacity:
        format: int32
        description: >-
          Capacity, which is usually measured in number of people, that the
          configuration can accommodate.
        type: integer
      Private:
        description: If set to private, only one customer can book the facility.
        type: boolean
      Description:
        description: Describes the configuration in detail.
        type: string
      Keywords:
        description: Keywords applicable to search the configuration.
        type: string
      SetupTime:
        format: int32
        description: Default setup time for the configuration
        type: integer
      TeardownTime:
        format: int32
        description: Default teardown time for the configuration
        type: integer
      UnitOfMesurementId:
        format: int32
        description: >-
          Default measurement units for specifying the dimensions of
          configuration objects
        type: integer
      UnitOfMesurement:
        description: The name of the measurement unit.
        type: string
      Documents:
        description: Specifies the documents associated with a configuration.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Document'
      Multimedia:
        description: Specifies the media files associated with a configuration.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Multimedia'
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      InternetName:
        description: >-
          The name to be displayed for users making bookings online in the
          public web portal.
        type: string
      ConfigurationThumbnail:
        description: >-
          A thumbnail image representing the configuration. Should be 32 x 32
          pixels.
        type: string
      InternetEnabled:
        description: Decides whether this configuration is enabled for online bookings.
        type: boolean
      InternetDefault:
        description: >-
          Indicates whether this is the default configuration for online
          bookings.
        type: boolean
  Optimo.WebAPI.Models.SeatingPlanConfiguration:
    type: object
    properties:
      Blocks:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Block'
      Seats:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Seat'
      ConfigurationFileUrl:
        description: Background image for the seating chart.
        type: string
      Id:
        description: Id of the configuration.
        type: string
      Name:
        description: Name of the configuration.
        type: string
      Default:
        description: >-
          Specifies whether this is the default configuration for an asset. An
          asset will always have one default configuration.
        type: boolean
      ConfigurationCategoryId:
        format: int32
        description: User-defined category to categorise a configuration
        type: integer
      ConfigurationCategory:
        type: string
      Capacity:
        format: int32
        description: >-
          Capacity, which is usually measured in number of people, that the
          configuration can accommodate.
        type: integer
      Private:
        description: If set to private, only one customer can book the facility.
        type: boolean
      Description:
        description: Describes the configuration in detail.
        type: string
      Keywords:
        description: Keywords applicable to search the configuration.
        type: string
      SetupTime:
        format: int32
        description: Default setup time for the configuration
        type: integer
      TeardownTime:
        format: int32
        description: Default teardown time for the configuration
        type: integer
      UnitOfMesurementId:
        format: int32
        description: >-
          Default measurement units for specifying the dimensions of
          configuration objects
        type: integer
      UnitOfMesurement:
        description: The name of the measurement unit.
        type: string
      Documents:
        description: Specifies the documents associated with a configuration.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Document'
      Multimedia:
        description: Specifies the media files associated with a configuration.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Multimedia'
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      InternetName:
        description: >-
          The name to be displayed for users making bookings online in the
          public web portal.
        type: string
      ConfigurationThumbnail:
        description: >-
          A thumbnail image representing the configuration. Should be 32 x 32
          pixels.
        type: string
      InternetEnabled:
        description: Decides whether this configuration is enabled for online bookings.
        type: boolean
      InternetDefault:
        description: >-
          Indicates whether this is the default configuration for online
          bookings.
        type: boolean
  Optimo.WebAPI.Models.Block:
    type: object
    properties:
      Id:
        type: string
      Name:
        type: string
      Capacity:
        format: int32
        type: integer
      Note:
        type: string
      WheelChairAccess:
        type: boolean
      SpectatorViewURL:
        type: string
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.Seat:
    type: object
    properties:
      Block:
        $ref: '#/definitions/Optimo.WebAPI.Models.Block'
      ColumnNumber:
        format: int32
        type: integer
      ColumnName:
        type: string
      RowNumber:
        format: int32
        type: integer
      RowName:
        type: string
      SeatNumber:
        type: string
      Aisle:
        type: boolean
      NonSeatingArea:
        type: boolean
      PriceBandId:
        format: int32
        type: integer
      PriceBandName:
        type: string
      RankId:
        format: int32
        type: integer
      RankName:
        type: string
      Unavailable:
        type: boolean
      Id:
        type: string
      Name:
        type: string
      SequenceNumber:
        format: int32
        type: integer
      ConfigurationObject:
        $ref: '#/definitions/Optimo.WebAPI.Models.ConfigurationObject'
      Width:
        format: double
        type: number
      Length:
        format: double
        type: number
      Color:
        format: double
        type: number
      UnitOfMesurementId:
        format: int32
        type: integer
      UnitOfMesurementName:
        type: string
      XPosition:
        format: double
        type: number
      YPosition:
        format: double
        type: number
      Angle:
        format: double
        type: number
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.ConfigurationObject:
    type: object
    properties:
      ConfigurationObjectId:
        format: int32
        type: integer
      Name:
        type: string
      ConfigurationTypeId:
        format: int32
        type: integer
      ConfigurationType:
        type: string
      DefaultWidth:
        format: double
        type: number
      DefaultLength:
        format: double
        type: number
      DefaultCapacity:
        format: int32
        type: integer
      DefaultShared:
        type: boolean
      DefaultUnitOfMeasurementId:
        format: int32
        type: integer
      DefaultUnitOfMeasurement:
        type: string
  Optimo.WebAPI.Models.DiningConfiguration:
    type: object
    properties:
      Tables:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Table'
      ConfigurationFileUrl:
        description: Background image for the table plan.
        type: string
      Id:
        description: Id of the configuration.
        type: string
      Name:
        description: Name of the configuration.
        type: string
      Default:
        description: >-
          Specifies whether this is the default configuration for an asset. An
          asset will always have one default configuration.
        type: boolean
      ConfigurationCategoryId:
        format: int32
        description: User-defined category to categorise a configuration
        type: integer
      ConfigurationCategory:
        type: string
      Capacity:
        format: int32
        description: >-
          Capacity, which is usually measured in number of people, that the
          configuration can accommodate.
        type: integer
      Private:
        description: If set to private, only one customer can book the facility.
        type: boolean
      Description:
        description: Describes the configuration in detail.
        type: string
      Keywords:
        description: Keywords applicable to search the configuration.
        type: string
      SetupTime:
        format: int32
        description: Default setup time for the configuration
        type: integer
      TeardownTime:
        format: int32
        description: Default teardown time for the configuration
        type: integer
      UnitOfMesurementId:
        format: int32
        description: >-
          Default measurement units for specifying the dimensions of
          configuration objects
        type: integer
      UnitOfMesurement:
        description: The name of the measurement unit.
        type: string
      Documents:
        description: Specifies the documents associated with a configuration.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Document'
      Multimedia:
        description: Specifies the media files associated with a configuration.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Multimedia'
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      InternetName:
        description: >-
          The name to be displayed for users making bookings online in the
          public web portal.
        type: string
      ConfigurationThumbnail:
        description: >-
          A thumbnail image representing the configuration. Should be 32 x 32
          pixels.
        type: string
      InternetEnabled:
        description: Decides whether this configuration is enabled for online bookings.
        type: boolean
      InternetDefault:
        description: >-
          Indicates whether this is the default configuration for online
          bookings.
        type: boolean
  Optimo.WebAPI.Models.Table:
    type: object
    properties:
      Capacity:
        format: int32
        type: integer
      Shared:
        type: boolean
      PriceBandID:
        format: int32
        type: integer
      PriceBand:
        type: string
      Id:
        type: string
      Name:
        type: string
      SequenceNumber:
        format: int32
        type: integer
      ConfigurationObject:
        $ref: '#/definitions/Optimo.WebAPI.Models.ConfigurationObject'
      Width:
        format: double
        type: number
      Length:
        format: double
        type: number
      Color:
        format: double
        type: number
      UnitOfMesurementId:
        format: int32
        type: integer
      UnitOfMesurementName:
        type: string
      XPosition:
        format: double
        type: number
      YPosition:
        format: double
        type: number
      Angle:
        format: double
        type: number
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.PrivateSuiteConfiguration:
    type: object
    properties:
      Id:
        description: Id of the configuration.
        type: string
      Name:
        description: Name of the configuration.
        type: string
      Default:
        description: >-
          Specifies whether this is the default configuration for an asset. An
          asset will always have one default configuration.
        type: boolean
      ConfigurationCategoryId:
        format: int32
        description: User-defined category to categorise a configuration
        type: integer
      ConfigurationCategory:
        type: string
      Capacity:
        format: int32
        description: >-
          Capacity, which is usually measured in number of people, that the
          configuration can accommodate.
        type: integer
      Private:
        description: If set to private, only one customer can book the facility.
        type: boolean
      Description:
        description: Describes the configuration in detail.
        type: string
      Keywords:
        description: Keywords applicable to search the configuration.
        type: string
      SetupTime:
        format: int32
        description: Default setup time for the configuration
        type: integer
      TeardownTime:
        format: int32
        description: Default teardown time for the configuration
        type: integer
      UnitOfMesurementId:
        format: int32
        description: >-
          Default measurement units for specifying the dimensions of
          configuration objects
        type: integer
      UnitOfMesurement:
        description: The name of the measurement unit.
        type: string
      Documents:
        description: Specifies the documents associated with a configuration.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Document'
      Multimedia:
        description: Specifies the media files associated with a configuration.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Multimedia'
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      InternetName:
        description: >-
          The name to be displayed for users making bookings online in the
          public web portal.
        type: string
      ConfigurationThumbnail:
        description: >-
          A thumbnail image representing the configuration. Should be 32 x 32
          pixels.
        type: string
      InternetEnabled:
        description: Decides whether this configuration is enabled for online bookings.
        type: boolean
      InternetDefault:
        description: >-
          Indicates whether this is the default configuration for online
          bookings.
        type: boolean
  Optimo.WebAPI.Models.ParkingSpaceConfiguration:
    type: object
    properties:
      ParkingSpaces:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.ParkingSpace'
      ConfigurationFileUrl:
        description: Background image for the parking space plan.
        type: string
      Id:
        description: Id of the configuration.
        type: string
      Name:
        description: Name of the configuration.
        type: string
      Default:
        description: >-
          Specifies whether this is the default configuration for an asset. An
          asset will always have one default configuration.
        type: boolean
      ConfigurationCategoryId:
        format: int32
        description: User-defined category to categorise a configuration
        type: integer
      ConfigurationCategory:
        type: string
      Capacity:
        format: int32
        description: >-
          Capacity, which is usually measured in number of people, that the
          configuration can accommodate.
        type: integer
      Private:
        description: If set to private, only one customer can book the facility.
        type: boolean
      Description:
        description: Describes the configuration in detail.
        type: string
      Keywords:
        description: Keywords applicable to search the configuration.
        type: string
      SetupTime:
        format: int32
        description: Default setup time for the configuration
        type: integer
      TeardownTime:
        format: int32
        description: Default teardown time for the configuration
        type: integer
      UnitOfMesurementId:
        format: int32
        description: >-
          Default measurement units for specifying the dimensions of
          configuration objects
        type: integer
      UnitOfMesurement:
        description: The name of the measurement unit.
        type: string
      Documents:
        description: Specifies the documents associated with a configuration.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Document'
      Multimedia:
        description: Specifies the media files associated with a configuration.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Multimedia'
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      InternetName:
        description: >-
          The name to be displayed for users making bookings online in the
          public web portal.
        type: string
      ConfigurationThumbnail:
        description: >-
          A thumbnail image representing the configuration. Should be 32 x 32
          pixels.
        type: string
      InternetEnabled:
        description: Decides whether this configuration is enabled for online bookings.
        type: boolean
      InternetDefault:
        description: >-
          Indicates whether this is the default configuration for online
          bookings.
        type: boolean
  Optimo.WebAPI.Models.ParkingSpace:
    type: object
    properties:
      Id:
        type: string
      Name:
        type: string
      SequenceNumber:
        format: int32
        type: integer
      ConfigurationObject:
        $ref: '#/definitions/Optimo.WebAPI.Models.ConfigurationObject'
      Width:
        format: double
        type: number
      Length:
        format: double
        type: number
      Color:
        format: double
        type: number
      UnitOfMesurementId:
        format: int32
        type: integer
      UnitOfMesurementName:
        type: string
      XPosition:
        format: double
        type: number
      YPosition:
        format: double
        type: number
      Angle:
        format: double
        type: number
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.EventTimeslot:
    description: >-
      An event timeslot is an abstract timeslot which manages common information
      that is used by public or private event timeslots.
    type: object
    properties:
      Capacity:
        format: int32
        description: >-
          The capacity of the asset. This will be retrieved from the
          configuration if the asset is a facility.
        type: integer
      AllocatedQuantity:
        format: int32
        description: >-
          Allocated quantity may include booked quantity (reserved stock booking
          status) and reserved quantity.
        type: integer
      AvailableQuantity:
        format: int32
        description: >-
          Available quantity (Capacity - Allocated Quantity) is critical for
          public and fusion events as it dictates how many more can be sold. For
          private events, the asset is just booked over time with no concern
          whether there is any further availability since no further bookiings
          can be taken (assuming the private event has reached a stock-reserved
          type status). In fact, availability may even be negative for private
          events (users will receive a warning when making the booking).
        type: integer
      SetupTimeslot:
        description: >-
          The setup timeslot associated with the event. It will always end
          immediately before the event timeslot starts.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.SetupTimeslot'
      TeardownTimeslot:
        description: >-
          The setup timeslot associated with the event. It will always start
          immediately after the event timeslot ends.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.TeardownTimeslot'
      Id:
        type: string
      StartTime:
        format: date-time
        description: The start date and time of the timeslot
        type: string
      EndTime:
        format: date-time
        description: The end date and time of the timeslot
        type: string
      AssetGroupTimeslot:
        $ref: '#/definitions/Optimo.WebAPI.Models.Timeslot'
        description: >-
          If this is a timeslot included in a asset group timeslot, this
          indicates the asset group timeslot owner
      AssetGroupTimeslotPeriods:
        description: >-
          This collection is populated only if this timeslot has an asset which
          is an asset group
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.AssetGroupTimeslotPeriod'
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      Asset:
        $ref: '#/definitions/Optimo.WebAPI.Models.Asset.Result.Asset'
      Reserved:
        type: boolean
      ReservationId:
        type: string
      ExpiryDate:
        format: date-time
        type: string
  Optimo.WebAPI.Models.SetupTimeslot:
    description: >-
      A setup timeslot is used to block some time immediately before an event
      timeslot to carry out setup activities.
    type: object
    properties:
      Note:
        type: string
      Owner:
        $ref: '#/definitions/Optimo.WebAPI.Models.Timeslot'
        description: Can be of type Eventtimeslot or FusionEventtimeslot
      OwnerID:
        format: int32
        type: integer
      Preliminary:
        type: boolean
      Id:
        type: string
      StartTime:
        format: date-time
        description: The start date and time of the timeslot
        type: string
      EndTime:
        format: date-time
        description: The end date and time of the timeslot
        type: string
      AssetGroupTimeslot:
        $ref: '#/definitions/Optimo.WebAPI.Models.Timeslot'
        description: >-
          If this is a timeslot included in a asset group timeslot, this
          indicates the asset group timeslot owner
      AssetGroupTimeslotPeriods:
        description: >-
          This collection is populated only if this timeslot has an asset which
          is an asset group
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.AssetGroupTimeslotPeriod'
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      Asset:
        $ref: '#/definitions/Optimo.WebAPI.Models.Asset.Result.Asset'
      Reserved:
        type: boolean
      ReservationId:
        type: string
      ExpiryDate:
        format: date-time
        type: string
  Optimo.WebAPI.Models.TeardownTimeslot:
    description: >-
      A teardown timeslot is used to block some time immediately after an event
      timeslot to carry out teardown and cleanup activities.
    type: object
    properties:
      Note:
        type: string
      Owner:
        $ref: '#/definitions/Optimo.WebAPI.Models.Timeslot'
        description: Can be of type Eventtimeslot or FusionEventtimeslot
      OwnerID:
        format: int32
        type: integer
      Preliminary:
        type: boolean
      Id:
        type: string
      StartTime:
        format: date-time
        description: The start date and time of the timeslot
        type: string
      EndTime:
        format: date-time
        description: The end date and time of the timeslot
        type: string
      AssetGroupTimeslot:
        $ref: '#/definitions/Optimo.WebAPI.Models.Timeslot'
        description: >-
          If this is a timeslot included in a asset group timeslot, this
          indicates the asset group timeslot owner
      AssetGroupTimeslotPeriods:
        description: >-
          This collection is populated only if this timeslot has an asset which
          is an asset group
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.AssetGroupTimeslotPeriod'
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      Asset:
        $ref: '#/definitions/Optimo.WebAPI.Models.Asset.Result.Asset'
      Reserved:
        type: boolean
      ReservationId:
        type: string
      ExpiryDate:
        format: date-time
        type: string
  Optimo.WebAPI.Models.PublicEventTimeslot:
    description: >-
      A public event timeslot is an abstract timeslot which is linked to a
      public event. Public event timeslot types include public event facility,
      resource and branding area timeslots.
    type: object
    properties:
      PrimaryEventId:
        format: int32
        description: >-
          A public event timeslot may be shared amongst two or more public
          events, but there will always be one primary event (e.g. to display in
          the diary).
        type: integer
      PrimaryEvent:
        type: string
      Events:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.PublicEvent'
      EventDates:
        description: >-
          If shared, this can contain multiple event date records (although the
          date will all be the same, an event date record also contains
          additional information).
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.EventDate'
      Shared:
        description: >-
          Indicates whether the slot is shared amongst other public events. Note
          also <code>Fusion timeslots</code>, which can be used to share public
          and private events.
        type: boolean
      Bookings:
        description: A link to retrieve the bookings for this slot.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Booking.V1.Booking'
      Packages:
        description: A link to retrieve public packages applicable for this slot.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Packages.Package'
      Capacity:
        format: int32
        description: >-
          The capacity of the asset. This will be retrieved from the
          configuration if the asset is a facility.
        type: integer
      AllocatedQuantity:
        format: int32
        description: >-
          Allocated quantity may include booked quantity (reserved stock booking
          status) and reserved quantity.
        type: integer
      AvailableQuantity:
        format: int32
        description: >-
          Available quantity (Capacity - Allocated Quantity) is critical for
          public and fusion events as it dictates how many more can be sold. For
          private events, the asset is just booked over time with no concern
          whether there is any further availability since no further bookiings
          can be taken (assuming the private event has reached a stock-reserved
          type status). In fact, availability may even be negative for private
          events (users will receive a warning when making the booking).
        type: integer
      SetupTimeslot:
        description: >-
          The setup timeslot associated with the event. It will always end
          immediately before the event timeslot starts.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.SetupTimeslot'
      TeardownTimeslot:
        description: >-
          The setup timeslot associated with the event. It will always start
          immediately after the event timeslot ends.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.TeardownTimeslot'
      Id:
        type: string
      StartTime:
        format: date-time
        description: The start date and time of the timeslot
        type: string
      EndTime:
        format: date-time
        description: The end date and time of the timeslot
        type: string
      AssetGroupTimeslot:
        $ref: '#/definitions/Optimo.WebAPI.Models.Timeslot'
        description: >-
          If this is a timeslot included in a asset group timeslot, this
          indicates the asset group timeslot owner
      AssetGroupTimeslotPeriods:
        description: >-
          This collection is populated only if this timeslot has an asset which
          is an asset group
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.AssetGroupTimeslotPeriod'
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      Asset:
        $ref: '#/definitions/Optimo.WebAPI.Models.Asset.Result.Asset'
      Reserved:
        type: boolean
      ReservationId:
        type: string
      ExpiryDate:
        format: date-time
        type: string
  Optimo.WebAPI.Models.PublicEvent:
    description: >-
      A public event schedules in and reserves one or more assets over one or
      more event days.
    type: object
    properties:
      EventDates:
        description: One or more event dates when the public event is scheduled for.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.EventDate'
      EventAssets:
        description: >-
          One or more assets reserved for the public event, on some or all of
          the event days.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.EventAsset'
      EventTimeslots:
        description: >-
          One or more timeslots, which are assets, optionally including setup
          and teardown time, scheduled in over a period of time. Only assets
          included in the EventAssets collection and dates included in the
          EventDates colleciton may exist in an event timeslot.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.EventTimeslot'
      PriceMinimum:
        format: double
        description: Lowest priced package in the event (per person, excluding taxes)
        type: number
      PriceMaximum:
        format: double
        description: Highest priced package in the event (per person, excluding taxes)
        type: number
      HasSeating:
        description: >-
          Indicates whether the event has got any numbered seating items (which
          are sold through ticket type items)
        type: boolean
      HasDining:
        description: Indicates whether the event has got any dining packages
        type: boolean
      HasPrivateSuites:
        description: >-
          Indicates whether the event has got any private suite packages
          (determined by Configuration.Private)
        type: boolean
      HasBrandingAreas:
        description: Indicates whether the event has got any dining packages
        type: boolean
      ClientCategoryRestrictions:
        description: >-
          Can be used to set max limits different types of clients may puchase
          for an event
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.ClientCategoryRestriction'
      PackageClassRules:
        description: >-
          Can be used to set qualifying purchases in order to buy the most
          popular type of packages. Aka "ABC Rule".
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.PackageClassRule'
      Id:
        type: string
      Name:
        type: string
      Description:
        description: The event description is normally for internal use.
        type: string
      EventCategoryId:
        format: int32
        description: >-
          The event category for an event can be used for filtering and
          reporting.
        type: integer
      EventCategory:
        type: string
      PrimaryVenue:
        $ref: '#/definitions/Optimo.WebAPI.Models.Venue'
        description: >-
          An event may take place over multiple venues. This is used to simplify
          reporting and adhering to policies in such cases.
      EventGroupId:
        format: int32
        description: >-
          The event group for an event is designed to group recurring events,
          e.g. an annual conference, together, for reporting.
        type: integer
      EventGroup:
        type: string
      EventStartDate:
        format: date-time
        description: >-
          Event days must remain within the event start and end date range, but
          there must not necessarily be an event date defined on the event start
          date.
        type: string
      EventEndDate:
        format: date-time
        description: >-
          Event days must remain within the event start and end date range, but
          there must not necessarily be an event date defined on the event end
          date.
        type: string
      EventManagerId:
        format: int32
        description: >-
          Public events: Main event manager, which can be overrIdden at function
          sheet level Private events: The default event manager will be assigned
          to any instances of the event unless specified.
        type: integer
      EventManagerUserName:
        type: string
      Keywords:
        type: string
      MinimumMargin:
        format: double
        type: number
      WebDescription:
        description: >-
          Can be used to manage event content in HTML format for display on
          customer facing websites or internal applications.
        type: string
      Active:
        type: boolean
      VenueMap:
        $ref: '#/definitions/Optimo.WebAPI.Models.map.VenueMap'
        description: Can be used to present packages through a visual venue map
      Multimedia:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Multimedia'
      Documents:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Document'
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      BookingTypes:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Package.BookingType'
  Optimo.WebAPI.Models.EventAsset:
    type: object
    properties:
      Id:
        type: string
      Asset:
        $ref: '#/definitions/Optimo.WebAPI.Models.Asset.Result.Asset'
      AssetQuantity:
        format: int32
        type: integer
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.ClientCategoryRestriction:
    type: object
    properties:
      Id:
        type: string
      ClientCategory:
        $ref: '#/definitions/Optimo.WebAPI.Models.ClientCategory'
      MaxCovers:
        format: int32
        type: integer
      DefaultCoversPerClient:
        format: int32
        type: integer
      Audits:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.PackageClassRule:
    type: object
    properties:
      Id:
        type: string
      PackageClassID:
        format: int32
        type: integer
      PackageClass:
        type: string
      Quantity:
        format: int32
        type: integer
      Audits:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.PublicEventFacilityTimeslot:
    description: >-
      This is a concrete class, which is a public event timeslot using a
      facility. An event configuration is always present.
    type: object
    properties:
      Asset:
        $ref: '#/definitions/Optimo.WebAPI.Models.Asset.Result.Asset'
      EventConfiguration:
        $ref: '#/definitions/Optimo.WebAPI.Models.EventConfiguration'
        description: >-
          The event configuration may be changed from one configuration to
          another as well as partially modified for a particular timeslot.
      PrimaryEventId:
        format: int32
        description: >-
          A public event timeslot may be shared amongst two or more public
          events, but there will always be one primary event (e.g. to display in
          the diary).
        type: integer
      PrimaryEvent:
        type: string
      Events:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.PublicEvent'
      EventDates:
        description: >-
          If shared, this can contain multiple event date records (although the
          date will all be the same, an event date record also contains
          additional information).
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.EventDate'
      Shared:
        description: >-
          Indicates whether the slot is shared amongst other public events. Note
          also <code>Fusion timeslots</code>, which can be used to share public
          and private events.
        type: boolean
      Bookings:
        description: A link to retrieve the bookings for this slot.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Booking.V1.Booking'
      Packages:
        description: A link to retrieve public packages applicable for this slot.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Packages.Package'
      Capacity:
        format: int32
        description: >-
          The capacity of the asset. This will be retrieved from the
          configuration if the asset is a facility.
        type: integer
      AllocatedQuantity:
        format: int32
        description: >-
          Allocated quantity may include booked quantity (reserved stock booking
          status) and reserved quantity.
        type: integer
      AvailableQuantity:
        format: int32
        description: >-
          Available quantity (Capacity - Allocated Quantity) is critical for
          public and fusion events as it dictates how many more can be sold. For
          private events, the asset is just booked over time with no concern
          whether there is any further availability since no further bookiings
          can be taken (assuming the private event has reached a stock-reserved
          type status). In fact, availability may even be negative for private
          events (users will receive a warning when making the booking).
        type: integer
      SetupTimeslot:
        description: >-
          The setup timeslot associated with the event. It will always end
          immediately before the event timeslot starts.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.SetupTimeslot'
      TeardownTimeslot:
        description: >-
          The setup timeslot associated with the event. It will always start
          immediately after the event timeslot ends.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.TeardownTimeslot'
      Id:
        type: string
      StartTime:
        format: date-time
        description: The start date and time of the timeslot
        type: string
      EndTime:
        format: date-time
        description: The end date and time of the timeslot
        type: string
      AssetGroupTimeslot:
        $ref: '#/definitions/Optimo.WebAPI.Models.Timeslot'
        description: >-
          If this is a timeslot included in a asset group timeslot, this
          indicates the asset group timeslot owner
      AssetGroupTimeslotPeriods:
        description: >-
          This collection is populated only if this timeslot has an asset which
          is an asset group
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.AssetGroupTimeslotPeriod'
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      Reserved:
        type: boolean
      ReservationId:
        type: string
      ExpiryDate:
        format: date-time
        type: string
  Optimo.WebAPI.Models.PublicEventResourceTimeslot:
    description: >-
      This is a concrete class, which is a public event timeslot using a
      resource.
    type: object
    properties:
      Asset:
        $ref: '#/definitions/Optimo.WebAPI.Models.Asset.Result.Asset'
      PrimaryEventId:
        format: int32
        description: >-
          A public event timeslot may be shared amongst two or more public
          events, but there will always be one primary event (e.g. to display in
          the diary).
        type: integer
      PrimaryEvent:
        type: string
      Events:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.PublicEvent'
      EventDates:
        description: >-
          If shared, this can contain multiple event date records (although the
          date will all be the same, an event date record also contains
          additional information).
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.EventDate'
      Shared:
        description: >-
          Indicates whether the slot is shared amongst other public events. Note
          also <code>Fusion timeslots</code>, which can be used to share public
          and private events.
        type: boolean
      Bookings:
        description: A link to retrieve the bookings for this slot.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Booking.V1.Booking'
      Packages:
        description: A link to retrieve public packages applicable for this slot.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Packages.Package'
      Capacity:
        format: int32
        description: >-
          The capacity of the asset. This will be retrieved from the
          configuration if the asset is a facility.
        type: integer
      AllocatedQuantity:
        format: int32
        description: >-
          Allocated quantity may include booked quantity (reserved stock booking
          status) and reserved quantity.
        type: integer
      AvailableQuantity:
        format: int32
        description: >-
          Available quantity (Capacity - Allocated Quantity) is critical for
          public and fusion events as it dictates how many more can be sold. For
          private events, the asset is just booked over time with no concern
          whether there is any further availability since no further bookiings
          can be taken (assuming the private event has reached a stock-reserved
          type status). In fact, availability may even be negative for private
          events (users will receive a warning when making the booking).
        type: integer
      SetupTimeslot:
        description: >-
          The setup timeslot associated with the event. It will always end
          immediately before the event timeslot starts.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.SetupTimeslot'
      TeardownTimeslot:
        description: >-
          The setup timeslot associated with the event. It will always start
          immediately after the event timeslot ends.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.TeardownTimeslot'
      Id:
        type: string
      StartTime:
        format: date-time
        description: The start date and time of the timeslot
        type: string
      EndTime:
        format: date-time
        description: The end date and time of the timeslot
        type: string
      AssetGroupTimeslot:
        $ref: '#/definitions/Optimo.WebAPI.Models.Timeslot'
        description: >-
          If this is a timeslot included in a asset group timeslot, this
          indicates the asset group timeslot owner
      AssetGroupTimeslotPeriods:
        description: >-
          This collection is populated only if this timeslot has an asset which
          is an asset group
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.AssetGroupTimeslotPeriod'
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      Reserved:
        type: boolean
      ReservationId:
        type: string
      ExpiryDate:
        format: date-time
        type: string
  Optimo.WebAPI.Models.Asset.Filters.AssetFilter:
    type: object
    properties:
      SearchText:
        description: >-
          Partial match search covering Name, Description, Keywords, Asset Type
          and Asset Category
        type: string
      AssetName:
        description: Partial match
        type: string
      Keywords:
        description: Match one or more keywords (send multiple keywords comma separated)
        type: string
      VenueId:
        description: >-
          The venue which the asset belongs to. Multiple venue Ids may be sent
          comma separated.
        type: array
        items:
          format: int32
          type: integer
      CapacityFrom:
        format: int32
        description: >-
          Applies only to Facility (considering all configurations) and Resource
          records.
        type: integer
      CapacityTo:
        format: int32
        description: >-
          Applies only to Facility (considering all configurations) and Resource
          records.
        type: integer
      EventID:
        format: int32
        description: Must be a public event
        type: integer
      AssetClassId:
        description: 1-Facility, 2-Resource, 3-Branding Area
        type: array
        items:
          format: int32
          type: integer
      AssetTypeId:
        description: >-
          Filter by one or more asset types (Facility Type, Resource Type or
          Branding Area Type) in a comma separated list.
        type: array
        items:
          format: int32
          type: integer
      AssetCategoryId:
        type: array
        items:
          format: int32
          type: integer
      ConfigurationTypeId:
        description: Configurations are only applicable for Facility type assets
        type: array
        items:
          format: int32
          type: integer
      ConfigurationCategoryId:
        description: Configurations are only applicable for Facility type assets
        type: array
        items:
          format: int32
          type: integer
      ActiveStatus:
        description: 1-Only Active, 2-Only Inactive, 3-All
        enum:
          - OnlyActive
          - OnlyInactive
          - All
        type: string
      Duration:
        format: int32
        description: >-
          Use duration (in minutes) in conjunction with start and end time
          filters to find an available asset.
        type: integer
      StartTime:
        format: date-time
        description: >-
          In order to find available assets for a given time, use start and end
          time filters as well as duration
        type: string
      EndTime:
        format: date-time
        description: >-
          In order to find available assets for a given time, use start and end
          time filters as well as duration
        type: string
      SalesChannelID:
        format: int32
        description: 'If retrieving assets to book online, filter by sales channel ID: 5'
        type: integer
      ConsiderOpeningHours:
        description: >-
          When filtering by availability, this flag can be set to take opening
          hours into account.
        type: boolean
      SalesCategoryId:
        description: >-
          In order to find assets linked to items matching a given sales
          category, use this filter.
        type: array
        items:
          format: int32
          type: integer
      AssetIds:
        description: >-
          To retrieve details about a list of known assets, provide asset Ids in
          comma separated format
        type: array
        items:
          type: string
      PriceConcessionIds:
        description: To find assets linked to items with a a specific price concession
        type: array
        items:
          type: string
      BookingTypeIds:
        description: To find assets suitable for a given booking type
        type: array
        items:
          type: string
      ConsiderPreliminaryAsUnavailable:
        description: >-
          When filtering for available assets within a period, you can use this
          option to treat preliminarily booked assets as unavailable.
        type: boolean
      ItemTypeIds:
        description: To find assets linked to items of a specific item type
        type: array
        items:
          format: int32
          type: integer
  Optimo.WebAPI.Models.Paging:
    type: object
    properties:
      number:
        type: string
      size:
        type: string
  Optimo.WebAPI.Models.AssetCategoryFilter:
    type: object
    properties:
      AssetClassId:
        type: array
        items:
          format: int32
          type: integer
  Optimo.WebAPI.Models.AssetCategory:
    type: object
    properties:
      Id:
        description: Asset category Id.
        type: string
      Name:
        description: Name of the asset category.
        type: string
      AssetClassId:
        format: int32
        description: Asset class for which the asset category is applicable for.
        type: integer
      AssetCount:
        format: int32
        description: Number of assets having the asset category.
        type: integer
      Assets:
        description: List of assets having the asset category.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Asset.Result.Asset'
  Optimo.WebAPI.Models.AssetTypeFilter:
    type: object
    properties:
      AssetClassId:
        type: array
        items:
          format: int32
          type: integer
  Optimo.WebAPI.Models.AssetType:
    type: object
    properties:
      Id:
        description: Asset type Id.
        type: string
      Name:
        description: Name of the asset type.
        type: string
      AssetClassID:
        format: int32
        description: Asset class for which the asset type is applicable for.
        type: integer
      AssetCount:
        format: int32
        description: Number of assets having the asset type.
        type: integer
      Assets:
        description: List of assets having the asset type.
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Asset.Result.Asset'
  Optimo.WebAPI.Models.TimeslotFilters:
    type: object
    properties:
      VenueID:
        type: array
        items:
          format: int32
          type: integer
      AssetTypeId:
        type: array
        items:
          format: int32
          type: integer
      AssetClassId:
        type: array
        items:
          format: int32
          type: integer
      StartTime:
        format: date-time
        type: string
      EndTime:
        format: date-time
        type: string
      Days:
        type: array
        items:
          format: date-time
          type: string
      EventId:
        type: array
        items:
          format: int32
          type: integer
      FromDate:
        format: date-time
        type: string
      ToDate:
        format: date-time
        type: string
      TimeslotTypeId:
        type: array
        items:
          format: int32
          type: integer
      EventTypeID:
        format: int32
        type: integer
      AssetID:
        type: array
        items:
          format: int32
          type: integer
      BookingId:
        format: int32
        type: integer
      BookingItemId:
        type: array
        items:
          format: int32
          type: integer
  Optimo.WebAPI.Models.TimeslotSelectFilters:
    type: object
    properties:
      FromDate:
        format: date-time
        type: string
      ToDate:
        format: date-time
        type: string
      TimeslotTypeId:
        type: array
        items:
          format: int32
          type: integer
      EventTypeID:
        format: int32
        type: integer
      AssetID:
        type: array
        items:
          format: int32
          type: integer
      BookingId:
        format: int32
        type: integer
      BookingItemId:
        type: array
        items:
          format: int32
          type: integer
  Optimo.WebAPI.Models.BlockTimeslotFilters:
    type: object
    properties:
      AssetID:
        type: array
        items:
          format: int32
          type: integer
      VenueID:
        type: array
        items:
          format: int32
          type: integer
      FromDate:
        format: date-time
        type: string
      ToDate:
        format: date-time
        type: string
      EventTypeId:
        format: int32
        type: integer
  Optimo.WebAPI.Models.BlockedTimeslot:
    description: >-
      A blocked timeslot is used to block out a timeslot for non-event
      activities, e.g. maintenance. No other blocking timeslot may overlap a
      blocked timeslot.
    type: object
    properties:
      BlockingCategoryId:
        format: int32
        type: integer
      BlockingCategory:
        type: string
      Note:
        type: string
      Asset:
        $ref: '#/definitions/Optimo.WebAPI.Models.Asset.Result.Asset'
      Documents:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Document'
      MultidayId:
        description: Indicate whether timeslot is a part of multiday blocked timeslot
        type: string
      Id:
        type: string
      StartTime:
        format: date-time
        description: The start date and time of the timeslot
        type: string
      EndTime:
        format: date-time
        description: The end date and time of the timeslot
        type: string
      AssetGroupTimeslot:
        $ref: '#/definitions/Optimo.WebAPI.Models.Timeslot'
        description: >-
          If this is a timeslot included in a asset group timeslot, this
          indicates the asset group timeslot owner
      AssetGroupTimeslotPeriods:
        description: >-
          This collection is populated only if this timeslot has an asset which
          is an asset group
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.AssetGroupTimeslotPeriod'
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      Reserved:
        type: boolean
      ReservationId:
        type: string
      ExpiryDate:
        format: date-time
        type: string
    example:
      data:
        type: blockedTimeslot
        attributes:
          blockingCategoryId: 1
          note: Maintenance inspection
          startTime: 2021-12-06T18:00:00
          endTime: 2021-12-06T19:00:00
        relationships:
          asset:
            data:
              id: '1'
              type: asset
          documents:
            data:
              - id: '1'
                type: document
      included:
        - type: asset
          id: '1'
          attributes:
            default: true
          links:
            related: '#{BASE_URL}api/v4.1/assets/1'
        - type: document
          id: '1'
          attributes:
            uploadedTime: 0001-01-01T00:00:00
  Optimo.WebAPI.Models.AssetDiaryAgendaFilter:
    type: object
    properties:
      AssetID:
        type: array
        items:
          format: int32
          type: integer
      VenueID:
        type: array
        items:
          format: int32
          type: integer
      FromDate:
        format: date-time
        type: string
      ToDate:
        format: date-time
        type: string
      SearchText:
        type: string
      AssetTypeId:
        format: int32
        type: integer
      AssetCategoryId:
        format: int32
        type: integer
      EventId:
        format: int32
        type: integer
  Optimo.WebAPI.Models.DiaryAgenda.Result.AgendaActivity:
    type: object
    properties:
      Id:
        type: string
      AssetId:
        format: int32
        type: integer
      Date:
        format: date-time
        type: string
      StartTime:
        format: date-time
        type: string
      EndTime:
        format: date-time
        type: string
      EventDescription:
        type: string
      AssetDescription:
        type: string
      BookingId:
        format: int32
        type: integer
      EventTypeId:
        format: int32
        type: integer
      AssetIdList:
        type: string
  Optimo.WebAPI.Models.Item.Filters.ItemFilters:
    type: object
    properties:
      SearchText:
        type: string
      VenueId:
        type: array
        items:
          format: int32
          type: integer
      AssetId:
        type: array
        items:
          format: int32
          type: integer
      AssetClassId:
        type: array
        items:
          format: int32
          type: integer
      EventID:
        format: int32
        type: integer
      SalesCategoryId:
        type: array
        items:
          format: int32
          type: integer
      FromDate:
        format: date-time
        type: string
      ToDate:
        format: date-time
        type: string
      ConfigurationId:
        format: int32
        type: integer
      ActiveStatus:
        enum:
          - OnlyActive
          - OnlyInactive
          - All
        type: string
      CurrencyId:
        format: int32
        type: integer
      PriceConcessionID:
        format: int32
        type: integer
  Optimo.WebAPI.Models.Booking.Filter.BookingFilters:
    type: object
    properties:
      SearchText:
        type: string
      BookingRef:
        type: string
      ClientRef:
        type: string
      ContactRef:
        type: string
      ClientName:
        type: string
      ContactName:
        type: string
      PackageName:
        type: string
      Referrer:
        type: string
      ContactPostCode:
        type: string
      ContactEmailAddress:
        type: string
      ContactPhoneNo:
        type: string
      BookingStatusId:
        type: array
        items:
          format: int32
          type: integer
      InvoiceRef:
        type: string
      VenueId:
        type: array
        items:
          format: int32
          type: integer
      Host:
        type: string
      AssetId:
        type: array
        items:
          format: int32
          type: integer
      EventId:
        type: array
        items:
          format: int32
          type: integer
      EventName:
        type: string
      SalesChannelId:
        format: int32
        type: integer
      SalesAssistantId:
        format: int32
        type: integer
      TemporaryBookingsOnly:
        type: boolean
      EventdateFrom:
        format: date-time
        type: string
      EventdateTo:
        format: date-time
        type: string
      BookingDateFrom:
        format: date-time
        type: string
      BookingDateTo:
        format: date-time
        type: string
      POreference:
        type: string
      TicketRef:
        type: string
      PastEventBookings:
        type: boolean
      AllocationStatus:
        format: int32
        type: integer
      InvoiceStatus:
        type: array
        items:
          format: int32
          type: integer
      DespatchStatus:
        format: int32
        type: integer
      PaymentStatus:
        type: array
        items:
          format: int32
          type: integer
      UserId:
        type: array
        items:
          format: int32
          type: integer
      BookingReason:
        type: array
        items:
          format: int32
          type: integer
      AlternativeBookingRef:
        type: string
      ExternalBookingId:
        type: string
      TimeslotID:
        format: int32
        type: integer
      StockAllocationStatus:
        type: boolean
      UpdateBefore:
        format: date-time
        type: string
      UpdateAfter:
        format: date-time
        type: string
      NoteTypeId:
        type: array
        items:
          format: int32
          type: integer
      BookingTypeIds:
        type: array
        items:
          format: int32
          type: integer
      ExternalAddressId:
        type: string
      ContactIds:
        type: array
        items:
          format: int32
          type: integer
      EntityNoteTypeIds:
        type: array
        items:
          format: int32
          type: integer
      CollectionStatusIds:
        type: array
        items:
          format: int32
          type: integer
      CollectionAddress:
        type: string
  Optimo.WebAPI.Models.ConfigurationCategory:
    type: object
    properties:
      Id:
        description: Id of the configuration category.
        type: string
      Name:
        description: Configuration category name.
        type: string
      Icon:
        description: URL to icon representing the configuration category
        type: string
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.ConfigurationType:
    type: object
    properties:
      Id:
        description: Id of the configuration type.
        type: string
      Name:
        description: Configuration type name.
        type: string
  Optimo.WebAPI.Models.Asset.BlockCategory:
    description: Categorises maintainance blocks.
    type: object
    properties:
      Id:
        description: Id of the block category.
        type: string
      Name:
        description: Name of the block category.
        type: string
      Active:
        description: Indicates whether the block category is active.
        type: boolean
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.Asset.Filters.PriceBandFilter:
    type: object
    properties: {}
  Optimo.WebAPI.Models.Asset.PriceBand:
    description: >-
      Price bands are used to categorise seats, tables and other configuration
      objects into different price levels.
    type: object
    properties:
      Id:
        format: int32
        description: Id of the price band.
        type: integer
      Name:
        description: Name of the price band.
        type: string
      Prefix:
        description: >-
          Abbreviation of the price band in order to indicate visually on
          layouts.
        type: string
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.Asset.Filters.RankFilter:
    type: object
    properties: {}
  Optimo.WebAPI.Models.Asset.Ranks:
    description: >-
      Maintains rank levels, which are used to determine order of auto-selecting
      best seats in a seating chart.
    type: object
    properties:
      Id:
        format: int32
        description: Id of the rank.
        type: integer
      Name:
        format: int32
        description: Name of the rank.
        type: integer
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.Asset.Filters.SeatFilter:
    type: object
    properties:
      ColumnName:
        type: string
      RowName:
        type: string
      BlockId:
        type: array
        items:
          format: int32
          type: integer
      PriceBandId:
        type: array
        items:
          format: int32
          type: integer
      Aisle:
        type: boolean
      NonSeatingArea:
        type: boolean
  Optimo.WebAPI.Models.EventSeat:
    type: object
    properties:
      Block:
        $ref: '#/definitions/Optimo.WebAPI.Models.Block'
      SeatColumnNo:
        format: int32
        type: integer
      SeatColumnName:
        type: string
      SeatRowNo:
        format: int32
        type: integer
      SeatRowName:
        type: string
      SeatNumber:
        format: int32
        type: integer
      Aisle:
        type: boolean
      NonSeated:
        type: boolean
      PriceBandId:
        format: int32
        type: integer
      PriceBandName:
        type: string
      RankId:
        format: int32
        type: integer
      Rank:
        type: string
      Allocated:
        type: boolean
      Unavailable:
        type: boolean
      Id:
        type: string
      Name:
        type: string
      Reserved:
        type: boolean
      ReservedUser:
        type: string
      Note:
        type: string
      SequenceNumber:
        format: int32
        type: integer
      configurationObject:
        $ref: '#/definitions/Optimo.WebAPI.Models.ConfigurationObject'
      Width:
        format: double
        type: number
      Length:
        format: double
        type: number
      Color:
        format: double
        type: number
      UnitOfMesurementId:
        format: int32
        type: integer
      UnitOfMesurementName:
        type: string
      XPosition:
        format: double
        type: number
      YPosition:
        format: double
        type: number
      Angle:
        format: double
        type: number
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.Allocation.SeatAllocation:
    type: object
    properties:
      Seat:
        $ref: '#/definitions/Optimo.WebAPI.Models.EventSeat'
      Id:
        type: string
      BookingItem:
        $ref: '#/definitions/Optimo.WebAPI.Models.Booking.V1.BookingItem'
      Timeslot:
        $ref: '#/definitions/Optimo.WebAPI.Models.Timeslot'
      Host:
        $ref: '#/definitions/Optimo.WebAPI.Models.Booking.Host'
      Attendee:
        $ref: '#/definitions/Optimo.WebAPI.Models.Booking.Attendee'
      Preliminary:
        type: boolean
      Reserved:
        type: boolean
      ResevationId:
        type: string
      ExpiryDate:
        format: date-time
        type: string
      Attendees:
        format: int32
        type: integer
  Optimo.WebAPI.Models.Booking.Host:
    type: object
    properties:
      Id:
        type: string
      HostReference:
        type: string
      Booking:
        $ref: '#/definitions/Optimo.WebAPI.Models.Booking.V1.Booking'
      BookingPackage:
        $ref: '#/definitions/Optimo.WebAPI.Models.Booking.V1.BookingPackage'
      TitleId:
        format: int32
        type: integer
      TitleName:
        type: string
      FirstName:
        type: string
      LastName:
        type: string
      CompanyName:
        type: string
      Attendees:
        format: int32
        type: integer
      CateringNotes:
        type: string
      NamedHost:
        type: boolean
      SpecialInstruction:
        type: string
      PackageDate:
        $ref: '#/definitions/Optimo.WebAPI.Models.Packages.PackageDate'
      Client:
        $ref: '#/definitions/Optimo.WebAPI.Models.Customer.Client'
      Contact:
        $ref: '#/definitions/Optimo.WebAPI.Models.Customer.Contact'
      Guests:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Booking.Attendee'
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
      Address:
        $ref: '#/definitions/Optimo.WebAPI.Models.Customer.Address'
      CommunicationMethods:
        type: array
        items:
          $ref: '#/definitions/Optimo.WebAPI.Models.Customer.CommunicationMethod'
  Optimo.WebAPI.Models.Booking.Attendee:
    type: object
    properties:
      Id:
        type: string
      TitleID:
        format: int32
        type: integer
      TitleName:
        type: string
      FirstName:
        type: string
      LastName:
        type: string
      CompanyName:
        type: string
      Note:
        type: string
      Host:
        $ref: '#/definitions/Optimo.WebAPI.Models.Booking.Host'
      Booking:
        $ref: '#/definitions/Optimo.WebAPI.Models.Booking.V1.Booking'
      BookingPackage:
        $ref: '#/definitions/Optimo.WebAPI.Models.Booking.V1.BookingPackage'
      HostGuest:
        type: boolean
      NamedHostGuest:
        type: boolean
      AuditInfo:
        $ref: '#/definitions/Optimo.WebAPI.Models.Audit.AuditInfo'
  Optimo.WebAPI.Models.EnquiryFilters:
    type: object
    properties:
      SearchText:
        type: string
      ClientId:
        format: int32
        type: integer
      ContactId:
        format: int32
        type: integer
      VenueId:
        type: array
        items:
          format: int32
          type: integer
      EventId:
        type: array
        items:
          format: int32
          type: integer
      AssetId:
        type: array
        items:
          format: int32
          type: integer
      SalesAssistant:
        type: array
        items:
          format: int32
          type: integer
      EnquiryFrom:
        format: date-time
        type: string
      EnquiryTo:
        format: date-time
        type: string
      EnquiryStatus:
        format: int32
        type: integer
  Optimo.WebAPI.Models.Common.PostResponse:
    type: object
    properties:
      Id:
        type: string
      Status:
        type: boolean
  Optimo.WebAPI.Models.Security.LoginDetail:
    type: object
    properties:
      Username:
        type: string
      Password:
        type: string
  Optimo.WebAPI.Models.Security.UserFilters:
    type: object
    properties:
      SearchText:
        type: string
      ActiveStatus:
        format: int32
        type: integer
      UserName:
        type: string
      JobPosition:
        type: string
      VenueID:
        type: array
        items:
          format: int32
          type: integer
      GroupId:
        type: array
        items:
          format: int32
          type: integer
      SalesAssistants:
        type: boolean
      EventManagers:
        type: boolean
  Optimo.WebAPI.Models.Users.OverrideUser:
    type: object
    properties:
      UserName:
        type: string
      Password:
        type: string
      APIGUID:
        type: string
      AccessRightNo:
        format: int32
        type: integer
  Optimo.WebAPI.Models.Users.UserGroupFilters:
    type: object
    properties:
      Name:
        type: string
      UserId:
        type: array
        items:
          format: int32
          type: integer
      Department:
        enum:
          - All
          - SalesDepartment
          - EventDepartment
        type: string
      UserName:
        type: string
      VenueID:
        type: array
        items:
          format: int32
          type: integer
securityDefinitions:
  Token:
    type: apiKey
    description: API Authentication
    name: Token
    in: header
